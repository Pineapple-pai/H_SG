<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [./build/SG_CHASSIS_C_2024_11_5/SG_CHASSIS_C_2024_11_5.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ./build/SG_CHASSIS_C_2024_11_5/SG_CHASSIS_C_2024_11_5.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Fri Jul  4 16:57:48 2025
<BR><P>
<H3>Maximum Stack Usage =       1320 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ChassisTask &rArr; bool TaskManager::addTask&lang;Chassis_Task&rang;() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[120]">__user_initial_stackheap</a>
 <LI><a href="#[1d5]">__unw_getcontext</a>
 <LI><a href="#[53e]">unw_getcontext</a>
 <LI><a href="#[332]">libunwind::Registers_arm::saveVFPWithFSTMD(void*)</a>
 <LI><a href="#[330]">libunwind::Registers_arm::saveVFPWithFSTMX(void*)</a>
 <LI><a href="#[331]">libunwind::Registers_arm::saveVFPv3(void*)</a>
 <LI><a href="#[338]">libunwind::Registers_arm::restoreCoreAndJumpTo()</a>
 <LI><a href="#[33a]">libunwind::Registers_arm::restoreVFPWithFLDMD(void*)</a>
 <LI><a href="#[339]">libunwind::Registers_arm::restoreVFPWithFLDMX(void*)</a>
 <LI><a href="#[33b]">libunwind::Registers_arm::restoreVFPv3(void*)</a>
 <LI><a href="#[21c]">__cxa_end_cleanup</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[210]">__cxa_begin_catch</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ea]">std::terminate()</a><BR>
 <LI><a href="#[211]">std::__terminate(void (*)())</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[377]">__clang_call_terminate</a><BR>
 <LI><a href="#[ea]">std::terminate()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[377]">__clang_call_terminate</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[62]">ChassisTask</a> from ChassisTask.o(.text.ChassisTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[63]">CommunicationTask</a> from CommunicationTask.o(.text.CommunicationTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from stm32f4xx_it.o(.text.DMA1_Stream1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from stm32f4xx_it.o(.text.DMA1_Stream3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream6_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[66]">EventTask</a> from EvenTask.o(.text.EventTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[59]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(.text.NMI_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from port.o(.text.PendSV_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[65]">RLSTask</a> from PowerTask.o(.text.RLSTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[64]">RefeeTask</a> from RefeeTask.o(.text.RefeeTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from port.o(.text.SVC_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[61]">StartDefaultTask</a> from freertos.o(.text.StartDefaultTask) referenced 2 times from freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[9]">SysTick_Handler</a> from cmsis_os2.o(.text.SysTick_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from system_stm32f4xx.o(.text.SystemInit) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from stm32f4xx_it.o(.text.TIM6_DAC_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from stm32f4xx_it.o(.text.TIM7_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5d]">UART_DMAAbortOnError</a> from stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError) referenced 2 times from stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[60]">UART_DMAError</a> from stm32f4xx_hal_uart.o(.text.UART_DMAError) referenced 2 times from stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
 <LI><a href="#[60]">UART_DMAError</a> from stm32f4xx_hal_uart.o(.text.UART_DMAError) referenced 2 times from stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
 <LI><a href="#[67]">UART_DMAReceiveCplt</a> from stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt) referenced 2 times from stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
 <LI><a href="#[68]">UART_DMARxHalfCplt</a> from stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt) referenced 2 times from stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
 <LI><a href="#[5e]">UART_DMATransmitCplt</a> from stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt) referenced 2 times from stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
 <LI><a href="#[5f]">UART_DMATxHalfCplt</a> from stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt) referenced 2 times from stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f4xx_it.o(.text.USART1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from stm32f4xx_it.o(.text.USART3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from stm32f4xx_it.o(.text.USART6_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[e5]">_GLOBAL__sub_I_ChassisTask.cpp</a> from ChassisTask.o(.text._GLOBAL__sub_I_ChassisTask.cpp) referenced from ChassisTask.o(.init_array)
 <LI><a href="#[e6]">_GLOBAL__sub_I_CommunicationTask.cpp</a> from CommunicationTask.o(.text._GLOBAL__sub_I_CommunicationTask.cpp) referenced from CommunicationTask.o(.init_array)
 <LI><a href="#[e4]">_GLOBAL__sub_I_Dbus.cpp</a> from Dbus.o(.text._GLOBAL__sub_I_Dbus.cpp) referenced from Dbus.o(.init_array)
 <LI><a href="#[e7]">_GLOBAL__sub_I_EvenTask.cpp</a> from EvenTask.o(.text._GLOBAL__sub_I_EvenTask.cpp) referenced from EvenTask.o(.init_array)
 <LI><a href="#[e8]">_GLOBAL__sub_I_PowerTask.cpp</a> from PowerTask.o(.text._GLOBAL__sub_I_PowerTask.cpp) referenced from PowerTask.o(.init_array)
 <LI><a href="#[e3]">_GLOBAL__sub_I_Variable.cpp</a> from Variable.o(.text._GLOBAL__sub_I_Variable.cpp) referenced from Variable.o(.init_array)
 <LI><a href="#[70]">_Unwind_Resume</a> from Unwind-EHABI.cpp.o(.text._Unwind_Resume) referenced from cxa_exception.cpp.o(.text.__cxa_end_cleanup)
 <LI><a href="#[a8]">PowerMeter::Meter::ISDir()</a> from PowerMeter.o(.text._ZN10PowerMeter5Meter5ISDirEv) referenced from PowerMeter.o(.rodata._ZTVN10PowerMeter5MeterE)
 <LI><a href="#[a9]">PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*)</a> from PowerMeter.o(.text._ZN10PowerMeter5Meter5ParseE19CAN_RxHeaderTypeDefPh) referenced from PowerMeter.o(.rodata._ZTVN10PowerMeter5MeterE)
 <LI><a href="#[aa]">__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[aa]">__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[ab]">__cxxabiv1::__class_type_info::~__class_type_info__deallocating()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv117__class_type_infoD0Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[b2]">__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv120__si_class_type_infoD0Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[71]">__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)</a> from cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22exception_cleanup_funcE19_Unwind_Reason_CodeP21_Unwind_Control_Block) referenced 2 times from cxa_exception.cpp.o(.text.__cxa_throw)
 <LI><a href="#[72]">TaskManager::~TaskManager__sub_object()</a> from ChassisTask.o(.text._ZN11TaskManagerD2Ev) referenced 2 times from ChassisTask.o(.text.__cxx_global_var_init.2)
 <LI><a href="#[b8]">Chassis_Task::StopHandler::handle()</a> from ChassisTask.o(.text._ZN12Chassis_Task11StopHandler6handleEv) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
 <LI><a href="#[b7]">Chassis_Task::StopHandler::~StopHandler__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_Task11StopHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
 <LI><a href="#[b6]">Chassis_Task::StopHandler::~StopHandler__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_Task11StopHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
 <LI><a href="#[7f]">Chassis_Task::updateState()</a> from ChassisTask.o(.text._ZN12Chassis_Task11updateStateEv) referenced from ChassisTask.o(.rodata._ZTV12Chassis_Task)
 <LI><a href="#[7e]">Chassis_Task::executeState()</a> from ChassisTask.o(.text._ZN12Chassis_Task12executeStateEv) referenced from ChassisTask.o(.rodata._ZTV12Chassis_Task)
 <LI><a href="#[bb]">Chassis_Task::FollowHandler::handle()</a> from ChassisTask.o(.text._ZN12Chassis_Task13FollowHandler6handleEv) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
 <LI><a href="#[ba]">Chassis_Task::FollowHandler::~FollowHandler__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_Task13FollowHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
 <LI><a href="#[b9]">Chassis_Task::FollowHandler::~FollowHandler__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_Task13FollowHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
 <LI><a href="#[be]">Chassis_Task::KeyBoardHandler::handle()</a> from ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandler6handleEv) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
 <LI><a href="#[bd]">Chassis_Task::KeyBoardHandler::~KeyBoardHandler__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
 <LI><a href="#[bc]">Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
 <LI><a href="#[c1]">Chassis_Task::RotatingHandler::handle()</a> from ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandler6handleEv) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
 <LI><a href="#[c0]">Chassis_Task::RotatingHandler::~RotatingHandler__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
 <LI><a href="#[bf]">Chassis_Task::RotatingHandler::~RotatingHandler__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
 <LI><a href="#[c4]">Chassis_Task::UniversalHandler::handle()</a> from ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandler6handleEv) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
 <LI><a href="#[c3]">Chassis_Task::UniversalHandler::~UniversalHandler__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
 <LI><a href="#[c2]">Chassis_Task::UniversalHandler::~UniversalHandler__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
 <LI><a href="#[7d]">Chassis_Task::~Chassis_Task__deallocating()</a> from ChassisTask.o(.text._ZN12Chassis_TaskD0Ev) referenced from ChassisTask.o(.rodata._ZTV12Chassis_Task)
 <LI><a href="#[7c]">Chassis_Task::~Chassis_Task__sub_object()</a> from ChassisTask.o(.text._ZN12Chassis_TaskD2Ev) referenced from ChassisTask.o(.rodata._ZTV12Chassis_Task)
 <LI><a href="#[81]">StateHandler::~StateHandler__deallocating()</a> from ChassisTask.o(.text._ZN12StateHandlerD0Ev) referenced from ChassisTask.o(.rodata._ZTV12StateHandler)
 <LI><a href="#[80]">StateHandler::~StateHandler__sub_object()</a> from ChassisTask.o(.text._ZN12StateHandlerD2Ev) referenced from ChassisTask.o(.rodata._ZTV12StateHandler)
 <LI><a href="#[74]">SGPowerControl::PowerTask_t::~PowerTask_t__sub_object()</a> from PowerTask.o(.text._ZN14SGPowerControl11PowerTask_tD2Ev) referenced 2 times from PowerTask.o(.text.__cxx_global_var_init.2)
 <LI><a href="#[82]">SG::UpDate(float, float, float, float)</a> from Wheel.o(.text._ZN2SG6UpDateEffff) referenced from Wheel.o(.rodata._ZTV2SG)
 <LI><a href="#[83]">Dir::Attach(IObserver*)</a> from EvenTask.o(.text._ZN3Dir6AttachEP9IObserver) referenced from EvenTask.o(.rodata._ZTV3Dir)
 <LI><a href="#[84]">Dir::Detach(IObserver*)</a> from EvenTask.o(.text._ZN3Dir6DetachEP9IObserver) referenced from EvenTask.o(.rodata._ZTV3Dir)
 <LI><a href="#[85]">Dir::Notify()</a> from EvenTask.o(.text._ZN3Dir6NotifyEv) referenced from EvenTask.o(.rodata._ZTV3Dir)
 <LI><a href="#[73]">Dir::~Dir__sub_object()</a> from EvenTask.o(.text._ZN3DirD2Ev) referenced 2 times from EvenTask.o(.text.__cxx_global_var_init.2)
 <LI><a href="#[93]">HAL::_floatEqual(float, float)</a> from HAL.o(.text._ZN3HAL11_floatEqualEff) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[93]">HAL::_floatEqual(float, float)</a> from HAL.o(.text._ZN3HAL11_floatEqualEff) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[8c]">HAL::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</a> from HAL.o(.text._ZN3HAL13_Can_SendDATAEP17CAN_HandleTypeDefjPhj) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8b]">HAL::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</a> from HAL.o(.text._ZN3HAL15_Can_SendREMOTEEP17CAN_HandleTypeDefjPhj) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[92]">HAL::_sgn(float)</a> from HAL.o(.text._ZN3HAL4_sgnEf) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[92]">HAL::_sgn(float)</a> from HAL.o(.text._ZN3HAL4_sgnEf) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[88]">HAL::init()</a> from HAL.o(.text._ZN3HAL4initEv) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8f]">HAL::_cosf(float)</a> from HAL.o(.text._ZN3HAL5_cosfEf) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8f]">HAL::_cosf(float)</a> from HAL.o(.text._ZN3HAL5_cosfEf) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[8e]">HAL::_sinf(float)</a> from HAL.o(.text._ZN3HAL5_sinfEf) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8e]">HAL::_sinf(float)</a> from HAL.o(.text._ZN3HAL5_sinfEf) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[90]">HAL::_sqrt(float, float)</a> from HAL.o(.text._ZN3HAL5_sqrtEff) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[90]">HAL::_sqrt(float, float)</a> from HAL.o(.text._ZN3HAL5_sqrtEff) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[91]">HAL::_atan2(float, float)</a> from HAL.o(.text._ZN3HAL6_atan2Eff) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[91]">HAL::_atan2(float, float)</a> from HAL.o(.text._ZN3HAL6_atan2Eff) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[89]">HAL::_delay(unsigned long)</a> from HAL.o(.text._ZN3HAL6_delayEm) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8d]">HAL::_GetTick()</a> from HAL.o(.text._ZN3HAL8_GetTickEv) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[8a]">HAL::_osDelay(unsigned long)</a> from HAL.o(.text._ZN3HAL8_osDelayEm) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[87]">HAL::~HAL__deallocating()</a> from HAL.o(.text._ZN3HALD0Ev) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[86]">HAL::~HAL__sub_object()</a> from HAL.o(.text._ZN3HALD2Ev) referenced from HAL.o(.rodata._ZTV3HAL)
 <LI><a href="#[94]">LED::Update()</a> from LED.o(.text._ZN3LED6UpdateEv) referenced from LED.o(.rodata._ZTV3LED)
 <LI><a href="#[96]">LED::~LED__deallocating()</a> from LED.o(.text._ZN3LEDD0Ev) referenced from LED.o(.rodata._ZTV3LED)
 <LI><a href="#[95]">LED::~LED__sub_object()</a> from LED.o(.text._ZN3LEDD2Ev) referenced from LED.o(.rodata._ZTV3LED)
 <LI><a href="#[98]">Task::~Task__deallocating()</a> from ChassisTask.o(.text._ZN4TaskD0Ev) referenced from ChassisTask.o(.rodata._ZTV4Task)
 <LI><a href="#[97]">Task::~Task__sub_object()</a> from ChassisTask.o(.text._ZN4TaskD2Ev) referenced from ChassisTask.o(.rodata._ZTV4Task)
 <LI><a href="#[99]">Buzzer::Update()</a> from Buzzer.o(.text._ZN6Buzzer6UpdateEv) referenced from Buzzer.o(.rodata._ZTV6Buzzer)
 <LI><a href="#[9b]">Buzzer::~Buzzer__deallocating()</a> from Buzzer.o(.text._ZN6BuzzerD0Ev) referenced from Buzzer.o(.rodata._ZTV6Buzzer)
 <LI><a href="#[9a]">Buzzer::~Buzzer__sub_object()</a> from Buzzer.o(.text._ZN6BuzzerD2Ev) referenced from Buzzer.o(.rodata._ZTV6Buzzer)
 <LI><a href="#[a2]">My_hal::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</a> from My_HAL.o(.text._ZN6My_hal13_Can_SendDATAEP17CAN_HandleTypeDefjPhj) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[a1]">My_hal::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</a> from My_HAL.o(.text._ZN6My_hal15_Can_SendREMOTEEP17CAN_HandleTypeDefjPhj) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[9e]">My_hal::init()</a> from My_HAL.o(.text._ZN6My_hal4initEv) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[9f]">My_hal::_delay(unsigned long)</a> from My_HAL.o(.text._ZN6My_hal6_delayEm) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[a3]">My_hal::_GetTick()</a> from My_HAL.o(.text._ZN6My_hal8_GetTickEv) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[a0]">My_hal::_osDelay(unsigned long)</a> from My_HAL.o(.text._ZN6My_hal8_osDelayEm) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[9d]">My_hal::~My_hal__deallocating()</a> from My_HAL.o(.text._ZN6My_halD0Ev) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[9c]">My_hal::~My_hal__sub_object()</a> from My_HAL.o(.text._ZN6My_halD2Ev) referenced from My_HAL.o(.rodata._ZTV6My_hal)
 <LI><a href="#[a4]">Dji_Motor::ISDir()</a> from Dji_Motor.o(.text._ZN9Dji_Motor5ISDirEv) referenced from Dji_Motor.o(.rodata._ZTV9Dji_Motor)
 <LI><a href="#[a5]">Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)</a> from Dji_Motor.o(.text._ZN9Dji_Motor5ParseE19CAN_RxHeaderTypeDefPh) referenced from Dji_Motor.o(.rodata._ZTV9Dji_Motor)
 <LI><a href="#[a7]">IObserver::~IObserver__deallocating()</a> from EvenTask.o(.text._ZN9IObserverD0Ev) referenced from EvenTask.o(.rodata._ZTV9IObserver)
 <LI><a href="#[a6]">IObserver::~IObserver__sub_object()</a> from Buzzer.o(.text._ZN9IObserverD2Ev) referenced from EvenTask.o(.rodata._ZTV9IObserver)
 <LI><a href="#[d4]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::saveVFPAsX()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE10saveVFPAsXEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[cb]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11getFloatRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[cc]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11setFloatRegEiy) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[d0]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::isSignalFrame()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13isSignalFrameEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[ca]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validFloatReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13validFloatRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[d1]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getFunctionNameEPcjPj) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[d3]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getRegisterNameEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[d2]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE24setInfoBasedOnIPRegisterEb) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[cd]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step(bool)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE4stepEb) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[c8]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6getRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[cf]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6jumptoEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[c9]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6setRegEij) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[ce]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE7getInfoEP15unw_proc_info_t) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[c7]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE8validRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[c6]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::~UnwindCursor__deallocating()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEED0Ev) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[c5]">libunwind::AbstractUnwindCursor::~AbstractUnwindCursor__sub_object()</a> from libunwind.cpp.o(.text._ZN9libunwind20AbstractUnwindCursorD2Ev) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[ac]">__cxxabiv1::__shim_type_info::noop1() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[ac]">__cxxabiv1::__shim_type_info::noop1() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[ad]">__cxxabiv1::__shim_type_info::noop2() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[ad]">__cxxabiv1::__shim_type_info::noop2() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[af]">__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[b0]">__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[b1]">__cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[ae]">__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[ae]">__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[b3]">__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[b4]">__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[b5]">__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[d7]">std::logic_error::what() const</a> from stdlib_stdexcept.cpp.o(.text._ZNKSt11logic_error4whatEv) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
 <LI><a href="#[d7]">std::logic_error::what() const</a> from stdlib_stdexcept.cpp.o(.text._ZNKSt11logic_error4whatEv) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
 <LI><a href="#[db]">std::bad_exception::what() const</a> from stdlib_exception.cpp.o(.text._ZNKSt13bad_exception4whatEv) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[dd]">std::bad_array_new_length::what() const</a> from stdlib_exception.cpp.o(.text._ZNKSt20bad_array_new_length4whatEv) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
 <LI><a href="#[df]">std::bad_alloc::what() const</a> from stdlib_exception.cpp.o(.text._ZNKSt9bad_alloc4whatEv) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
 <LI><a href="#[d6]">std::logic_error::~logic_error__deallocating()</a> from stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD0Ev) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
 <LI><a href="#[d5]">std::logic_error::~logic_error__sub_object()</a> from stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
 <LI><a href="#[d5]">std::logic_error::~logic_error__sub_object()</a> from stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
 <LI><a href="#[d8]">std::length_error::~length_error__deallocating()</a> from stdlib_stdexcept.cpp.o(.text._ZNSt12length_errorD0Ev) referenced from stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
 <LI><a href="#[6c]">std::length_error::~length_error()</a> from stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev) referenced 2 times from ChassisTask.o(.text._ZNSt3__220__throw_length_errorB7v180000EPKc)
 <LI><a href="#[da]">std::bad_exception::~bad_exception__deallocating()</a> from stdlib_exception.cpp.o(.text._ZNSt13bad_exceptionD0Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[6f]">std::bad_exception::~bad_exception()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced 2 times from cxa_personality.cpp.o(.text.__cxa_call_unexpected)
 <LI><a href="#[dc]">std::bad_array_new_length::~bad_array_new_length__deallocating()</a> from stdlib_exception.cpp.o(.text._ZNSt20bad_array_new_lengthD0Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
 <LI><a href="#[6d]">std::bad_array_new_length::~bad_array_new_length()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced 2 times from ChassisTask.o(.text._ZSt28__throw_bad_array_new_lengthB7v180000v)
 <LI><a href="#[75]">std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</a> from EvenTask.o(.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEED2B7v180000Ev) referenced 2 times from EvenTask.o(.text.__cxx_global_var_init.3)
 <LI><a href="#[76]">std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</a> from EvenTask.o(.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEED2B7v180000Ev) referenced 2 times from EvenTask.o(.text.__cxx_global_var_init.4)
 <LI><a href="#[de]">std::bad_alloc::~bad_alloc__deallocating()</a> from stdlib_exception.cpp.o(.text._ZNSt9bad_allocD0Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
 <LI><a href="#[6e]">std::bad_alloc::~bad_alloc()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced 2 times from new.cpp.o(.text._Znwj)
 <LI><a href="#[6e]">std::bad_alloc::~bad_alloc()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced 2 times from new.cpp.o(.text._ZnwjSt11align_val_t)
 <LI><a href="#[d9]">std::exception::~exception__sub_object()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[d9]">std::exception::~exception__sub_object()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
 <LI><a href="#[d9]">std::exception::~exception__sub_object()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
 <LI><a href="#[ea]">std::terminate()</a> from cxa_handlers.cpp.o(.text._ZSt9terminatev) referenced from cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler)
 <LI><a href="#[69]">__aeabi_unwind_cpp_pr0</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr0) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[6b]">__aeabi_unwind_cpp_pr1</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr1) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[6a]">__aeabi_unwind_cpp_pr2</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr2) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from Variable.o(.rodata._ZTV11Wheel_Basic)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from ChassisTask.o(.rodata._ZTV12StateHandler)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from ChassisTask.o(.rodata._ZTV4Task)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 3 times from EvenTask.o(.rodata._ZTV8ISubject)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from Dji_Motor.o(.rodata._ZTV8RM_Motor)
 <LI><a href="#[7b]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from EvenTask.o(.rodata._ZTV9IObserver)
 <LI><a href="#[e0]">__cxx_global_var_init</a> from darw_dynamic.o(.text.__cxx_global_var_init) referenced from darw_dynamic.o(.init_array)
 <LI><a href="#[e1]">__cxx_global_var_init.1</a> from darw_dynamic.o(.text.__cxx_global_var_init.1) referenced from darw_dynamic.o(.init_array)
 <LI><a href="#[e2]">__cxx_global_var_init.2</a> from darw_dynamic.o(.text.__cxx_global_var_init.2) referenced from darw_dynamic.o(.init_array)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZN11TaskManager7addTaskI12Chassis_TaskJEEEbDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZN12Chassis_TaskC2Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN14SGPowerControl11PowerTask_tC2Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN14SGPowerControl13PowerUpData_t5UpRLSEP3PIDR9Dji_Motorff)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN14SGPowerControl13PowerUpData_tC2Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EE5resetEv)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EE6updateER7MatrixfILi2ELi1EEf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EEC2Eff)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi1EEC2EPf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi1EEC2ERKS0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi2EEC2EPf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EE5transEv)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EEdvERKf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EEmlERKf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEdvERKf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEmiERKS0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEmlERKf)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8max_sizeEv)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from stdexcept.cpp.o(.ARM.extab.text._ZNSt11logic_errorC2EPKc)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE5clearEv)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEEC2Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEv)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000EOS4_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000I12Chassis_TaskNS2_IS6_EEvvEEONS0_IT_T0_EE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEEC2B7v180000ILb1EvEEPS5_NS_16__dependent_typeINS_27__unique_ptr_deleter_sfinaeIS9_EEXT_EE20__good_rval_ref_typeE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I12Chassis_TaskJEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I3LEDJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I6BuzzerJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task11StopHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task13FollowHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15KeyBoardHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15RotatingHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task16UniversalHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE17__destruct_at_endB7v180000EPS5_NS_17integral_constantIbLb0EEE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEED2Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvE6__callB7v180000ERKS9_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvE6__callB7v180000ERKS8_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__220__throw_length_errorB7v180000EPKc)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__228__exception_guard_exceptionsINS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEED2B7v180000Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB7v180000INS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorIPS6_EESA_SA_EET2_RT_T0_T1_SB_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE6removeERKS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE9push_backERKS2_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__base_destruct_at_endB7v180000EPS5_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__construct_one_at_endB7v180000IJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEEC2B7v180000Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEED2B7v180000Ev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from ChassisTask.o(.ARM.extab.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE10deallocateB7v180000EPS5_j)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from EvenTask.o(.ARM.extab.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE10deallocateB7v180000EPS5_j)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_handlers.cpp.o(.ARM.extab.text._ZSt11__terminatePFvvE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_handlers.cpp.o(.ARM.extab.text._ZSt9terminatev)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZmlILi1EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZmlILi1EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi1EERKS0_ILi1EXT_EE)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_allocate_exception)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_catch)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_cleanup)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_personality.cpp.o(.ARM.extab.text.__cxa_call_unexpected)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_decrement_exception_refcount)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_free_exception)
 <LI><a href="#[7a]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from darw_dynamic.o(.ARM.extab.text.__cxx_global_var_init)
 <LI><a href="#[5c]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[e9]">abort</a> from abort.o(.text) referenced from cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
 <LI><a href="#[78]">prvIdleTask</a> from tasks.o(.text.prvIdleTask) referenced 2 times from tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[77]">prvTaskExitError</a> from port.o(.text.prvTaskExitError) referenced 2 times from port.o(.text.pxPortInitialiseStack)
 <LI><a href="#[79]">prvTimerTask</a> from timers.o(.text.prvTimerTask) referenced 2 times from timers.o(.text.xTimerCreateTimerTask)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f0]"></a>__scatterload_rt2</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[50b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[50c]"></a>__scatterload_loop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f1]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[50d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, __scatter.o(!!handler_null), UNUSED)

<P><STRONG><a name="[50e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[fc]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[f2]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[f4]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[50f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[510]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[511]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[512]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[513]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[514]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[515]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[516]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[517]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[518]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[519]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[51a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[51b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[51c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[51d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[51e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[51f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[520]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[521]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[522]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[523]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[101]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[f7]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[524]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[525]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[526]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[527]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[528]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[529]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[52a]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[ef]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[52b]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[f9]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[fb]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[52c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[fd]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Init &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[52d]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[121]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[100]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[52e]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[102]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[120]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[52f]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[379]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(char const*)
</UL>

<P><STRONG><a name="[109]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_wz()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(char const*)
</UL>

<P><STRONG><a name="[106]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[530]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::SlidingWindowRecovery()
</UL>

<P><STRONG><a name="[108]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
</UL>

<P><STRONG><a name="[531]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[532]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
</UL>

<P><STRONG><a name="[533]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1a9]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)
</UL>

<P><STRONG><a name="[20c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[534]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[535]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[536]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[537]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[10e]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[111]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, std::align_val_t)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[112]"></a>posix_memalign</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, h1_memalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>

<P><STRONG><a name="[113]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[115]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[e9]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char, unsigned int)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
</UL>
<P><STRONG><a name="[105]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[107]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL>

<P><STRONG><a name="[538]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[539]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[53a]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[53b]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[53c]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[10a]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[53d]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_equal(std::type_info const*, std::type_info const*, bool)
</UL>

<P><STRONG><a name="[1d5]"></a>__unw_getcontext</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_ForcedUnwind
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[53e]"></a>unw_getcontext</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text), UNUSED)

<P><STRONG><a name="[332]"></a>libunwind::Registers_arm::saveVFPWithFSTMD(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[330]"></a>libunwind::Registers_arm::saveVFPWithFSTMX(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[331]"></a>libunwind::Registers_arm::saveVFPv3(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[103]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[10f]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[117]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[53f]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[540]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[541]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[542]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[543]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[544]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[11a]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[f5]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[11c]"></a>__Heap_Initialize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[545]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[116]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[338]"></a>libunwind::Registers_arm::restoreCoreAndJumpTo()</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()
</UL>

<P><STRONG><a name="[33a]"></a>libunwind::Registers_arm::restoreVFPWithFLDMD(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[339]"></a>libunwind::Registers_arm::restoreVFPWithFLDMX(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[33b]"></a>libunwind::Registers_arm::restoreVFPv3(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[546]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[547]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[548]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[549]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[54a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[119]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[54b]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[11e]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[11d]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[11b]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[122]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[123]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[124]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.CAN1_RX1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CAN1_RX1_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.CAN2_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CAN2_RX0_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.CAN2_RX1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CAN2_RX1_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>ChassisTask</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ChassisTask.o(.text.ChassisTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320 + Unknown Stack Size
<LI>Call Chain = ChassisTask &rArr; bool TaskManager::addTask&lang;Chassis_Task&rang;() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[63]"></a>CommunicationTask</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, CommunicationTask.o(.text.CommunicationTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CommunicationTask &rArr; Communicat::Gimbal_to_Chassis::Transmit() &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA1_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA1_Stream1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA1_Stream3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA1_Stream3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA2_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA2_Stream1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA2_Stream2_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA2_Stream6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA2_Stream6_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DMA2_Stream7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA2_Stream7_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>DirUpdata</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, EvenTask.o(.text.DirUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = DirUpdata &rArr; Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[185]"></a>Error_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(.text.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN2_Init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
</UL>

<P><STRONG><a name="[66]"></a>EventTask</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, EvenTask.o(.text.EventTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = EventTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[1e9]"></a>HAL_CAN_ActivateNotification</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ActivateNotification))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CAN_ActivateNotification
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init()
</UL>

<P><STRONG><a name="[1ec]"></a>HAL_CAN_AddTxMessage</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_AddTxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendRemote(unsigned int)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendData(unsigned int, unsigned short)
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_CAN_ConfigFilter</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ConfigFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CAN_ConfigFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_Init()
</UL>

<P><STRONG><a name="[139]"></a>HAL_CAN_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[140]"></a>HAL_CAN_GetRxMessage</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_GetRxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CAN_GetRxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[1eb]"></a>HAL_CAN_GetTxMailboxesFreeLevel</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_GetTxMailboxesFreeLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_CAN_GetTxMailboxesFreeLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>

<P><STRONG><a name="[125]"></a>HAL_CAN_IRQHandler</STRONG> (Thumb, 1010 bytes, Stack size 48 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ErrorCallback
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_WakeUpFromRxMsgCallback
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_SleepCallback
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1MsgPendingCallback
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1FullCallback
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0FullCallback
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2AbortCallback
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2CompleteCallback
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1AbortCallback
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1CompleteCallback
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0AbortCallback
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0CompleteCallback
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX1_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN2_RX0_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX1_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>HAL_CAN_Init</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN2_Init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
</UL>

<P><STRONG><a name="[13b]"></a>HAL_CAN_MspInit</STRONG> (Thumb, 426 bytes, Stack size 80 bytes, can.o(.text.HAL_CAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_CAN_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>

<P><STRONG><a name="[133]"></a>HAL_CAN_RxFifo0FullCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo0FullCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_RxFifo0FullCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>HAL_CAN_RxFifo0MsgPendingCallback</STRONG> (Thumb, 454 bytes, Stack size 160 bytes, CallBack.o(.text.HAL_CAN_RxFifo0MsgPendingCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HAL_CAN_RxFifo0MsgPendingCallback &rArr; Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::Parse(CAN_RxHeaderTypeDef, unsigned char const*)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01Parse(CAN_RxHeaderTypeDef, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[135]"></a>HAL_CAN_RxFifo1FullCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1FullCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_RxFifo1FullCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[136]"></a>HAL_CAN_RxFifo1MsgPendingCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_RxFifo1MsgPendingCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_RxFifo1MsgPendingCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[137]"></a>HAL_CAN_SleepCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_SleepCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_SleepCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[143]"></a>HAL_CAN_Start</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CAN_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init()
</UL>

<P><STRONG><a name="[12e]"></a>HAL_CAN_TxMailbox0AbortCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0AbortCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox0AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[12d]"></a>HAL_CAN_TxMailbox0CompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox0CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox0CompleteCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[130]"></a>HAL_CAN_TxMailbox1AbortCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1AbortCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox1AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[12f]"></a>HAL_CAN_TxMailbox1CompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox1CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox1CompleteCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[132]"></a>HAL_CAN_TxMailbox2AbortCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2AbortCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox2AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[131]"></a>HAL_CAN_TxMailbox2CompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_TxMailbox2CompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_TxMailbox2CompleteCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[138]"></a>HAL_CAN_WakeUpFromRxMsgCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_can.o(.text.HAL_CAN_WakeUpFromRxMsgCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_CAN_WakeUpFromRxMsgCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[144]"></a>HAL_DMA_Abort</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[17e]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[12a]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 798 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream6_IRQHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[145]"></a>HAL_DMA_Init</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[148]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
</UL>

<P><STRONG><a name="[13d]"></a>HAL_GPIO_Init</STRONG> (Thumb, 950 bytes, Stack size 56 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[13c]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_GetTick()
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
</UL>

<P><STRONG><a name="[176]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[14a]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14c]"></a>HAL_InitTick</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, stm32f4xx_hal_timebase_tim.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[14d]"></a>HAL_MspInit</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[13f]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_EnableIRQ &rArr; __NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[13e]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[14b]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[157]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 610 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[14e]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[159]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[14f]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[15a]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[158]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[15c]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1726 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[169]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[16b]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_CommutCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[197]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, stm32f4xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
</UL>

<P><STRONG><a name="[150]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
</UL>

<P><STRONG><a name="[15d]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, tim.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[31b]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 234 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_timer_init()
</UL>

<P><STRONG><a name="[151]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 246 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_timer_init()
</UL>

<P><STRONG><a name="[15f]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
</UL>

<P><STRONG><a name="[165]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[164]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 538 bytes, Stack size 24 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; DirUpdata &rArr; Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[16c]"></a>HAL_TIM_MspPostInit</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, tim.o(.text.HAL_TIM_MspPostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
</UL>

<P><STRONG><a name="[166]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_OC_DelayElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[16d]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC2_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
</UL>

<P><STRONG><a name="[172]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
</UL>

<P><STRONG><a name="[173]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tim.o(.text.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[167]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[174]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 458 bytes, Stack size 56 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_timer_init()
</UL>

<P><STRONG><a name="[168]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(.text.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; DirUpdata &rArr; Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirUpdata
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[16a]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_tim.o(.text.HAL_TIM_TriggerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_TriggerCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[177]"></a>HAL_UARTEx_ReceiveToIdle_DMA</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(.text.HAL_UARTEx_ReceiveToIdle_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Init()
</UL>

<P><STRONG><a name="[179]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, CallBack.o(.text.HAL_UARTEx_RxEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_UARTEx_RxEventCallback &rArr; BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[17f]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[17b]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 1068 bytes, Stack size 80 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>HAL_UART_Init</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[183]"></a>HAL_UART_MspInit</STRONG> (Thumb, 1042 bytes, Stack size 128 bytes, usart.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[186]"></a>HAL_UART_Receive_DMA</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::SlidingWindowRecovery()
</UL>

<P><STRONG><a name="[187]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Init()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemInit()
</UL>

<P><STRONG><a name="[189]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, CallBack.o(.text.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*)
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[1ab]"></a>HAL_UART_RxHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_RxHalfCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_RxHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
</UL>

<P><STRONG><a name="[18c]"></a>HAL_UART_Transmit_DMA</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>

<P><STRONG><a name="[292]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
</UL>

<P><STRONG><a name="[1ac]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATransmitCplt
</UL>

<P><STRONG><a name="[1ad]"></a>HAL_UART_TxHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_TxHalfCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATxHalfCplt
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[18d]"></a>Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, Init.o(.text.Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = Init &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::inject(HAL*)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::My_hal__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[191]"></a>MX_CAN1_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(.text.MX_CAN1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_CAN1_Init &rArr; HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>MX_CAN2_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, can.o(.text.MX_CAN2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_CAN2_Init &rArr; HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[193]"></a>MX_DMA_Init</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, dma.o(.text.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[194]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, freertos.o(.text.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4ac]"></a>MX_GPIO_Init</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>MX_TIM4_Init</STRONG> (Thumb, 166 bytes, Stack size 64 bytes, tim.o(.text.MX_TIM4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MX_TIM4_Init &rArr; HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[198]"></a>MX_TIM5_Init</STRONG> (Thumb, 270 bytes, Stack size 64 bytes, tim.o(.text.MX_TIM5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MX_TIM5_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[199]"></a>MX_TIM7_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, tim.o(.text.MX_TIM7_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_TIM7_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19a]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usart.o(.text.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19b]"></a>MX_USART3_UART_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usart.o(.text.MX_USART3_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_USART3_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19c]"></a>MX_USART6_UART_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usart.o(.text.MX_USART6_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_USART6_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, port.o(.text.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>RLSTask</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, PowerTask.o(.text.RLSTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = RLSTask &rArr; SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float) &rArr; Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float) &rArr; Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::sendCAN(CAN_HandleTypeDef*, unsigned int)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::SetSendValue(unsigned short)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[64]"></a>RefeeTask</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, RefeeTask.o(.text.RefeeTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = RefeeTask &rArr; UI::Static::darw_static::Init() &rArr; UI::Static::darw_static::PitchLine() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::Init()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>StartDefaultTask</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, freertos.o(.text.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = StartDefaultTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cmsis_os2.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1a8]"></a>SystemClock_Config</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32f4xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; DirUpdata &rArr; Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TIM7_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; DirUpdata &rArr; Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15e]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 432 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[175]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(.text.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>

<P><STRONG><a name="[160]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[16f]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 244 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[178]"></a>UART_Start_Receive_DMA</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_ReceiveToIdle_DMA
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
</UL>

<P><STRONG><a name="[188]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, stm32f4xx_hal_uart.o(.text.UART_Start_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = USART6_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54c]"></a>_Unwind_Complete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text._Unwind_Complete), UNUSED)

<P><STRONG><a name="[4a3]"></a>_Unwind_DeleteException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text._Unwind_DeleteException), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
</UL>

<P><STRONG><a name="[1d4]"></a>_Unwind_ForcedUnwind</STRONG> (Thumb, 46 bytes, Stack size 760 bytes, Unwind-EHABI.cpp.o(.text._Unwind_ForcedUnwind), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_getcontext
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)
</UL>

<P><STRONG><a name="[1d7]"></a>_Unwind_GetLanguageSpecificData</STRONG> (Thumb, 24 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_GetLanguageSpecificData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Unwind_GetLanguageSpecificData &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[1d9]"></a>_Unwind_GetRegionStart</STRONG> (Thumb, 24 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_GetRegionStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Unwind_GetRegionStart &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[1da]"></a>_Unwind_RaiseException</STRONG> (Thumb, 122 bytes, Stack size 784 bytes, Unwind-EHABI.cpp.o(.text._Unwind_RaiseException))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_getcontext
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>

<P><STRONG><a name="[70]"></a>_Unwind_Resume</STRONG> (Thumb, 56 bytes, Stack size 744 bytes, Unwind-EHABI.cpp.o(.text._Unwind_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_getcontext
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_exception.cpp.o(.text.__cxa_end_cleanup)
</UL>
<P><STRONG><a name="[1dd]"></a>_Unwind_VRS_Get</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Get &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_fpreg
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_save_vfp_as_X
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[1e1]"></a>_Unwind_VRS_Interpret</STRONG> (Thumb, 516 bytes, Stack size 40 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Interpret))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>

<P><STRONG><a name="[1e3]"></a>_Unwind_VRS_Pop</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
</UL>

<P><STRONG><a name="[1e4]"></a>_Unwind_VRS_Set</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_fpreg
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_save_vfp_as_X
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
</UL>

<P><STRONG><a name="[1e6]"></a>CAN_Filter_Init()</STRONG> (Thumb, 74 bytes, Stack size 56 bytes, Bsp_Can.o(.text._Z15CAN_Filter_Initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CAN_Filter_Init() &rArr; HAL_CAN_ConfigFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ConfigFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init()
</UL>

<P><STRONG><a name="[1e8]"></a>Can_Init()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, Bsp_Can.o(.text._Z8Can_Initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Can_Init() &rArr; CAN_Filter_Init() &rArr; HAL_CAN_ConfigFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ActivateNotification
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_Init()
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_can_init()
</UL>

<P><STRONG><a name="[1ea]"></a>Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, Bsp_Can.o(.text._Z8Can_SendP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Send_CAN_MAILBOX0(Motor_send_data_t*, unsigned short)
</UL>

<P><STRONG><a name="[217]"></a>float Math_Abs&lang;float&rang;(float)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, alg_slope.o(.text._Z8Math_AbsIfET_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = float Math_Abs&lang;float&rang;(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::TIM_Calculate_PeriodElapsedCallback()
</UL>

<P><STRONG><a name="[308]"></a>Communicat::Gimbal_to_Chassis::getKeyBoard()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis11getKeyBoardEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getKeyBoard()
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::KeyBoard()
</UL>

<P><STRONG><a name="[309]"></a>Communicat::Gimbal_to_Chassis::getRotating()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis11getRotatingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getRotating()
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Rotating()
</UL>

<P><STRONG><a name="[18a]"></a>Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis12Data_receiveEP20__UART_HandleTypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::SlidingWindowRecovery()
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[30a]"></a>Communicat::Gimbal_to_Chassis::getUniversal()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis12getUniversalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getUniversal()
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Universal()
</UL>

<P><STRONG><a name="[1fe]"></a>Communicat::Gimbal_to_Chassis::setBoosterCd(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis12setBoosterCdEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communicat::Gimbal_to_Chassis::setBoosterCd(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>

<P><STRONG><a name="[1fd]"></a>Communicat::Gimbal_to_Chassis::setBoosterMAX(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis13setBoosterMAXEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communicat::Gimbal_to_Chassis::setBoosterMAX(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>

<P><STRONG><a name="[264]"></a>Communicat::Gimbal_to_Chassis::getRotatingVel()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis14getRotatingVelEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getRotatingVel()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
</UL>

<P><STRONG><a name="[1fc]"></a>Communicat::Gimbal_to_Chassis::setNowBoosterHeat(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis17setNowBoosterHeatEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Communicat::Gimbal_to_Chassis::setNowBoosterHeat(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>

<P><STRONG><a name="[1f2]"></a>Communicat::Gimbal_to_Chassis::getEncoderAngleErr()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, darw_dynamic.o(.text._ZN10Communicat17Gimbal_to_Chassis18getEncoderAngleErrEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Communicat::Gimbal_to_Chassis::getEncoderAngleErr() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[1f6]"></a>Communicat::Gimbal_to_Chassis::getTargetOffsetAngle()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis20getTargetOffsetAngleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Communicat::Gimbal_to_Chassis::getTargetOffsetAngle() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
</UL>

<P><STRONG><a name="[1f0]"></a>Communicat::Gimbal_to_Chassis::SlidingWindowRecovery()</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis21SlidingWindowRecoveryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*)
</UL>

<P><STRONG><a name="[1f9]"></a>Communicat::Gimbal_to_Chassis::Init()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis4InitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Communicat::Gimbal_to_Chassis::Init() &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_dr16_init()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Communication()
</UL>

<P><STRONG><a name="[1fa]"></a>Communicat::Gimbal_to_Chassis::ISDir()</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis5ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Communicat::Gimbal_to_Chassis::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Communication()
</UL>

<P><STRONG><a name="[268]"></a>Communicat::Gimbal_to_Chassis::getF5()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis5getF5Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getF5()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
</UL>

<P><STRONG><a name="[22f]"></a>Communicat::Gimbal_to_Chassis::getLX()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis5getLXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[231]"></a>Communicat::Gimbal_to_Chassis::getLY()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis5getLYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getLY()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[2ae]"></a>Communicat::Gimbal_to_Chassis::getAimX()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN10Communicat17Gimbal_to_Chassis7getAimXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getAimX()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
</UL>

<P><STRONG><a name="[2b1]"></a>Communicat::Gimbal_to_Chassis::getAimY()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN10Communicat17Gimbal_to_Chassis7getAimYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getAimY()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
</UL>

<P><STRONG><a name="[306]"></a>Communicat::Gimbal_to_Chassis::getStop()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis7getStopEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getStop()
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Stop()
</UL>

<P><STRONG><a name="[129]"></a>Communicat::Gimbal_to_Chassis::Transmit()</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_Chassis8TransmitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Communicat::Gimbal_to_Chassis::Transmit() &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::setBoosterCd(unsigned short)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::setBoosterMAX(unsigned short)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::setNowBoosterHeat(unsigned short)
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto Communicat::Gimbal_to_Chassis::Transmit()::$_0::operator()&lang;Communicat::Gimbal_to_Chassis::Booster&rang;(Communicat::Gimbal_to_Chassis::Booster const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationTask
</UL>

<P><STRONG><a name="[266]"></a>Communicat::Gimbal_to_Chassis::getPower()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis8getPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getPower()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
</UL>

<P><STRONG><a name="[265]"></a>Communicat::Gimbal_to_Chassis::getShitf()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN10Communicat17Gimbal_to_Chassis8getShitfEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getShitf()
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
</UL>

<P><STRONG><a name="[307]"></a>Communicat::Gimbal_to_Chassis::getFollow()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN10Communicat17Gimbal_to_Chassis9getFollowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::getFollow()
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Follow()
</UL>

<P><STRONG><a name="[4a6]"></a>Communicat::Gimbal_to_Chassis::Gimbal_to_Chassis__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, CommunicationTask.o(.text._ZN10Communicat17Gimbal_to_ChassisC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Communicat::Gimbal_to_Chassis::Gimbal_to_Chassis__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[a8]"></a>PowerMeter::Meter::ISDir()</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, PowerMeter.o(.text._ZN10PowerMeter5Meter5ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PowerMeter::Meter::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_MeterPower()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PowerMeter.o(.rodata._ZTVN10PowerMeter5MeterE)
</UL>
<P><STRONG><a name="[a9]"></a>PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*)</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, PowerMeter.o(.text._ZN10PowerMeter5Meter5ParseE19CAN_RxHeaderTypeDefPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PowerMeter.o(.rodata._ZTVN10PowerMeter5MeterE)
</UL>
<P><STRONG><a name="[201]"></a>PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*)</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, PowerMeter.o(.text._ZN10PowerMeter5MeterC2EshPNS_10Meter_DataEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::RM_Motor__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
</UL>

<P><STRONG><a name="[54d]"></a>PowerMeter::Meter::Meter__sub_object(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*)</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, PowerMeter.o(.text._ZN10PowerMeter5MeterC2EshPNS_10Meter_DataEPh), UNUSED)

<P><STRONG><a name="[204]"></a>__cxxabiv1::__enum_type_info::~__enum_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::~type_info__sub_object()
</UL>

<P><STRONG><a name="[54e]"></a>__cxxabiv1::__enum_type_info::~__enum_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[54f]"></a>__cxxabiv1::__shim_type_info::~__shim_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[aa]"></a>__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[550]"></a>__cxxabiv1::__array_type_info::~__array_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[551]"></a>__cxxabiv1::__array_type_info::~__array_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[552]"></a>__cxxabiv1::__class_type_info::~__class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[553]"></a>__cxxabiv1::__class_type_info::~__class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[554]"></a>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[555]"></a>__cxxabiv1::__pbase_type_info::~__pbase_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[556]"></a>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[557]"></a>__cxxabiv1::__pointer_type_info::~__pointer_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[558]"></a>__cxxabiv1::__function_type_info::~__function_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[559]"></a>__cxxabiv1::__function_type_info::~__function_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55a]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55b]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55c]"></a>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55d]"></a>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55e]"></a>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[55f]"></a>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[560]"></a>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[561]"></a>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[ab]"></a>__cxxabiv1::__class_type_info::~__class_type_info__deallocating()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv117__class_type_infoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__class_type_info::~__class_type_info__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[b2]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv120__si_class_type_infoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[499]"></a>__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv121__isOurExceptionClassEPK21_Unwind_Control_Block))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[207]"></a>__cxxabiv1::__aligned_free_with_fallback(void*)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fallback_malloc.cpp.o(.text._ZN10__cxxabiv128__aligned_free_with_fallbackEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__aligned_free_with_fallback(void*) &rArr; (anonymous namespace)::fallback_free(void*)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::fallback_free(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
</UL>

<P><STRONG><a name="[209]"></a>__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fallback_malloc.cpp.o(.text._ZN10__cxxabiv130__aligned_malloc_with_fallbackEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxxabiv1::__aligned_malloc_with_fallback(unsigned int) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::fallback_malloc(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[23a]"></a>Class_Slope::Set_Target(float)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZN11Class_Slope10Set_TargetEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Class_Slope::Set_Target(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[260]"></a>Class_Slope::Set_Now_Real(float)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZN11Class_Slope12Set_Now_RealEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Class_Slope::Set_Now_Real(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[216]"></a>Class_Slope::TIM_Calculate_PeriodElapsedCallback()</STRONG> (Thumb, 702 bytes, Stack size 16 bytes, alg_slope.o(.text._ZN11Class_Slope35TIM_Calculate_PeriodElapsedCallbackEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Class_Slope::TIM_Calculate_PeriodElapsedCallback() &rArr; float Math_Abs&lang;float&rang;(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float Math_Abs&lang;float&rang;(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[23b]"></a>Class_Slope::Get_Out()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN11Class_Slope7Get_OutEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Class_Slope::Get_Out()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[4aa]"></a>Class_Slope::Class_Slope(float, float, Enum_Slope_First)</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, alg_slope.o(.text._ZN11Class_SlopeC2Eff16Enum_Slope_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.30
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.29
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.28
</UL>

<P><STRONG><a name="[562]"></a>Class_Slope::Class_Slope__sub_object(float, float, Enum_Slope_First)</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, alg_slope.o(.text._ZN11Class_SlopeC2Eff16Enum_Slope_First), UNUSED)

<P><STRONG><a name="[323]"></a>FeedForward::FeedForward__sub_object(float, float)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, Variable.o(.text._ZN11FeedForwardC2Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>

<P><STRONG><a name="[127]"></a>bool TaskManager::addTask&lang;Chassis_Task&rang;()</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZN11TaskManager7addTaskI12Chassis_TaskJEEEbDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = bool TaskManager::addTask&lang;Chassis_Task&rang;() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChassisTask
</UL>

<P><STRONG><a name="[128]"></a>TaskManager::updateAll()</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZN11TaskManager9updateAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TaskManager::updateAll() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::end[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task::update()
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator bool[abi:v180000]() const
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::end[abi:v180000]()
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::begin[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChassisTask
</UL>

<P><STRONG><a name="[225]"></a>TaskManager::TaskManager__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN11TaskManagerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = TaskManager::TaskManager__sub_object() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[72]"></a>TaskManager::~TaskManager__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN11TaskManagerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = TaskManager::~TaskManager__sub_object() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.text.__cxx_global_var_init.2)
</UL>
<P><STRONG><a name="[29e]"></a>Wheel_Basic::Wheel_Basic__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, Variable.o(.text._ZN11Wheel_BasicC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Wheel_Basic::Wheel_Basic__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::SG__sub_object()
</UL>

<P><STRONG><a name="[228]"></a>Chassis_Task::PID_Updata()</STRONG> (Thumb, 640 bytes, Stack size 200 bytes, ChassisTask.o(.text._ZN12Chassis_Task10PID_UpdataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = Chassis_Task::PID_Updata() &rArr; PID::GetPidPos(Kpid_t, double, double, double) &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::UpData(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetRPMFeedback(short)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::Round_Error(float, float, float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetAngleFeedback(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[22e]"></a>Chassis_Task::Tar_Updata()</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, ChassisTask.o(.text._ZN12Chassis_Task10Tar_UpdataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Chassis_Task::Tar_Updata() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::remoteRight()
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLY()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
</UL>

<P><STRONG><a name="[233]"></a>Chassis_Task::CAN_Setting()</STRONG> (Thumb, 548 bytes, Stack size 80 bytes, ChassisTask.o(.text._ZN12Chassis_Task11CAN_SettingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Chassis_Task::CAN_Setting() &rArr; SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float) &rArr; PID::GetCout() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::setMSD(Motor_send_data_t*, short, int)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_Wheel()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_String()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpScaleMaxPow(PID*, Dji_Motor&)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[b8]"></a>Chassis_Task::StopHandler::handle()</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZN12Chassis_Task11StopHandler6handleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Chassis_Task::StopHandler::handle() &rArr; Chassis_Task::CAN_Setting() &rArr; SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float) &rArr; PID::GetCout() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::clearPID()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Get_Out()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Set_Target(float)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
</UL>
<P><STRONG><a name="[23e]"></a>Chassis_Task::StopHandler::StopHandler__sub_object(Chassis_Task&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task11StopHandlerC2ERS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chassis_Task::StopHandler::StopHandler__sub_object(Chassis_Task&) &rArr; StateHandler::StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[b7]"></a>Chassis_Task::StopHandler::~StopHandler__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task11StopHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chassis_Task::StopHandler::~StopHandler__deallocating() &rArr; Chassis_Task::StopHandler::~StopHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::~StopHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
</UL>
<P><STRONG><a name="[b6]"></a>Chassis_Task::StopHandler::~StopHandler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task11StopHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chassis_Task::StopHandler::~StopHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::~StopHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task11StopHandlerE)
</UL>
<P><STRONG><a name="[7f]"></a>Chassis_Task::updateState()</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, ChassisTask.o(.text._ZN12Chassis_Task11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = Chassis_Task::updateState() &rArr; std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Stop()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::KeyBoard()
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Rotating()
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Follow()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Universal()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchRight()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12Chassis_Task)
</UL>
<P><STRONG><a name="[256]"></a>Chassis_Task::Wheel_UpData()</STRONG> (Thumb, 1040 bytes, Stack size 152 bytes, ChassisTask.o(.text._ZN12Chassis_Task12Wheel_UpDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Chassis_Task::Wheel_UpData() &rArr; SG::UpDate(float, float, float, float) &rArr; std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::Zero_crossing_processing(float, float, float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetEquipData(short, Dji_Data)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[7e]"></a>Chassis_Task::executeState()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task12executeStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Chassis_Task::executeState() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator bool[abi:v180000]() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12Chassis_Task)
</UL>
<P><STRONG><a name="[25e]"></a>Chassis_Task::FollowHandler::FllowTarget()</STRONG> (Thumb, 496 bytes, Stack size 88 bytes, ChassisTask.o(.text._ZN12Chassis_Task13FollowHandler11FllowTargetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Chassis_Task::FollowHandler::FllowTarget() &rArr; PID::GetPidPos(Kpid_t, double, double, double) &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::TIM_Calculate_PeriodElapsedCallback()
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Get_Out()
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Set_Now_Real(float)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Set_Target(float)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLY()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
</UL>

<P><STRONG><a name="[bb]"></a>Chassis_Task::FollowHandler::handle()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task13FollowHandler6handleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Chassis_Task::FollowHandler::handle() &rArr; Chassis_Task::Wheel_UpData() &rArr; SG::UpDate(float, float, float, float) &rArr; std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
</UL>
<P><STRONG><a name="[262]"></a>Chassis_Task::FollowHandler::FollowHandler__sub_object(Chassis_Task&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task13FollowHandlerC2ERS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chassis_Task::FollowHandler::FollowHandler__sub_object(Chassis_Task&) &rArr; StateHandler::StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[ba]"></a>Chassis_Task::FollowHandler::~FollowHandler__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task13FollowHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chassis_Task::FollowHandler::~FollowHandler__deallocating() &rArr; Chassis_Task::FollowHandler::~FollowHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::~FollowHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
</UL>
<P><STRONG><a name="[b9]"></a>Chassis_Task::FollowHandler::~FollowHandler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task13FollowHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chassis_Task::FollowHandler::~FollowHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::~FollowHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task13FollowHandlerE)
</UL>
<P><STRONG><a name="[263]"></a>Chassis_Task::KeyBoardHandler::FllowTarget()</STRONG> (Thumb, 800 bytes, Stack size 72 bytes, ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandler11FllowTargetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = Chassis_Task::KeyBoardHandler::FllowTarget() &rArr; UI::Static::darw_static::Init() &rArr; UI::Static::darw_static::PitchLine() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::Init()
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getShitf()
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::clamp(float, float, float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getF5()
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getPower()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getTargetOffsetAngle()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getRotatingVel()
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLY()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
</UL>

<P><STRONG><a name="[be]"></a>Chassis_Task::KeyBoardHandler::handle()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandler6handleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = Chassis_Task::KeyBoardHandler::handle() &rArr; Chassis_Task::KeyBoardHandler::FllowTarget() &rArr; UI::Static::darw_static::Init() &rArr; UI::Static::darw_static::PitchLine() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
</UL>
<P><STRONG><a name="[269]"></a>Chassis_Task::KeyBoardHandler::KeyBoardHandler__sub_object(Chassis_Task&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandlerC2ERS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chassis_Task::KeyBoardHandler::KeyBoardHandler__sub_object(Chassis_Task&) &rArr; StateHandler::StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[bd]"></a>Chassis_Task::KeyBoardHandler::~KeyBoardHandler__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chassis_Task::KeyBoardHandler::~KeyBoardHandler__deallocating() &rArr; Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
</UL>
<P><STRONG><a name="[bc]"></a>Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15KeyBoardHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::~KeyBoardHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15KeyBoardHandlerE)
</UL>
<P><STRONG><a name="[26a]"></a>Chassis_Task::RotatingHandler::RotatingTarget()</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandler14RotatingTargetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Chassis_Task::RotatingHandler::RotatingTarget() &rArr; Communicat::Gimbal_to_Chassis::getEncoderAngleErr() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getRotatingVel()
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLY()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
</UL>

<P><STRONG><a name="[c1]"></a>Chassis_Task::RotatingHandler::handle()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandler6handleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Chassis_Task::RotatingHandler::handle() &rArr; Chassis_Task::Wheel_UpData() &rArr; SG::UpDate(float, float, float, float) &rArr; std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
</UL>
<P><STRONG><a name="[26b]"></a>Chassis_Task::RotatingHandler::RotatingHandler__sub_object(Chassis_Task&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandlerC2ERS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chassis_Task::RotatingHandler::RotatingHandler__sub_object(Chassis_Task&) &rArr; StateHandler::StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[c0]"></a>Chassis_Task::RotatingHandler::~RotatingHandler__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chassis_Task::RotatingHandler::~RotatingHandler__deallocating() &rArr; Chassis_Task::RotatingHandler::~RotatingHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::~RotatingHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
</UL>
<P><STRONG><a name="[bf]"></a>Chassis_Task::RotatingHandler::~RotatingHandler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task15RotatingHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chassis_Task::RotatingHandler::~RotatingHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::~RotatingHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task15RotatingHandlerE)
</UL>
<P><STRONG><a name="[26c]"></a>Chassis_Task::UniversalHandler::UniversalTarget()</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandler15UniversalTargetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Chassis_Task::UniversalHandler::UniversalTarget() &rArr; Communicat::Gimbal_to_Chassis::getEncoderAngleErr() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::TIM_Calculate_PeriodElapsedCallback()
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Get_Out()
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Set_Now_Real(float)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Set_Target(float)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLY()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getLX()
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[c4]"></a>Chassis_Task::UniversalHandler::handle()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandler6handleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Chassis_Task::UniversalHandler::handle() &rArr; Chassis_Task::Wheel_UpData() &rArr; SG::UpDate(float, float, float, float) &rArr; std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
</UL>
<P><STRONG><a name="[26d]"></a>Chassis_Task::UniversalHandler::UniversalHandler__sub_object(Chassis_Task&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandlerC2ERS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Chassis_Task::UniversalHandler::UniversalHandler__sub_object(Chassis_Task&) &rArr; StateHandler::StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[c3]"></a>Chassis_Task::UniversalHandler::~UniversalHandler__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Chassis_Task::UniversalHandler::~UniversalHandler__deallocating() &rArr; Chassis_Task::UniversalHandler::~UniversalHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::~UniversalHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
</UL>
<P><STRONG><a name="[c2]"></a>Chassis_Task::UniversalHandler::~UniversalHandler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task16UniversalHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chassis_Task::UniversalHandler::~UniversalHandler__sub_object() &rArr; StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::~UniversalHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTVN12Chassis_Task16UniversalHandlerE)
</UL>
<P><STRONG><a name="[23d]"></a>Chassis_Task::CAN_Send()</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_Task8CAN_SendEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Chassis_Task::CAN_Send() &rArr; Dji_Motor::Send_CAN_MAILBOX0(Motor_send_data_t*, unsigned short) &rArr; Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Send_CAN_MAILBOX1(Motor_send_data_t*, unsigned short)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Send_CAN_MAILBOX0(Motor_send_data_t*, unsigned short)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[261]"></a>Chassis_Task::Filtering()</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN12Chassis_Task9FilteringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chassis_Task::Filtering() &rArr; TD::Calc(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetRPMFeedback(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::handle()
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::handle()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::handle()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::handle()
</UL>

<P><STRONG><a name="[271]"></a>Chassis_Task::Chassis_Task()</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZN12Chassis_TaskC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Chassis_Task::Chassis_Task() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task::~Task__sub_object()
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;()
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task::Task__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[563]"></a>Chassis_Task::Chassis_Task__sub_object()</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZN12Chassis_TaskC2Ev), UNUSED)

<P><STRONG><a name="[7d]"></a>Chassis_Task::~Chassis_Task__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_TaskD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Chassis_Task::~Chassis_Task__deallocating() &rArr; Chassis_Task::~Chassis_Task__sub_object() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::~Chassis_Task__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12Chassis_Task)
</UL>
<P><STRONG><a name="[7c]"></a>Chassis_Task::~Chassis_Task__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN12Chassis_TaskD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Chassis_Task::~Chassis_Task__sub_object() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task::~Task__sub_object()
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::~Chassis_Task__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12Chassis_Task)
</UL>
<P><STRONG><a name="[23f]"></a>StateHandler::StateHandler__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN12StateHandlerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = StateHandler::StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::StopHandler__sub_object(Chassis_Task&)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::KeyBoardHandler__sub_object(Chassis_Task&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingHandler__sub_object(Chassis_Task&)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FollowHandler__sub_object(Chassis_Task&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalHandler__sub_object(Chassis_Task&)
</UL>

<P><STRONG><a name="[81]"></a>StateHandler::~StateHandler__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN12StateHandlerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = StateHandler::~StateHandler__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12StateHandler)
</UL>
<P><STRONG><a name="[80]"></a>StateHandler::~StateHandler__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN12StateHandlerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = StateHandler::~StateHandler__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::~StopHandler__sub_object()
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::~KeyBoardHandler__sub_object()
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::~RotatingHandler__sub_object()
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::~FollowHandler__sub_object()
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::~UniversalHandler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV12StateHandler)
</UL>
<P><STRONG><a name="[1f1]"></a>RM_StaticTime::UpLastTime()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, Dji_Motor.o(.text._ZN13RM_StaticTime10UpLastTimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RM_StaticTime::UpLastTime()
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::UpdateStatus()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*)
</UL>

<P><STRONG><a name="[1fb]"></a>RM_StaticTime::ISDir(unsigned int)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, Dji_Motor.o(.text._ZN13RM_StaticTime5ISDirEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::ISDir()
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::ISDir()
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::ISDir()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::ISDir()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::ISDir()
</UL>

<P><STRONG><a name="[277]"></a>RM_StaticTime::ISOne(unsigned int)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, darw_dynamic.o(.text._ZN13RM_StaticTime5ISOneEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RM_StaticTime::ISOne(unsigned int) &rArr; RM_Key::UpKey(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Key::GetRisingKey()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Key::UpKey(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_wz()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_delet_all()
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>

<P><STRONG><a name="[2b5]"></a>SGPowerControl::PowerTask_t::getMAXPower()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN14SGPowerControl11PowerTask_t11getMAXPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SGPowerControl::PowerTask_t::getMAXPower()
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
</UL>

<P><STRONG><a name="[27a]"></a>SGPowerControl::PowerTask_t::PowerTask_t__sub_object()</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, PowerTask.o(.text._ZN14SGPowerControl11PowerTask_tC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = SGPowerControl::PowerTask_t::PowerTask_t__sub_object() &rArr; SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::RLS__sub_object(float, float) &rArr; Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object()
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator[](int const&)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[74]"></a>SGPowerControl::PowerTask_t::~PowerTask_t__sub_object()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN14SGPowerControl11PowerTask_tD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SGPowerControl::PowerTask_t::~PowerTask_t__sub_object() &rArr; SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::~RLS__sub_object() &rArr; Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PowerTask.o(.text.__cxx_global_var_init.2)
</UL>
<P><STRONG><a name="[236]"></a>SGPowerControl::PowerUpData_t::UpScaleMaxPow(PID*, Dji_Motor&)</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, PowerTask.o(.text._ZN14SGPowerControl13PowerUpData_t13UpScaleMaxPowEP3PIDR9Dji_Motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SGPowerControl::PowerUpData_t::UpScaleMaxPow(PID*, Dji_Motor&) &rArr; PID::GetErr() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetErr()
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[237]"></a>SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)</STRONG> (Thumb, 568 bytes, Stack size 96 bytes, PowerTask.o(.text._ZN14SGPowerControl13PowerUpData_t15UpCalcMaxTorqueEPfR9Dji_MotorP3PIDff))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float) &rArr; PID::GetCout() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::clamp(float, float, float)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetEquipData_for(short, Dji_Data)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[19e]"></a>SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)</STRONG> (Thumb, 948 bytes, Stack size 208 bytes, PowerTask.o(.text._ZN14SGPowerControl13PowerUpData_t5UpRLSEP3PIDR9Dji_Motorff))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + Unknown Stack Size
<LI>Call Chain = SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float) &rArr; Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float) &rArr; Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_String()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fmax[abi:v180000](float, float)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator=(Matrixf&lang;2, 1&rang;)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::getSuperCap()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetEquipData_for(short, Dji_Data)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator[](int const&)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RLSTask
</UL>

<P><STRONG><a name="[27b]"></a>SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, PowerTask.o(.text._ZN14SGPowerControl13PowerUpData_tC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::RLS__sub_object(float, float) &rArr; Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::~RLS__sub_object()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::PowerTask_t__sub_object()
</UL>

<P><STRONG><a name="[27d]"></a>SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN14SGPowerControl13PowerUpData_tD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::~RLS__sub_object() &rArr; Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::~RLS__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::~PowerTask_t__sub_object()
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::PowerTask_t__sub_object()
</UL>

<P><STRONG><a name="[28b]"></a>RM_RefereeSystem::RM_RefereeSystemInit()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem20RM_RefereeSystemInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemInit() &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_dr16_init()
</UL>

<P><STRONG><a name="[18b]"></a>RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem21RM_RefereeSystemParseEP20__UART_HandleTypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*) &rArr; RM_RefereeSystem::RM_RefereeSystemGetData(unsigned char) &rArr; RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int) &rArr; RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemGetData(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[28d]"></a>RM_RefereeSystem::RM_RefereeSystemDelete(char, char)</STRONG> (Thumb, 212 bytes, Stack size 160 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem22RM_RefereeSystemDeleteEcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemDelete(char, char) &rArr; RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemGetRobotId()
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_delet_all()
</UL>

<P><STRONG><a name="[2ad]"></a>RM_RefereeSystem::RM_RefereeSystemSetInt(char*, unsigned int, int, unsigned int, unsigned int)</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem22RM_RefereeSystemSetIntEPcjijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetInt(char*, unsigned int, int, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
</UL>

<P><STRONG><a name="[2a1]"></a>RM_RefereeSystem::RM_RefereeSystemClsToop()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem23RM_RefereeSystemClsToopEv))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_delet_all()
</UL>

<P><STRONG><a name="[28c]"></a>RM_RefereeSystem::RM_RefereeSystemGetData(unsigned char)</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem23RM_RefereeSystemGetDataEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemGetData(unsigned char) &rArr; RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int) &rArr; RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParse(__UART_HandleTypeDef*)
</UL>

<P><STRONG><a name="[294]"></a>RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)</STRONG> (Thumb, 302 bytes, Stack size 288 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem23RM_RefereeSystemSendStrENS_29ext_client_custom_character_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t) &rArr; RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemGetRobotId()
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_wz()
</UL>

<P><STRONG><a name="[2aa]"></a>RM_RefereeSystem::RM_RefereeSystemSetLine(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem23RM_RefereeSystemSetLineEPcjjjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetLine(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[2a9]"></a>RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem24RM_RefereeSystemSetArcedEPcjjjjjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
</UL>

<P><STRONG><a name="[2a5]"></a>RM_RefereeSystem::RM_RefereeSystemSetColor(int)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem24RM_RefereeSystemSetColorEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetColor(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::setLayer()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
</UL>

<P><STRONG><a name="[2a6]"></a>RM_RefereeSystem::RM_RefereeSystemSetWidth(int)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem24RM_RefereeSystemSetWidthEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::setLayer()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
</UL>

<P><STRONG><a name="[293]"></a>RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int)</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem25RM_RefereeSystemParseDataEPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int) &rArr; RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Verify_CRC8_Check_Sum(unsigned char*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemGetData(unsigned char)
</UL>

<P><STRONG><a name="[297]"></a>RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)</STRONG> (Thumb, 352 bytes, Stack size 168 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem25RM_RefereeSystemSendDataNEPKNS_21graphic_data_struct_tEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int) &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemGetRobotId()
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
</UL>

<P><STRONG><a name="[2a7]"></a>RM_RefereeSystem::RM_RefereeSystemSetCircle(char*, unsigned int, unsigned int, unsigned int, unsigned int)</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem25RM_RefereeSystemSetCircleEPcjjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetCircle(char*, unsigned int, unsigned int, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
</UL>

<P><STRONG><a name="[28f]"></a>RM_RefereeSystem::RM_RefereeSystemGetRobotId()</STRONG> (Thumb, 236 bytes, Stack size 12 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem26RM_RefereeSystemGetRobotIdEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemGetRobotId()
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
</UL>

<P><STRONG><a name="[2b2]"></a>RM_RefereeSystem::RM_RefereeSystemSetRectangle(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem28RM_RefereeSystemSetRectangleEPcjjjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetRectangle(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
</UL>

<P><STRONG><a name="[2ab]"></a>RM_RefereeSystem::RM_RefereeSystemSetStringSize(int)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem29RM_RefereeSystemSetStringSizeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetStringSize(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
</UL>

<P><STRONG><a name="[2a0]"></a>RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, RM_RefereeSystem.o(.text._ZN16RM_RefereeSystem30RM_RefereeSystemSetOperateTpyeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::setLayer()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_delet_all()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
</UL>

<P><STRONG><a name="[298]"></a>RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC18Get_CRC8_Check_SumEPhjh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Verify_CRC8_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int)
</UL>

<P><STRONG><a name="[299]"></a>RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC19Get_CRC16_Check_SumEPhjt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int)
</UL>

<P><STRONG><a name="[290]"></a>RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC21Append_CRC8_Check_SumEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RM_RefereeSystemCRC::Append_CRC8_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
</UL>

<P><STRONG><a name="[295]"></a>RM_RefereeSystemCRC::Verify_CRC8_Check_Sum(unsigned char*, unsigned int)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC21Verify_CRC8_Check_SumEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RM_RefereeSystemCRC::Verify_CRC8_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Get_CRC8_Check_Sum(unsigned char*, unsigned int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int)
</UL>

<P><STRONG><a name="[291]"></a>RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC22Append_CRC16_Check_SumEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
</UL>

<P><STRONG><a name="[296]"></a>RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int)</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, RM_RefereeSystemCRC.o(.text._ZN19RM_RefereeSystemCRC22Verify_CRC16_Check_SumEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RM_RefereeSystemCRC::Verify_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemParseData(unsigned char*, int)
</UL>

<P><STRONG><a name="[82]"></a>SG::UpDate(float, float, float, float)</STRONG> (Thumb, 1272 bytes, Stack size 200 bytes, Wheel.o(.text._ZN2SG6UpDateEffff))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SG::UpDate(float, float, float, float) &rArr; std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::atan2[abi:v180000](float, float)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::sqrt[abi:v180000](float)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Wheel.o(.rodata._ZTV2SG)
</UL>
<P><STRONG><a name="[29d]"></a>SG::SG__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, Variable.o(.text._ZN2SGC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SG::SG__sub_object() &rArr; Wheel_Basic::Wheel_Basic__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wheel_Basic::Wheel_Basic__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wheel_t&lang;SG&rang;::Wheel_t__sub_object()
</UL>

<P><STRONG><a name="[230]"></a>TD::Calc(float)</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, PID.o(.text._ZN2TD4CalcEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TD::Calc(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[30b]"></a>TD::TD__sub_object(float, float, float)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, Variable.o(.text._ZN2TDC2Efff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_t::Pid_t__sub_object()
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.22
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.21
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.20
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.19
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.18
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.17
</UL>

<P><STRONG><a name="[29f]"></a>UI::send_graphic_queue::send_delet_all()</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, darw_dynamic.o(.text._ZN2UI18send_graphic_queue14send_delet_allEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = UI::send_graphic_queue::send_delet_all() &rArr; RM_RefereeSystem::RM_RefereeSystemDelete(char, char) &rArr; RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemDelete(char, char)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemClsToop()
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[2a8]"></a>UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, darw_dynamic.o(.text._ZN2UI18send_graphic_queue3addEN16RM_RefereeSystem21graphic_data_struct_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
</UL>

<P><STRONG><a name="[1a3]"></a>UI::send_graphic_queue::send()</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, darw_dynamic.o(.text._ZN2UI18send_graphic_queue4sendEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = UI::send_graphic_queue::send() &rArr; RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int) &rArr; HAL_UART_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendDataN(RM_RefereeSystem::graphic_data_struct_t const*, int)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefeeTask
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[2a2]"></a>UI::send_graphic_queue::send_wz()</STRONG> (Thumb, 248 bytes, Stack size 184 bytes, darw_dynamic.o(.text._ZN2UI18send_graphic_queue7send_wzEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = UI::send_graphic_queue::send_wz() &rArr; RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t) &rArr; RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[4a7]"></a>UI::send_graphic_queue::send_graphic_queue__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN2UI18send_graphic_queueC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UI::send_graphic_queue::send_graphic_queue__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
</UL>

<P><STRONG><a name="[1a1]"></a>UI::Static::darw_static::Init()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, darw_static.o(.text._ZN2UI6Static11darw_static4InitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = UI::Static::darw_static::Init() &rArr; UI::Static::darw_static::PitchLine() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::setLayer()
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefeeTask
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
</UL>

<P><STRONG><a name="[2a3]"></a>UI::Static::darw_static::setLayer()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, darw_static.o(.text._ZN2UI6Static11darw_static8setLayerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UI::Static::darw_static::setLayer() &rArr; RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::Init()
</UL>

<P><STRONG><a name="[2a4]"></a>UI::Static::darw_static::PitchLine()</STRONG> (Thumb, 2926 bytes, Stack size 1016 bytes, darw_static.o(.text._ZN2UI6Static11darw_static9PitchLineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = UI::Static::darw_static::PitchLine() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::getOutPower()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getAimY()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getAimX()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetInt(char*, unsigned int, int, unsigned int, unsigned int)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetCircle(char*, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetRectangle(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetLine(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetStringSize(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::Init()
</UL>

<P><STRONG><a name="[2b7]"></a>UI::Dynamic::darw_dynamic::VisionMode()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN2UI7Dynamic12darw_dynamic10VisionModeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UI::Dynamic::darw_dynamic::VisionMode()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[2b3]"></a>UI::Dynamic::darw_dynamic::VisionArmor()</STRONG> (Thumb, 752 bytes, Stack size 136 bytes, darw_dynamic.o(.text._ZN2UI7Dynamic12darw_dynamic11VisionArmorEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UI::Dynamic::darw_dynamic::VisionArmor() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getAimY()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getAimX()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetCircle(char*, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[2b4]"></a>UI::Dynamic::darw_dynamic::setLimitPower()</STRONG> (Thumb, 248 bytes, Stack size 72 bytes, darw_dynamic.o(.text._ZN2UI7Dynamic12darw_dynamic13setLimitPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UI::Dynamic::darw_dynamic::setLimitPower() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::getMAXPower()
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[1a2]"></a>UI::Dynamic::darw_dynamic::darw_UI()</STRONG> (Thumb, 1088 bytes, Stack size 200 bytes, darw_dynamic.o(.text._ZN2UI7Dynamic12darw_dynamic7darw_UIEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = UI::Dynamic::darw_dynamic::darw_UI() &rArr; UI::send_graphic_queue::send_wz() &rArr; RM_RefereeSystem::RM_RefereeSystemSendStr(RM_RefereeSystem::ext_client_custom_character_t) &rArr; RM_RefereeSystemCRC::Append_CRC16_Check_Sum(unsigned char*, unsigned int) &rArr; RM_RefereeSystemCRC::Get_CRC16_Check_Sum(unsigned char*, unsigned int, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetRPMFeedback(short)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_wz()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_delet_all()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionMode()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetLine(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetOperateTpye(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefeeTask
</UL>

<P><STRONG><a name="[2b8]"></a>UI::Dynamic::darw_dynamic::curPower()</STRONG> (Thumb, 296 bytes, Stack size 72 bytes, darw_dynamic.o(.text._ZN2UI7Dynamic12darw_dynamic8curPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UI::Dynamic::darw_dynamic::curPower() &rArr; UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getShitf()
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::add(RM_RefereeSystem::graphic_data_struct_t)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::clamp(float, float, float)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetArced(char*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetWidth(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemSetColor(int)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[26e]"></a>BSP::Power::RM_PM01::PM01SendFun()</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN3BSP5Power7RM_PM0111PM01SendFunEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP::Power::RM_PM01::PM01SendFun() &rArr; BSP::Power::RM_PM01::PM01SendData(unsigned int, unsigned short) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendRemote(unsigned int)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendData(unsigned int, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
</UL>

<P><STRONG><a name="[2b9]"></a>BSP::Power::RM_PM01::PM01SendData(unsigned int, unsigned short)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN3BSP5Power7RM_PM0112PM01SendDataEjt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP::Power::RM_PM01::PM01SendData(unsigned int, unsigned short) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>

<P><STRONG><a name="[2ba]"></a>BSP::Power::RM_PM01::PM01SendRemote(unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN3BSP5Power7RM_PM0114PM01SendRemoteEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP::Power::RM_PM01::PM01SendRemote(unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>

<P><STRONG><a name="[2bb]"></a>BSP::Power::RM_PM01::ISDir()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3BSP5Power7RM_PM015ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BSP::Power::RM_PM01::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_SuperCap()
</UL>

<P><STRONG><a name="[2bd]"></a>BSP::Power::RM_PM01::PM01Init()</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN3BSP5Power7RM_PM018PM01InitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::Power::RM_PM01::PM01Init()
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_dr16_init()
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::RM_PM01__sub_object()
</UL>

<P><STRONG><a name="[141]"></a>BSP::Power::RM_PM01::PM01Parse(CAN_RxHeaderTypeDef, unsigned char*)</STRONG> (Thumb, 324 bytes, Stack size 56 bytes, CallBack.o(.text._ZN3BSP5Power7RM_PM019PM01ParseE19CAN_RxHeaderTypeDefPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP::Power::RM_PM01::PM01Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::UpLastTime()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[2bc]"></a>BSP::Power::RM_PM01::RM_PM01__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, darw_dynamic.o(.text._ZN3BSP5Power7RM_PM01C2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BSP::Power::RM_PM01::RM_PM01__sub_object() &rArr; BSP::Power::RM_PM01::PM01Init()
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01Init()
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[2c4]"></a>BSP::Remote::Dr16::remoteLeft()</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr1610remoteLeftEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP::Remote::Dr16::remoteLeft()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
</UL>

<P><STRONG><a name="[241]"></a>BSP::Remote::Dr16::switchLeft()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN3BSP6Remote4Dr1610switchLeftEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::Remote::Dr16::switchLeft()
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Stop()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::KeyBoard()
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Rotating()
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Follow()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Universal()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[232]"></a>BSP::Remote::Dr16::remoteRight()</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr1611remoteRightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP::Remote::Dr16::remoteRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[240]"></a>BSP::Remote::Dr16::switchRight()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN3BSP6Remote4Dr1611switchRightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::Remote::Dr16::switchRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Stop()
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::KeyBoard()
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Follow()
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[2be]"></a>BSP::Remote::Dr16::UpdateStatus()</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr1612UpdateStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP::Remote::Dr16::UpdateStatus() &rArr; BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)
</UL>

<P><STRONG><a name="[2c0]"></a>BSP::Remote::Dr16::Init()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr164InitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BSP::Remote::Dr16::Init() &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_ReceiveToIdle_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_dr16_init()
</UL>

<P><STRONG><a name="[2c1]"></a>BSP::Remote::Dr16::ISDir()</STRONG> (Thumb, 528 bytes, Stack size 184 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr165ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::remoteLeft()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::remoteRight()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Remote()
</UL>

<P><STRONG><a name="[2c9]"></a>BSP::Remote::Dr16::Mouse::zero()</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr165Mouse4zeroEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::Remote::Dr16::Mouse::zero()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Dr16__sub_object()
</UL>

<P><STRONG><a name="[17a]"></a>BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr165ParseEP20__UART_HandleTypeDefi))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_ReceiveToIdle_DMA
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::SaveData(unsigned char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>

<P><STRONG><a name="[2c8]"></a>BSP::Remote::Dr16::Vector::zero()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr166Vector4zeroEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP::Remote::Dr16::Vector::zero()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Dr16__sub_object()
</UL>

<P><STRONG><a name="[2c5]"></a>BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr168ClearOREEP20__UART_HandleTypeDefPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_ReceiveToIdle_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
</UL>

<P><STRONG><a name="[2ca]"></a>BSP::Remote::Dr16::Keyboard::zero()</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr168Keyboard4zeroEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::Remote::Dr16::Keyboard::zero()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Dr16__sub_object()
</UL>

<P><STRONG><a name="[2c6]"></a>BSP::Remote::Dr16::SaveData(unsigned char const*)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr168SaveDataEPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP::Remote::Dr16::SaveData(unsigned char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int)
</UL>

<P><STRONG><a name="[2c7]"></a>BSP::Remote::Dr16::Dr16__sub_object()</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, Dbus.o(.text._ZN3BSP6Remote4Dr16C2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BSP::Remote::Dr16::Dr16__sub_object() &rArr; BSP::Remote::Dr16::Vector::zero()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Keyboard::zero()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Mouse::zero()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Vector::zero()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[2ac]"></a>BSP::SuperCap::LH_Cap::getOutPower()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, darw_static.o(.text._ZN3BSP8SuperCap6LH_Cap11getOutPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::SuperCap::LH_Cap::getOutPower()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
</UL>

<P><STRONG><a name="[19f]"></a>BSP::SuperCap::LH_Cap::SetSendValue(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN3BSP8SuperCap6LH_Cap12SetSendValueEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP::SuperCap::LH_Cap::SetSendValue(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RLSTask
</UL>

<P><STRONG><a name="[2cb]"></a>BSP::SuperCap::LH_Cap::UpdateStatus()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, CallBack.o(.text._ZN3BSP8SuperCap6LH_Cap12UpdateStatusEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP::SuperCap::LH_Cap::UpdateStatus() &rArr; RM_StaticTime::UpLastTime()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::Parse(CAN_RxHeaderTypeDef, unsigned char const*)
</UL>

<P><STRONG><a name="[2cc]"></a>BSP::SuperCap::LH_Cap::ISDir()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3BSP8SuperCap6LH_Cap5ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP::SuperCap::LH_Cap::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_SuperCap()
</UL>

<P><STRONG><a name="[142]"></a>BSP::SuperCap::LH_Cap::Parse(CAN_RxHeaderTypeDef, unsigned char const*)</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, CallBack.o(.text._ZN3BSP8SuperCap6LH_Cap5ParseE19CAN_RxHeaderTypeDefPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP::SuperCap::LH_Cap::Parse(CAN_RxHeaderTypeDef, unsigned char const*) &rArr; BSP::SuperCap::LH_Cap::UpdateStatus() &rArr; RM_StaticTime::UpLastTime()
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::UpdateStatus()
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[1a0]"></a>BSP::SuperCap::LH_Cap::sendCAN(CAN_HandleTypeDef*, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, PowerTask.o(.text._ZN3BSP8SuperCap6LH_Cap7sendCANEP17CAN_HandleTypeDefj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP::SuperCap::LH_Cap::sendCAN(CAN_HandleTypeDef*, unsigned int) &rArr; HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RLSTask
</UL>

<P><STRONG><a name="[4a9]"></a>BSP::SuperCap::LH_Cap::LH_Cap__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN3BSP8SuperCap6LH_CapC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP::SuperCap::LH_Cap::LH_Cap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[2ce]"></a>Dir::Dir_Remote()</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3Dir10Dir_RemoteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[2cf]"></a>Dir::Dir_String()</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3Dir10Dir_StringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Dir::Dir_String() &rArr; Dji_Motor::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::ISDir()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetDir(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[282]"></a>Dir::getSuperCap()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, PowerTask.o(.text._ZN3Dir11getSuperCapEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::getSuperCap()
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>

<P><STRONG><a name="[2d1]"></a>Dir::Dir_SuperCap()</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3Dir12Dir_SuperCapEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Dir::Dir_SuperCap() &rArr; BSP::SuperCap::LH_Cap::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::ISDir()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::ISDir()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[238]"></a>Dir::GetDir_Wheel()</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, Buzzer.o(.text._ZN3Dir12GetDir_WheelEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Dir::GetDir_Wheel()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Update()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[317]"></a>Dir::Ger_Init_Flag()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, Buzzer.o(.text._ZN3Dir13Ger_Init_FlagEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::Ger_Init_Flag()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
</UL>

<P><STRONG><a name="[315]"></a>Dir::GetDir_Remote()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, Buzzer.o(.text._ZN3Dir13GetDir_RemoteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::GetDir_Remote()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
</UL>

<P><STRONG><a name="[235]"></a>Dir::GetDir_String()</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, Buzzer.o(.text._ZN3Dir13GetDir_StringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Dir::GetDir_String()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Update()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[2d2]"></a>Dir::Dir_MeterPower()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3Dir14Dir_MeterPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Dir::Dir_MeterPower() &rArr; PowerMeter::Meter::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::ISDir()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[2d3]"></a>Dir::Dir_Communication()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3Dir17Dir_CommunicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Dir::Dir_Communication() &rArr; Communicat::Gimbal_to_Chassis::Init() &rArr; HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Init()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::ISDir()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[316]"></a>Dir::GetDir_MeterPower()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, Buzzer.o(.text._ZN3Dir17GetDir_MeterPowerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::GetDir_MeterPower()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
</UL>

<P><STRONG><a name="[2e6]"></a>Dir::getDir_Communication()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, LED.o(.text._ZN3Dir20getDir_CommunicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::getDir_Communication()
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Update()
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode::Chassis::Stop()
</UL>

<P><STRONG><a name="[83]"></a>Dir::Attach(IObserver*)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3Dir6AttachEP9IObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Dir::Attach(IObserver*) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.rodata._ZTV3Dir)
</UL>
<P><STRONG><a name="[84]"></a>Dir::Detach(IObserver*)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3Dir6DetachEP9IObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = Dir::Detach(IObserver*) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.rodata._ZTV3Dir)
</UL>
<P><STRONG><a name="[85]"></a>Dir::Notify()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, EvenTask.o(.text._ZN3Dir6NotifyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Dir::Notify() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.rodata._ZTV3Dir)
</UL>
<P><STRONG><a name="[12c]"></a>Dir::UpEvent()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3Dir7UpEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Dir::UpEvent() &rArr; Dir::Dir_Remote() &rArr; BSP::Remote::Dr16::ISDir() &rArr; BSP::Remote::Dr16::ClearORE(__UART_HandleTypeDef*, unsigned char*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_SuperCap()
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Init_Flag()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Communication()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_MeterPower()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Wheel()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_String()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Remote()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirUpdata
</UL>

<P><STRONG><a name="[2db]"></a>Dir::Dir_Wheel()</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3Dir9Dir_WheelEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Dir::Dir_Wheel() &rArr; Dji_Motor::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::ISDir()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetDir(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[2dc]"></a>Dir::Init_Flag()</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, EvenTask.o(.text._ZN3Dir9Init_FlagEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dir::Init_Flag()
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::UpEvent()
</UL>

<P><STRONG><a name="[2dd]"></a>Dir::Dir__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3DirC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Dir::Dir__sub_object() &rArr; ISubject::ISubject__sub_object() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISubject::ISubject__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[73]"></a>Dir::~Dir__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN3DirD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = Dir::~Dir__sub_object() &rArr; ISubject::~ISubject__sub_object() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISubject::~ISubject__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.text.__cxx_global_var_init.2)
</UL>
<P><STRONG><a name="[93]"></a>HAL::_floatEqual(float, float)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, HAL.o(.text._ZN3HAL11_floatEqualEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL::_floatEqual(float, float) &rArr; std::__2::__math::fabs[abi:v180000](float)
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[2cd]"></a>HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, Dji_Motor.o(.text._ZN3HAL12Can_SendDATAEP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::get()
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Send_CAN_MAILBOX1(Motor_send_data_t*, unsigned short)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::sendCAN(CAN_HandleTypeDef*, unsigned int)
</UL>

<P><STRONG><a name="[8c]"></a>HAL::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HAL13_Can_SendDATAEP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[8b]"></a>HAL::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HAL15_Can_SendREMOTEEP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[2e0]"></a>HAL::get()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, HAL.o(.text._ZN3HAL3getEv))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::cosf(float)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::sinf(float)
</UL>

<P><STRONG><a name="[92]"></a>HAL::_sgn(float)</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, HAL.o(.text._ZN3HAL4_sgnEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL::_sgn(float)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[25f]"></a>HAL::cosf(float)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, Wheel.o(.text._ZN3HAL4cosfEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::cosf(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::get()
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
</UL>

<P><STRONG><a name="[88]"></a>HAL::init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, HAL.o(.text._ZN3HAL4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[25a]"></a>HAL::sinf(float)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, darw_dynamic.o(.text._ZN3HAL4sinfEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::sinf(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::get()
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalTarget()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[8f]"></a>HAL::_cosf(float)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HAL5_cosfEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::_cosf(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[8e]"></a>HAL::_sinf(float)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HAL5_sinfEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::_sinf(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[90]"></a>HAL::_sqrt(float, float)</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, HAL.o(.text._ZN3HAL5_sqrtEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL::_sqrt(float, float) &rArr; __hardfp_sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[91]"></a>HAL::_atan2(float, float)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, HAL.o(.text._ZN3HAL6_atan2Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL::_atan2(float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>
<BR>[Address Reference Count : 2]<UL><LI> HAL.o(.rodata._ZTV3HAL)
<LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[89]"></a>HAL::_delay(unsigned long)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, HAL.o(.text._ZN3HAL6_delayEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL::_delay(unsigned long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[190]"></a>HAL::inject(HAL*)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HAL6injectEPS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL::inject(HAL*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[8d]"></a>HAL::_GetTick()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, HAL.o(.text._ZN3HAL8_GetTickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL::_GetTick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[8a]"></a>HAL::_osDelay(unsigned long)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, HAL.o(.text._ZN3HAL8_osDelayEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL::_osDelay(unsigned long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[321]"></a>HAL::HAL__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, Init.o(.text._ZN3HALC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL::HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::My_hal__sub_object()
</UL>

<P><STRONG><a name="[87]"></a>HAL::~HAL__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, HAL.o(.text._ZN3HALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL::~HAL__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::~HAL__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[86]"></a>HAL::~HAL__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, HAL.o(.text._ZN3HALD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL::~HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::~My_hal__sub_object()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::~HAL__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> HAL.o(.rodata._ZTV3HAL)
</UL>
<P><STRONG><a name="[2e4]"></a>LED::Normal_State()</STRONG> (Thumb, 492 bytes, Stack size 24 bytes, LED.o(.text._ZN3LED12Normal_StateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = LED::Normal_State() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::aRGB_led_show(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Update()
</UL>

<P><STRONG><a name="[2e5]"></a>LED::aRGB_led_show(unsigned int)</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, LED.o(.text._ZN3LED13aRGB_led_showEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED::aRGB_led_show(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Normal_State()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Update()
</UL>

<P><STRONG><a name="[94]"></a>LED::Update()</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, LED.o(.text._ZN3LED6UpdateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = LED::Update() &rArr; LED::Normal_State() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_Wheel()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_String()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Normal_State()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::getDir_Communication()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::aRGB_led_show(unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LED.o(.rodata._ZTV3LED)
</UL>
<P><STRONG><a name="[2e7]"></a>LED::LED__sub_object(ISubject*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN3LEDC2EP8ISubject))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LED::LED__sub_object(ISubject*) &rArr; IObserver::IObserver__sub_object(ISubject*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IObserver::IObserver__sub_object(ISubject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
</UL>

<P><STRONG><a name="[96]"></a>LED::~LED__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, LED.o(.text._ZN3LEDD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED::~LED__deallocating() &rArr; LED::~LED__sub_object() &rArr; IObserver::~IObserver__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::~LED__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LED.o(.rodata._ZTV3LED)
</UL>
<P><STRONG><a name="[95]"></a>LED::~LED__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, LED.o(.text._ZN3LEDD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED::~LED__sub_object() &rArr; IObserver::~IObserver__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IObserver::~IObserver__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::~LED__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> LED.o(.rodata._ZTV3LED)
</UL>
<P><STRONG><a name="[27e]"></a>PID::GetErr()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN3PID6GetErrEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PID::GetErr() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpScaleMaxPow(PID*, Dji_Motor&)
</UL>

<P><STRONG><a name="[234]"></a>PID::GetCout()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN3PID7GetCoutEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PID::GetCout() &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[23c]"></a>PID::clearPID()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, PID.o(.text._ZN3PID8clearPIDEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PID::clearPID()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::handle()
</UL>

<P><STRONG><a name="[22c]"></a>PID::GetPidPos(Kpid_t, double, double, double)</STRONG> (Thumb, 720 bytes, Stack size 160 bytes, PID.o(.text._ZN3PID9GetPidPosE6Kpid_tddd))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = PID::GetPidPos(Kpid_t, double, double, double) &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::Calc(float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
</UL>

<P><STRONG><a name="[2ed]"></a>PID::PID__sub_object(double, double)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, Variable.o(.text._ZN3PIDC2Edd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pid_t::Pid_t__sub_object()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.15
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.13
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.11
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.9
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.7
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.5
</UL>

<P><STRONG><a name="[2ef]"></a>Math::RLS&lang;2u&rang;::reset()</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, PowerTask.o(.text._ZN4Math3RLSILj2EE5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator*(float const&) const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::eye()
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::zeros()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator=(Matrixf&lang;2, 2&rang;)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator=(Matrixf&lang;2, 1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
</UL>

<P><STRONG><a name="[283]"></a>Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)</STRONG> (Thumb, 622 bytes, Stack size 448 bytes, PowerTask.o(.text._ZN4Math3RLSILj2EE6updateER7MatrixfILi2ELi1EEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float) &rArr; Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator=(Matrixf&lang;2, 2&rang;)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator/(float const&) const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator+=(Matrixf&lang;2, 1&rang;)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator*(float const&) const
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::~Matrixf__sub_object()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang;::~Matrixf__sub_object()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator/(float const&) const
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang;::operator[](int const&)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::trans() const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator=(Matrixf&lang;2, 1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>

<P><STRONG><a name="[288]"></a>Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, PowerTask.o(.text._ZN4Math3RLSILj2EEC2Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = Math::RLS&lang;2u&rang;::RLS__sub_object(float, float) &rArr; Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::validate() const
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::zeros()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
</UL>

<P><STRONG><a name="[28a]"></a>Math::RLS&lang;2u&rang;::~RLS__sub_object()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN4Math3RLSILj2EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Math::RLS&lang;2u&rang;::~RLS__sub_object() &rArr; Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object()
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
</UL>

<P><STRONG><a name="[246]"></a>Mode::Chassis::Stop()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Mode7Chassis4StopEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mode::Chassis::Stop() &rArr; Dir::getDir_Communication()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::getDir_Communication()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getStop()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[243]"></a>Mode::Chassis::Follow()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Mode7Chassis6FollowEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mode::Chassis::Follow() &rArr; Communicat::Gimbal_to_Chassis::getFollow()
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getFollow()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[245]"></a>Mode::Chassis::KeyBoard()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Mode7Chassis8KeyBoardEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mode::Chassis::KeyBoard() &rArr; Communicat::Gimbal_to_Chassis::getKeyBoard()
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getKeyBoard()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[244]"></a>Mode::Chassis::Rotating()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Mode7Chassis8RotatingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mode::Chassis::Rotating() &rArr; Communicat::Gimbal_to_Chassis::getRotating()
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getRotating()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[242]"></a>Mode::Chassis::Universal()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Mode7Chassis9UniversalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Mode::Chassis::Universal() &rArr; Communicat::Gimbal_to_Chassis::getUniversal()
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getUniversal()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::switchLeft()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[223]"></a>Task::update()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZN4Task6updateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Task::update()
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[272]"></a>Task::Task__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN4TaskC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Task::Task__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
</UL>

<P><STRONG><a name="[98]"></a>Task::~Task__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN4TaskD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Task::~Task__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV4Task)
</UL>
<P><STRONG><a name="[97]"></a>Task::~Task__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZN4TaskD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Task::~Task__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::~Chassis_Task__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.rodata._ZTV4Task)
</UL>
<P><STRONG><a name="[2ee]"></a>Pid_t::Pid_t__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, Variable.o(.text._ZN5Pid_tC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>

<P><STRONG><a name="[30f]"></a>Buzzer::buzzer_off()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, Buzzer.o(.text._ZN6Buzzer10buzzer_offEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Buzzer::buzzer_off()
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_B_()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::SYSTEM_START()
</UL>

<P><STRONG><a name="[30c]"></a>Buzzer::SYSTEM_START()</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, Buzzer.o(.text._ZN6Buzzer12SYSTEM_STARTEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Buzzer::SYSTEM_START() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
</UL>

<P><STRONG><a name="[310]"></a>Buzzer::B(unsigned char)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, Buzzer.o(.text._ZN6Buzzer1BEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Buzzer::B(unsigned char) &rArr; Buzzer::B_B_B_B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_B_()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
</UL>

<P><STRONG><a name="[311]"></a>Buzzer::B_()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, Buzzer.o(.text._ZN6Buzzer2B_Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Buzzer::B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
</UL>

<P><STRONG><a name="[312]"></a>Buzzer::B_B_()</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, Buzzer.o(.text._ZN6Buzzer4B_B_Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Buzzer::B_B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
</UL>

<P><STRONG><a name="[30d]"></a>Buzzer::STOP()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, Buzzer.o(.text._ZN6Buzzer4STOPEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buzzer::STOP() &rArr; Buzzer::buzzer_off()
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_B_()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::SYSTEM_START()
</UL>

<P><STRONG><a name="[313]"></a>Buzzer::B_B_B_()</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, Buzzer.o(.text._ZN6Buzzer6B_B_B_Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Buzzer::B_B_B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
</UL>

<P><STRONG><a name="[99]"></a>Buzzer::Update()</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, Buzzer.o(.text._ZN6Buzzer6UpdateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Buzzer::Update() &rArr; Buzzer::B(unsigned char) &rArr; Buzzer::B_B_B_B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::SYSTEM_START()
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Ger_Init_Flag()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_Wheel()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_String()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_MeterPower()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::GetDir_Remote()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Buzzer.o(.rodata._ZTV6Buzzer)
</UL>
<P><STRONG><a name="[314]"></a>Buzzer::B_B_B_B_()</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, Buzzer.o(.text._ZN6Buzzer8B_B_B_B_Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Buzzer::B_B_B_B_() &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::STOP()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_off()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B(unsigned char)
</UL>

<P><STRONG><a name="[30e]"></a>Buzzer::buzzer_on(unsigned short, unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, Buzzer.o(.text._ZN6Buzzer9buzzer_onEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer::buzzer_on(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_B_()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::SYSTEM_START()
</UL>

<P><STRONG><a name="[318]"></a>Buzzer::Buzzer__sub_object(ISubject*)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN6BuzzerC2EP8ISubject))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Buzzer::Buzzer__sub_object(ISubject*) &rArr; IObserver::IObserver__sub_object(ISubject*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IObserver::IObserver__sub_object(ISubject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
</UL>

<P><STRONG><a name="[9b]"></a>Buzzer::~Buzzer__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, Buzzer.o(.text._ZN6BuzzerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Buzzer::~Buzzer__deallocating() &rArr; Buzzer::~Buzzer__sub_object() &rArr; IObserver::~IObserver__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::~Buzzer__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Buzzer.o(.rodata._ZTV6Buzzer)
</UL>
<P><STRONG><a name="[9a]"></a>Buzzer::~Buzzer__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, Buzzer.o(.text._ZN6BuzzerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Buzzer::~Buzzer__sub_object() &rArr; IObserver::~IObserver__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IObserver::~IObserver__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::~Buzzer__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Buzzer.o(.rodata._ZTV6Buzzer)
</UL>
<P><STRONG><a name="[4a8]"></a>Kpid_t::Kpid_t__sub_object(double, double, double)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, Variable.o(.text._ZN6Kpid_tC2Eddd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.14
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.12
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.10
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.8
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.6
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
</UL>

<P><STRONG><a name="[319]"></a>My_hal::_dr16_init()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_hal10_dr16_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = My_hal::_dr16_init() &rArr; BSP::Remote::Dr16::Init() &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Init()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Init()
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01Init()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_RefereeSystem::RM_RefereeSystemInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[31a]"></a>My_hal::_timer_init()</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, My_HAL.o(.text._ZN6My_hal11_timer_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = My_hal::_timer_init() &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[320]"></a>My_hal::_buzzer_init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, My_HAL.o(.text._ZN6My_hal12_buzzer_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = My_hal::_buzzer_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[a2]"></a>My_hal::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, My_HAL.o(.text._ZN6My_hal13_Can_SendDATAEP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = My_hal::_Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[31d]"></a>My_hal::_referee_init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, My_HAL.o(.text._ZN6My_hal13_referee_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = My_hal::_referee_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[31f]"></a>My_hal::_capactal_init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, My_HAL.o(.text._ZN6My_hal14_capactal_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = My_hal::_capactal_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[a1]"></a>My_hal::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, My_HAL.o(.text._ZN6My_hal15_Can_SendREMOTEEP17CAN_HandleTypeDefjPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = My_hal::_Can_SendREMOTE(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[31e]"></a>My_hal::_darw_graphic_init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, My_HAL.o(.text._ZN6My_hal18_darw_graphic_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = My_hal::_darw_graphic_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[9e]"></a>My_hal::init()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_hal4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = My_hal::init() &rArr; My_hal::_dr16_init() &rArr; BSP::Remote::Dr16::Init() &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_buzzer_init()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_capactal_init()
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_darw_graphic_init()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_referee_init()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_can_init()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_dr16_init()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::_timer_init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[9f]"></a>My_hal::_delay(unsigned long)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, My_HAL.o(.text._ZN6My_hal6_delayEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = My_hal::_delay(unsigned long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[a3]"></a>My_hal::_GetTick()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_hal8_GetTickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = My_hal::_GetTick()
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[a0]"></a>My_hal::_osDelay(unsigned long)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, My_HAL.o(.text._ZN6My_hal8_osDelayEm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = My_hal::_osDelay(unsigned long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[31c]"></a>My_hal::_can_init()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_hal9_can_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = My_hal::_can_init() &rArr; Can_Init() &rArr; CAN_Filter_Init() &rArr; HAL_CAN_ConfigFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Init()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::init()
</UL>

<P><STRONG><a name="[18f]"></a>My_hal::My_hal__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, Init.o(.text._ZN6My_halC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = My_hal::My_hal__sub_object() &rArr; HAL::HAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[9d]"></a>My_hal::~My_hal__deallocating()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_halD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = My_hal::~My_hal__deallocating() &rArr; My_hal::~My_hal__sub_object() &rArr; HAL::~HAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::~My_hal__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[9c]"></a>My_hal::~My_hal__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, My_HAL.o(.text._ZN6My_halD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = My_hal::~My_hal__sub_object() &rArr; HAL::~HAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::~HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::~My_hal__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> My_HAL.o(.rodata._ZTV6My_hal)
</UL>
<P><STRONG><a name="[279]"></a>RM_Key::GetRisingKey()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, darw_dynamic.o(.text._ZN6RM_Key12GetRisingKeyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_Key::GetRisingKey()
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
</UL>

<P><STRONG><a name="[278]"></a>RM_Key::UpKey(bool)</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, darw_dynamic.o(.text._ZN6RM_Key5UpKeyEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RM_Key::UpKey(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISOne(unsigned int)
</UL>

<P><STRONG><a name="[229]"></a>FeedTar::UpData(float)</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, PID.o(.text._ZN7FeedTar6UpDataEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FeedTar::UpData(float) &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
</UL>

<P><STRONG><a name="[322]"></a>FeedTar::FeedTar__sub_object(float, float)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, Variable.o(.text._ZN7FeedTarC2Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.27
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.26
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.25
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.24
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.23
</UL>

<P><STRONG><a name="[324]"></a>Matrixf&lang;1, 1&rang;::Matrixf__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN7MatrixfILi1ELi1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Matrixf&lang;1, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
</UL>

<P><STRONG><a name="[2fb]"></a>Matrixf&lang;1, 1&rang;::~Matrixf__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, PowerTask.o(.text._ZN7MatrixfILi1ELi1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Matrixf&lang;1, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f9]"></a>Matrixf&lang;1, 1&rang;::operator[](int const&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN7MatrixfILi1ELi1EEixERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Matrixf&lang;1, 1&rang;::operator[](int const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[326]"></a>Matrixf&lang;1, 2&rang;::Matrixf__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN7MatrixfILi1ELi2EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Matrixf&lang;1, 2&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::trans() const
</UL>

<P><STRONG><a name="[2fc]"></a>Matrixf&lang;1, 2&rang;::~Matrixf__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, PowerTask.o(.text._ZN7MatrixfILi1ELi2EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Matrixf&lang;1, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::trans() const
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f4]"></a>Matrixf&lang;2, 1&rang;::zeros()</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EE5zerosEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::zeros() &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*) &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
</UL>

<P><STRONG><a name="[327]"></a>Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEC2EPf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*) &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::zeros()
</UL>

<P><STRONG><a name="[284]"></a>Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEC2ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&) &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>

<P><STRONG><a name="[289]"></a>Matrixf&lang;2, 1&rang;::Matrixf__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator*(float const&) const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator/(float const&) const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
</UL>

<P><STRONG><a name="[286]"></a>Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::~RLS__sub_object()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator*(float const&) const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator/(float const&) const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::~PowerUpData_t__sub_object()
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
</UL>

<P><STRONG><a name="[285]"></a>Matrixf&lang;2, 1&rang;::operator=(Matrixf&lang;2, 1&rang;)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEaSES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Matrixf&lang;2, 1&rang;::operator=(Matrixf&lang;2, 1&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>

<P><STRONG><a name="[27c]"></a>Matrixf&lang;2, 1&rang;::operator[](int const&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEixERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Matrixf&lang;2, 1&rang;::operator[](int const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::PowerTask_t__sub_object()
</UL>

<P><STRONG><a name="[2fe]"></a>Matrixf&lang;2, 1&rang;::operator+=(Matrixf&lang;2, 1&rang;)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi1EEpLES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Matrixf&lang;2, 1&rang;::operator+=(Matrixf&lang;2, 1&rang;) &rArr; arm_mat_add_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_add_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f0]"></a>Matrixf&lang;2, 2&rang;::eye()</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi2EE3eyeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
</UL>

<P><STRONG><a name="[32a]"></a>Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi2EEC2EPf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*) &rArr; Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::eye()
</UL>

<P><STRONG><a name="[304]"></a>Matrixf&lang;2, 2&rang;::Matrixf__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi2EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_init_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator*(float const&) const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator/(float const&) const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)
</UL>

<P><STRONG><a name="[2f3]"></a>Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi2EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator*(float const&) const
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::~RLS__sub_object()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator/(float const&) const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f2]"></a>Matrixf&lang;2, 2&rang;::operator=(Matrixf&lang;2, 2&rang;)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN7MatrixfILi2ELi2EEaSES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Matrixf&lang;2, 2&rang;::operator=(Matrixf&lang;2, 2&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[258]"></a>Tools_t::MinPosHelm(float, float, float*, float, float)</STRONG> (Thumb, 808 bytes, Stack size 128 bytes, Tools.o(.text._ZN7Tools_t10MinPosHelmEffPfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Tools_t::MinPosHelm(float, float, float*, float, float) &rArr; std::__2::__math::fmod[abi:v180000](float, float) &rArr; __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fabs[abi:v180000](float)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fmod[abi:v180000](float, float)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[22a]"></a>Tools_t::Round_Error(float, float, float)</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, Tools.o(.text._ZN7Tools_t11Round_ErrorEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Tools_t::Round_Error(float, float, float) &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
</UL>

<P><STRONG><a name="[25b]"></a>Tools_t::Zero_crossing_processing(float, float, float)</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, Tools.o(.text._ZN7Tools_t24Zero_crossing_processingEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Tools_t::Zero_crossing_processing(float, float, float) &rArr; std::__2::__math::fmod[abi:v180000](float, float) &rArr; __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fmod[abi:v180000](float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[267]"></a>Tools_t::clamp(float, float, float)</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, Tools.o(.text._ZN7Tools_t5clampEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Tools_t::clamp(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
</UL>

<P><STRONG><a name="[32c]"></a>Wheel_t&lang;SG&rang;::Wheel_t__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, Variable.o(.text._ZN7Wheel_tI2SGEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Wheel_t&lang;SG&rang;::Wheel_t__sub_object() &rArr; SG::SG__sub_object() &rArr; Wheel_Basic::Wheel_Basic__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::SG__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.16
</UL>

<P><STRONG><a name="[2de]"></a>ISubject::ISubject__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN8ISubjectC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = ISubject::ISubject__sub_object() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir__sub_object()
</UL>

<P><STRONG><a name="[2df]"></a>ISubject::~ISubject__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, EvenTask.o(.text._ZN8ISubjectD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = ISubject::~ISubject__sub_object() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::~Dir__sub_object()
</UL>

<P><STRONG><a name="[203]"></a>RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, BSP_Motor.o(.text._ZN8RM_Motor19_Motor_ID_IDX_BIND_EPhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*)
</UL>

<P><STRONG><a name="[200]"></a>RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, BSP_Motor.o(.text._ZN8RM_Motor26GET_Motor_ID_ADDRESS_BIND_Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::ISDir()
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::ISDir()
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Parse(CAN_RxHeaderTypeDef, unsigned char*)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetDir(short)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::GetEquipData(short, Dji_Data)
</UL>

<P><STRONG><a name="[202]"></a>RM_Motor::RM_Motor__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, Dji_Motor.o(.text._ZN8RM_MotorC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RM_Motor::RM_Motor__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*)
</UL>

<P><STRONG><a name="[257]"></a>Dji_Motor::GetEquipData(short, Dji_Data)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZN9Dji_Motor12GetEquipDataEs8Dji_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Dji_Motor::GetEquipData(short, Dji_Data) &rArr; RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[22d]"></a>Dji_Motor::GetRPMFeedback(short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, darw_dynamic.o(.text._ZN9Dji_Motor14GetRPMFeedbackEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dji_Motor::GetRPMFeedback(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Filtering()
</UL>

<P><STRONG><a name="[22b]"></a>Dji_Motor::GetAngleFeedback(short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZN9Dji_Motor16GetAngleFeedbackEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dji_Motor::GetAngleFeedback(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
</UL>

<P><STRONG><a name="[27f]"></a>Dji_Motor::GetEquipData_for(short, Dji_Data)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, PowerTask.o(.text._ZN9Dji_Motor16GetEquipData_forEs8Dji_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dji_Motor::GetEquipData_for(short, Dji_Data)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
</UL>

<P><STRONG><a name="[270]"></a>Dji_Motor::Send_CAN_MAILBOX0(Motor_send_data_t*, unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, Dji_Motor.o(.text._ZN9Dji_Motor17Send_CAN_MAILBOX0EP17Motor_send_data_tt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Dji_Motor::Send_CAN_MAILBOX0(Motor_send_data_t*, unsigned short) &rArr; Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int) &rArr; HAL_CAN_AddTxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Send(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
</UL>

<P><STRONG><a name="[26f]"></a>Dji_Motor::Send_CAN_MAILBOX1(Motor_send_data_t*, unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, Dji_Motor.o(.text._ZN9Dji_Motor17Send_CAN_MAILBOX1EP17Motor_send_data_tt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Dji_Motor::Send_CAN_MAILBOX1(Motor_send_data_t*, unsigned short) &rArr; HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::Can_SendDATA(CAN_HandleTypeDef*, unsigned int, unsigned char*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Send()
</UL>

<P><STRONG><a name="[a4]"></a>Dji_Motor::ISDir()</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, Dji_Motor.o(.text._ZN9Dji_Motor5ISDirEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Dji_Motor::ISDir() &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Wheel()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_String()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Dji_Motor.o(.rodata._ZTV9Dji_Motor)
</UL>
<P><STRONG><a name="[a5]"></a>Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*)</STRONG> (Thumb, 712 bytes, Stack size 64 bytes, Dji_Motor.o(.text._ZN9Dji_Motor5ParseE19CAN_RxHeaderTypeDefPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Dji_Motor::Parse(CAN_RxHeaderTypeDef, unsigned char*) &rArr; RM_StaticTime::ISDir(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::UpLastTime()
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_StaticTime::ISDir(unsigned int)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Dji_Motor.o(.rodata._ZTV9Dji_Motor)
</UL>
<P><STRONG><a name="[2d0]"></a>Dji_Motor::GetDir(short)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN9Dji_Motor6GetDirEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Dji_Motor::GetDir(short) &rArr; RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::GET_Motor_ID_ADDRESS_BIND_(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_Wheel()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir_String()
</UL>

<P><STRONG><a name="[239]"></a>Dji_Motor::setMSD(Motor_send_data_t*, short, int)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, Dji_Motor.o(.text._ZN9Dji_Motor6setMSDEP17Motor_send_data_tsi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Dji_Motor::setMSD(Motor_send_data_t*, short, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::CAN_Setting()
</UL>

<P><STRONG><a name="[32f]"></a>Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, Dji_Motor.o(.text._ZN9Dji_MotorC2EshP14Dji_Motor_DataPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RM_Motor::RM_Motor__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[564]"></a>Dji_Motor::Dji_Motor__sub_object(short, unsigned char, Dji_Motor_Data*, unsigned char*)</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, Dji_Motor.o(.text._ZN9Dji_MotorC2EshP14Dji_Motor_DataPh), UNUSED)

<P><STRONG><a name="[2e8]"></a>IObserver::IObserver__sub_object(ISubject*)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, EvenTask.o(.text._ZN9IObserverC2EP8ISubject))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IObserver::IObserver__sub_object(ISubject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Buzzer__sub_object(ISubject*)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::LED__sub_object(ISubject*)
</UL>

<P><STRONG><a name="[a7]"></a>IObserver::~IObserver__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, EvenTask.o(.text._ZN9IObserverD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IObserver::~IObserver__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.rodata._ZTV9IObserver)
</UL>
<P><STRONG><a name="[a6]"></a>IObserver::~IObserver__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, Buzzer.o(.text._ZN9IObserverD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IObserver::~IObserver__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::~Buzzer__sub_object()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::~LED__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.rodata._ZTV9IObserver)
</UL>
<P><STRONG><a name="[d4]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::saveVFPAsX()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE10saveVFPAsXEv))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[cb]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11getFloatRegEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMD(void*)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPv3(void*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMX(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[cc]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11setFloatRegEiy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMD(void*)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPv3(void*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMX(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[d0]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::isSignalFrame()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13isSignalFrameEv))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[333]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13stepWithEHABIEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI() &rArr; _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_eht_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step(bool)
</UL>

<P><STRONG><a name="[ca]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validFloatReg(int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13validFloatRegEi))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[d1]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getFunctionNameEPcjPj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[d3]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getRegisterNameEi))
<BR><BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::getRegisterName(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[336]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)
</UL>

<P><STRONG><a name="[d2]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE24setInfoBasedOnIPRegisterEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[cd]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step(bool)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE4stepEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI() &rArr; _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[c8]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6getRegEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[cf]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6jumptoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto() &rArr; libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreCoreAndJumpTo()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[c9]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6setRegEij))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[ce]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE7getInfoEP15unw_proc_info_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[c7]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validReg(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE8validRegEi))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[c6]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::~UnwindCursor__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEED0Ev))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[335]"></a>libunwind::Registers_arm::getRegisterName(int)</STRONG> (Thumb, 580 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind13Registers_arm15getRegisterNameEi))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)
</UL>

<P><STRONG><a name="[337]"></a>libunwind::Registers_arm::restoreSavedFloatRegisters()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind13Registers_arm26restoreSavedFloatRegistersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPv3(void*)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPWithFLDMD(void*)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPWithFLDMX(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()
</UL>

<P><STRONG><a name="[c5]"></a>libunwind::AbstractUnwindCursor::~AbstractUnwindCursor__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind20AbstractUnwindCursorD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[ac]"></a>__cxxabiv1::__shim_type_info::noop1() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[ad]"></a>__cxxabiv1::__shim_type_info::noop2() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[af]"></a>__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[b0]"></a>__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[b1]"></a>__cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[33c]"></a>__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
</UL>

<P><STRONG><a name="[ae]"></a>__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const &rArr; __dynamic_cast &rArr; is_equal(std::type_info const*, std::type_info const*, bool) &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
</UL>
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[b3]"></a>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[b4]"></a>__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[b5]"></a>__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[305]"></a>Math::RLS&lang;2u&rang;::validate() const</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, PowerTask.o(.text._ZNK4Math3RLSILj2EE8validateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Math::RLS&lang;2u&rang;::validate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
</UL>

<P><STRONG><a name="[2f6]"></a>Matrixf&lang;2, 1&rang;::trans() const</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi1EE5transEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::trans() const &rArr; arm_mat_trans_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_trans_f32
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2fa]"></a>Matrixf&lang;2, 1&rang;::operator/(float const&) const</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi1EEdvERKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::operator/(float const&) const &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_scale_f32
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2fd]"></a>Matrixf&lang;2, 1&rang;::operator*(float const&) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi1EEmlERKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang;::operator*(float const&) const &rArr; Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_scale_f32
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[302]"></a>Matrixf&lang;2, 2&rang;::operator/(float const&) const</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi2EEdvERKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang;::operator/(float const&) const &rArr; Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_scale_f32
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[301]"></a>Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi2EEmiERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const &rArr; arm_mat_sub_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_sub_f32
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f1]"></a>Matrixf&lang;2, 2&rang;::operator*(float const&) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNK7MatrixfILi2ELi2EEmlERKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang;::operator*(float const&) const &rArr; Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_scale_f32
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
</UL>

<P><STRONG><a name="[d7]"></a>std::logic_error::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stdlib_stdexcept.cpp.o(.text._ZNKSt11logic_error4whatEv))
<BR>[Address Reference Count : 2]<UL><LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
<LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
</UL>
<P><STRONG><a name="[db]"></a>std::bad_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNKSt13bad_exception4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[dd]"></a>std::bad_array_new_length::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNKSt20bad_array_new_length4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
</UL>
<P><STRONG><a name="[341]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE12__node_allocB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::get_allocator() const
</UL>

<P><STRONG><a name="[343]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE13__end_as_linkB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_pointer_traits&lang;IObserver*, void*&rang;::__unsafe_link_pointer_cast[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes_at_back(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>

<P><STRONG><a name="[346]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE4__szB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::empty[abi:v180000]() const
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::size[abi:v180000]() const
</UL>

<P><STRONG><a name="[348]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::empty[abi:v180000]() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE5emptyB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::empty[abi:v180000]() const &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
</UL>

<P><STRONG><a name="[25c]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator bool[abi:v180000]() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEcvbB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator bool[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::executeState()
</UL>

<P><STRONG><a name="[25d]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator-&rang;[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEptB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::executeState()
</UL>

<P><STRONG><a name="[221]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator bool[abi:v180000]() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEcvbB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator bool[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[222]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator-&rang;[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEptB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[34b]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::get[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE3getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::get[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[34d]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::operator-&rang;[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEEptB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[490]"></a>std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__211__wrap_iterIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE4baseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>

<P><STRONG><a name="[220]"></a>std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__211__wrap_iterIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEdeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[34e]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::capacity[abi:v180000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE8capacityB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::capacity[abi:v180000]() const &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[34f]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9__end_capB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::capacity[abi:v180000]() const
</UL>

<P><STRONG><a name="[397]"></a>std::__2::default_delete&lang;Chassis_Task&rang;::operator()[abi:v180000](Chassis_Task*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteI12Chassis_TaskEclB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task&rang;::operator()[abi:v180000](Chassis_Task*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*)
</UL>

<P><STRONG><a name="[39e]"></a>std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteI12StateHandlerEclB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>

<P><STRONG><a name="[3b2]"></a>std::__2::default_delete&lang;LED&rang;::operator()[abi:v180000](LED*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNKSt3__214default_deleteI3LEDEclB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;LED&rang;::operator()[abi:v180000](LED*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*)
</UL>

<P><STRONG><a name="[3b9]"></a>std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteI4TaskEclB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*)
</UL>

<P><STRONG><a name="[3c3]"></a>std::__2::default_delete&lang;Buzzer&rang;::operator()[abi:v180000](Buzzer*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNKSt3__214default_deleteI6BuzzerEclB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Buzzer&rang;::operator()[abi:v180000](Buzzer*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*)
</UL>

<P><STRONG><a name="[3c9]"></a>std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;::operator()[abi:v180000](Chassis_Task::StopHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteIN12Chassis_Task11StopHandlerEEclB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;::operator()[abi:v180000](Chassis_Task::StopHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*)
</UL>

<P><STRONG><a name="[3cf]"></a>std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;::operator()[abi:v180000](Chassis_Task::FollowHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteIN12Chassis_Task13FollowHandlerEEclB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;::operator()[abi:v180000](Chassis_Task::FollowHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*)
</UL>

<P><STRONG><a name="[3d5]"></a>std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;::operator()[abi:v180000](Chassis_Task::KeyBoardHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteIN12Chassis_Task15KeyBoardHandlerEEclB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;::operator()[abi:v180000](Chassis_Task::KeyBoardHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*)
</UL>

<P><STRONG><a name="[3db]"></a>std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;::operator()[abi:v180000](Chassis_Task::RotatingHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteIN12Chassis_Task15RotatingHandlerEEclB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;::operator()[abi:v180000](Chassis_Task::RotatingHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*)
</UL>

<P><STRONG><a name="[3e1]"></a>std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;::operator()[abi:v180000](Chassis_Task::UniversalHandler*) const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__214default_deleteIN12Chassis_Task16UniversalHandlerEEclB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;::operator()[abi:v180000](Chassis_Task::UniversalHandler*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*)
</UL>

<P><STRONG><a name="[2d9]"></a>std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__215__list_iteratorIP9IObserverPvEdeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>

<P><STRONG><a name="[493]"></a>std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::base[abi:v180000]() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorINS0_IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEE4baseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::base[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
</UL>

<P><STRONG><a name="[352]"></a>std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorINS0_IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEEdeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator--[abi:v180000]()
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator-&rang;[abi:v180000]() const
</UL>

<P><STRONG><a name="[355]"></a>std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator-&rang;[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorINS0_IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEEptB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
</UL>

<P><STRONG><a name="[486]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE4baseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
</UL>

<P><STRONG><a name="[354]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEdeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[356]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator-&rang;[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEptB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator-&rang;[abi:v180000]() const &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>

<P><STRONG><a name="[349]"></a>std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__217__compressed_pairIP12StateHandlerNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator bool[abi:v180000]() const
</UL>

<P><STRONG><a name="[34a]"></a>std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__217__compressed_pairIP4TaskNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::operator bool[abi:v180000]() const
</UL>

<P><STRONG><a name="[359]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const
</UL>

<P><STRONG><a name="[35b]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]() const
</UL>

<P><STRONG><a name="[350]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() const
</UL>

<P><STRONG><a name="[34c]"></a>std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__217__compressed_pairIPNS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::get[abi:v180000]() const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::operator-&rang;[abi:v180000]() const
</UL>

<P><STRONG><a name="[347]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const
</UL>

<P><STRONG><a name="[342]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() const
</UL>

<P><STRONG><a name="[360]"></a>std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__221__list_const_iteratorIP9IObserverPvEdeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[35c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() const
</UL>

<P><STRONG><a name="[35f]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const
</UL>

<P><STRONG><a name="[357]"></a>std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__222__compressed_pair_elemIP12StateHandlerLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() const
</UL>

<P><STRONG><a name="[358]"></a>std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__222__compressed_pair_elemIP4TaskLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() const
</UL>

<P><STRONG><a name="[35a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__222__compressed_pair_elemIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() const
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const
</UL>

<P><STRONG><a name="[35d]"></a>std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNKSt3__222__compressed_pair_elemIPNS_11__list_nodeIP9IObserverPvEELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() const
</UL>

<P><STRONG><a name="[35e]"></a>std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNKSt3__222__compressed_pair_elemIjLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const
</UL>

<P><STRONG><a name="[361]"></a>std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const</STRONG> (Thumb, 126 bytes, Stack size 128 bytes, ChassisTask.o(.text._ZNKSt3__229_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorIPS6_EEEclB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const &rArr; void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[364]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::get_allocator() const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__24listIP9IObserverNS_9allocatorIS2_EEE13get_allocatorEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::get_allocator() const &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;IObserver*&rang;::allocator__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[366]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::size[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNKSt3__24listIP9IObserverNS_9allocatorIS2_EEE4sizeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::size[abi:v180000]() const &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[464]"></a>bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ChassisTask.o(.text._ZNKSt3__26__lessIvvEclB7v180000IjjEEbRKT_RKT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)
</UL>

<P><STRONG><a name="[367]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE11__recommendB7v180000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__throw_length_error[abi:v180000]() const &rArr; std::__2::__throw_length_error[abi:v180000](char const*) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__throw_length_error[abi:v180000]() const
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[36c]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE14__annotate_newB7v180000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_contiguous_container[abi:v180000](void const*, void const*, void const*, void const*) const
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::data[abi:v180000]() const
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
</UL>

<P><STRONG><a name="[36f]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE17__annotate_deleteB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_contiguous_container[abi:v180000](void const*, void const*, void const*, void const*) const
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::data[abi:v180000]() const
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
</UL>

<P><STRONG><a name="[369]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__throw_length_error[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE20__throw_length_errorB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__throw_length_error[abi:v180000]() const &rArr; std::__2::__throw_length_error[abi:v180000](char const*) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const
</UL>

<P><STRONG><a name="[36e]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_contiguous_container[abi:v180000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE31__annotate_contiguous_containerB7v180000EPKvSA_SA_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_contiguous_container[abi:v180000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
</UL>

<P><STRONG><a name="[36d]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::data[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE4dataB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::data[abi:v180000]() const &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
</UL>

<P><STRONG><a name="[218]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE4sizeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[372]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7__allocB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[36a]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8capacityB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
</UL>

<P><STRONG><a name="[368]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v180000]()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang; const&)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]() const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const
</UL>

<P><STRONG><a name="[373]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE9__end_capB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() const &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const
</UL>

<P><STRONG><a name="[404]"></a>std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::max_size[abi:v180000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNKSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE8max_sizeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang; const&)
</UL>

<P><STRONG><a name="[40d]"></a>std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::max_size[abi:v180000]() const</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNKSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE8max_sizeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)
</UL>

<P><STRONG><a name="[df]"></a>std::bad_alloc::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNKSt9bad_alloc4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
</UL>
<P><STRONG><a name="[378]"></a>std::logic_error::logic_error(char const*)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, stdexcept.cpp.o(.text._ZNSt11logic_errorC2EPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[37d]"></a>std::logic_error::logic_error__sub_object(char const*)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, stdexcept.cpp.o(.text._ZNSt11logic_errorC2EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::logic_error::logic_error__sub_object(char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error__sub_object[abi:v180000](char const*)
</UL>

<P><STRONG><a name="[d6]"></a>std::logic_error::~logic_error__deallocating()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::logic_error::~logic_error__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
</UL>
<P><STRONG><a name="[37a]"></a>std::logic_error::~logic_error()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::~exception__sub_object()
</UL>

<P><STRONG><a name="[d5]"></a>std::logic_error::~logic_error__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::logic_error::~logic_error__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt11logic_error)
<LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
</UL>
<P><STRONG><a name="[565]"></a>std::domain_error::~domain_error()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[566]"></a>std::domain_error::~domain_error__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[6c]"></a>std::length_error::~length_error()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::length_error::~length_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.text._ZNSt3__220__throw_length_errorB7v180000EPKc)
</UL>
<P><STRONG><a name="[567]"></a>std::length_error::~length_error__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[568]"></a>std::out_of_range::~out_of_range()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[569]"></a>std::out_of_range::~out_of_range__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[56a]"></a>std::invalid_argument::~invalid_argument()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[56b]"></a>std::invalid_argument::~invalid_argument__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt11logic_errorD2Ev), UNUSED)

<P><STRONG><a name="[37c]"></a>std::length_error::length_error__sub_object[abi:v180000](char const*)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt12length_errorC2B7v180000EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::length_error::length_error__sub_object[abi:v180000](char const*) &rArr; std::logic_error::logic_error__sub_object(char const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error__sub_object(char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
</UL>

<P><STRONG><a name="[d8]"></a>std::length_error::~length_error__deallocating()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stdlib_stdexcept.cpp.o(.text._ZNSt12length_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::length_error::~length_error__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_stdexcept.cpp.o(.rodata._ZTVSt12length_error)
</UL>
<P><STRONG><a name="[da]"></a>std::bad_exception::~bad_exception__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt13bad_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::bad_exception::~bad_exception__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[496]"></a>std::bad_array_new_length::bad_array_new_length()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt20bad_array_new_lengthC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v180000]()
</UL>

<P><STRONG><a name="[56c]"></a>std::bad_array_new_length::bad_array_new_length__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt20bad_array_new_lengthC2Ev), UNUSED)

<P><STRONG><a name="[dc]"></a>std::bad_array_new_length::~bad_array_new_length__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt20bad_array_new_lengthD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::bad_array_new_length::~bad_array_new_length__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
</UL>
<P><STRONG><a name="[37e]"></a>std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210__distanceB7v180000INS_21__list_const_iteratorIP9IObserverPvEEEENS_15iterator_traitsIT_E15difference_typeES7_S7_NS_18input_iterator_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag) &rArr; std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&) &rArr; std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
</UL>

<P><STRONG><a name="[381]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE12__node_allocB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[389]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__unlink_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE14__unlink_nodesEPNS_16__list_node_baseIS2_PvEES9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__unlink_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
</UL>

<P><STRONG><a name="[383]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE3endB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
</UL>

<P><STRONG><a name="[385]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE4__szB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[387]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE5beginB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]() &rArr; std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()
</UL>

<P><STRONG><a name="[388]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::destroy[abi:v180000]&lang;IObserver*, void, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::empty[abi:v180000]() const
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__unlink_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object()
</UL>

<P><STRONG><a name="[38c]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&)</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEEC2ERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&) &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;(int&&, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]&lang;IObserver*&rang;(std::__2::allocator&lang;IObserver*&rang; const&)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000](std::__2::allocator&lang;IObserver*&rang; const&)
</UL>

<P><STRONG><a name="[390]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object()</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::__default_init_tag&rang;(int&&, std::__2::__default_init_tag&&)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[392]"></a>std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object()
</UL>

<P><STRONG><a name="[393]"></a>std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[395]"></a>std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEE5resetB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*) &rArr; std::__2::default_delete&lang;Chassis_Task&rang;::operator()[abi:v180000](Chassis_Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task&rang;::operator()[abi:v180000](Chassis_Task*) const
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[398]"></a>std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[399]"></a>std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*&, std::__2::__value_init_tag&rang;(Chassis_Task*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[21b]"></a>std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*) &rArr; std::__2::default_delete&lang;Chassis_Task&rang;::operator()[abi:v180000](Chassis_Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[39b]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEE5resetB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[273]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;()</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__value_init_tag, std::__2::__value_init_tag&rang;(std::__2::__value_init_tag&&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
</UL>

<P><STRONG><a name="[274]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::~Chassis_Task__sub_object()
</UL>

<P><STRONG><a name="[254]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEaSB7v180000IN12Chassis_Task11StopHandlerENS2_IS7_EEvvEERS4_ONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::StopHandler&rang; const&)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::release[abi:v180000]()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[24b]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEaSB7v180000IN12Chassis_Task13FollowHandlerENS2_IS7_EEvvEERS4_ONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang; const&)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::release[abi:v180000]()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[251]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEaSB7v180000IN12Chassis_Task15KeyBoardHandlerENS2_IS7_EEvvEERS4_ONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang; const&)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::release[abi:v180000]()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[24e]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEaSB7v180000IN12Chassis_Task15RotatingHandlerENS2_IS7_EEvvEERS4_ONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang; const&)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::release[abi:v180000]()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[248]"></a>std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEaSB7v180000IN12Chassis_Task16UniversalHandlerENS2_IS7_EEvvEERS4_ONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*) &rArr; std::__2::default_delete&lang;StateHandler&rang;::operator()[abi:v180000](StateHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang; const&)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::release[abi:v180000]()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3af]"></a>std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEE5resetB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*) &rArr; std::__2::default_delete&lang;LED&rang;::operator()[abi:v180000](LED*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;LED&rang;::operator()[abi:v180000](LED*) const
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3b3]"></a>std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(LED*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(LED*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;LED*&, std::__2::__value_init_tag&rang;(LED*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
</UL>

<P><STRONG><a name="[75]"></a>std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*) &rArr; std::__2::default_delete&lang;LED&rang;::operator()[abi:v180000](LED*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.text.__cxx_global_var_init.3)
</UL>
<P><STRONG><a name="[3b5]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3b7]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEE5resetB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3ba]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3bb]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000EOS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;(Task*&&, std::__2::default_delete&lang;Task&rang;&&)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::release[abi:v180000]()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3bd]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000I12Chassis_TaskNS2_IS6_EEvvEEONS0_IT_T0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;(Chassis_Task*&&, std::__2::default_delete&lang;Chassis_Task&rang;&&)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::release[abi:v180000]()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3bf]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*)
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[3c0]"></a>std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEE5resetB7v180000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*) &rArr; std::__2::default_delete&lang;Buzzer&rang;::operator()[abi:v180000](Buzzer*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Buzzer&rang;::operator()[abi:v180000](Buzzer*) const
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3c4]"></a>std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Buzzer*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Buzzer*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Buzzer*&, std::__2::__value_init_tag&rang;(Buzzer*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
</UL>

<P><STRONG><a name="[76]"></a>std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*) &rArr; std::__2::default_delete&lang;Buzzer&rang;::operator()[abi:v180000](Buzzer*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.text.__cxx_global_var_init.4)
</UL>
<P><STRONG><a name="[3a1]"></a>std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3c7]"></a>std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEE5resetB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;::operator()[abi:v180000](Chassis_Task::StopHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;::operator()[abi:v180000](Chassis_Task::StopHandler*) const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3a0]"></a>std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3ca]"></a>std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::StopHandler*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::StopHandler*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::StopHandler*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[255]"></a>std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;::operator()[abi:v180000](Chassis_Task::StopHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3a4]"></a>std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3cd]"></a>std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEE5resetB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;::operator()[abi:v180000](Chassis_Task::FollowHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;::operator()[abi:v180000](Chassis_Task::FollowHandler*) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3a3]"></a>std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3d0]"></a>std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::FollowHandler*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::FollowHandler*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[24c]"></a>std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;::operator()[abi:v180000](Chassis_Task::FollowHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3a7]"></a>std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3d3]"></a>std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEE5resetB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;::operator()[abi:v180000](Chassis_Task::KeyBoardHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;::operator()[abi:v180000](Chassis_Task::KeyBoardHandler*) const
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3a6]"></a>std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3d6]"></a>std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::KeyBoardHandler*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::KeyBoardHandler*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[252]"></a>std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;::operator()[abi:v180000](Chassis_Task::KeyBoardHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3aa]"></a>std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3d9]"></a>std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEE5resetB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;::operator()[abi:v180000](Chassis_Task::RotatingHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;::operator()[abi:v180000](Chassis_Task::RotatingHandler*) const
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3a9]"></a>std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3dc]"></a>std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::RotatingHandler*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::RotatingHandler*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[24f]"></a>std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;::operator()[abi:v180000](Chassis_Task::RotatingHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3ad]"></a>std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::get_deleter[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEE11get_deleterB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::get_deleter[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3df]"></a>std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEE5resetB7v180000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;::operator()[abi:v180000](Chassis_Task::UniversalHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;::operator()[abi:v180000](Chassis_Task::UniversalHandler*) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3ac]"></a>std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3e2]"></a>std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::UniversalHandler*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::UniversalHandler*) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
</UL>

<P><STRONG><a name="[249]"></a>std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*) &rArr; std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;::operator()[abi:v180000](Chassis_Task::UniversalHandler*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[3e4]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE5resetB7v180000EPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*) &rArr; std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::second[abi:v180000]()
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3e8]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::release[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE7releaseB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::release[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[3e9]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__dependent_type&lang;std::__2::__unique_ptr_deleter_sfinae&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;, true&rang;::__good_rval_ref_type)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEEC2B7v180000ILb1EvEEPS5_NS_16__dependent_typeINS_27__unique_ptr_deleter_sfinaeIS9_EEXT_EE20__good_rval_ref_typeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__dependent_type&lang;std::__2::__unique_ptr_deleter_sfinae&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;, true&rang;::__good_rval_ref_type) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&)
</UL>

<P><STRONG><a name="[3eb]"></a>std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*) &rArr; std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[3ec]"></a>std::__2::__list_node&lang;IObserver*, void*&rang;::__as_link[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__211__list_nodeIP9IObserverPvE9__as_linkB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_node&lang;IObserver*, void*&rang;::__as_link[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[479]"></a>std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__211__wrap_iterIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEC2B7v180000ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[224]"></a>std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__211__wrap_iterIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEppB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[219]"></a>std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000I12Chassis_TaskJEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;() &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[3ed]"></a>std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__211make_uniqueB7v180000I3LEDJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(LED*)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::LED__sub_object(ISubject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
</UL>

<P><STRONG><a name="[3ee]"></a>std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__211make_uniqueB7v180000I6BuzzerJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Buzzer*)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Buzzer__sub_object(ISubject*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
</UL>

<P><STRONG><a name="[253]"></a>std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task11StopHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::StopHandler*)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::StopHandler__sub_object(Chassis_Task&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[24a]"></a>std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task13FollowHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::FollowHandler*)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FollowHandler__sub_object(Chassis_Task&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[250]"></a>std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15KeyBoardHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::KeyBoardHandler*)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::KeyBoardHandler__sub_object(Chassis_Task&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[24d]"></a>std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15RotatingHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::RotatingHandler*)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::RotatingHandler__sub_object(Chassis_Task&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[247]"></a>std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task16UniversalHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::UniversalHandler*)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::UniversalHandler__sub_object(Chassis_Task&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::updateState()
</UL>

<P><STRONG><a name="[371]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__212__to_addressB7v180000INS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEPT_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::data[abi:v180000]() const
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[3ef]"></a>_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>

<P><STRONG><a name="[3f1]"></a>_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKS9_EEEEESB_</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKS9_EEEEESB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKS9_EEEEESB_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[3f3]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE17__destruct_at_endB7v180000EPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::clear[abi:v180000]()
</UL>

<P><STRONG><a name="[3f4]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE17__destruct_at_endB7v180000EPS5_NS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]()
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[3f7]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::clear[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE5clearB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::clear[abi:v180000]() &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[3f5]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE7__allocB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[3f9]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9__end_capB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[3fb]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEEC2EjjS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]()
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3fe]"></a>std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::clear[abi:v180000]() &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::capacity[abi:v180000]() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::clear[abi:v180000]()
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]()
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3a2]"></a>std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::StopHandler&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI12StateHandlerEC2B7v180000IN12Chassis_Task11StopHandlerELi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::StopHandler&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3a5]"></a>std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI12StateHandlerEC2B7v180000IN12Chassis_Task13FollowHandlerELi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3a8]"></a>std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI12StateHandlerEC2B7v180000IN12Chassis_Task15KeyBoardHandlerELi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3ab]"></a>std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI12StateHandlerEC2B7v180000IN12Chassis_Task15RotatingHandlerELi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3ae]"></a>std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI12StateHandlerEC2B7v180000IN12Chassis_Task16UniversalHandlerELi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;StateHandler&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler, 0&rang;(std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
</UL>

<P><STRONG><a name="[45a]"></a>std::__2::default_delete&lang;Task&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task, 0&rang;(std::__2::default_delete&lang;Chassis_Task&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214default_deleteI4TaskEC2B7v180000I12Chassis_TaskLi0EEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::default_delete&lang;Task&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task, 0&rang;(std::__2::default_delete&lang;Chassis_Task&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Chassis_Task&rang;, void&rang;(std::__2::default_delete&lang;Chassis_Task&rang;&&)
</UL>

<P><STRONG><a name="[375]"></a>std::__2::numeric_limits&lang;int&rang;::max[abi:v180000]()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__214numeric_limitsIiE3maxB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::numeric_limits&lang;int&rang;::max[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_numeric_limits&lang;int, true&rang;::max[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[401]"></a>std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__214pointer_traitsIPNS_16__list_node_baseIP9IObserverPvEEE10pointer_toB7v180000ERS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()
</UL>

<P><STRONG><a name="[384]"></a>std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__215__list_iteratorIP9IObserverPvEC2B7v180000EPNS_16__list_node_baseIS2_S3_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()
</UL>

<P><STRONG><a name="[2da]"></a>std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__215__list_iteratorIP9IObserverPvEppB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>

<P><STRONG><a name="[344]"></a>std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__216__list_node_baseIP9IObserverPvE6__selfB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node&lang;IObserver*, void*&rang;::__as_link[abi:v180000]()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[351]"></a>std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__216__list_node_baseIP9IObserverPvE9__as_nodeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_node_base&lang;IObserver*, void*&rang;::__as_node[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const
</UL>

<P><STRONG><a name="[38d]"></a>std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__216__list_node_baseIP9IObserverPvEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_pointer_traits&lang;IObserver*, void*&rang;::__unsafe_link_pointer_cast[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object()
</UL>

<P><STRONG><a name="[48c]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[48d]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]&lang;IObserver*&rang;(std::__2::allocator&lang;IObserver*&rang; const&)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[48e]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;IObserver*&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIP9IObserverEEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;IObserver*&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;IObserver*&rang;::allocator__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)
</UL>

<P><STRONG><a name="[3ff]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEE10deallocateB7v180000ERS7_PS6_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
</UL>

<P><STRONG><a name="[3f6]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEE7destroyB7v180000IS6_vEEvRS7_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[374]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEE8max_sizeB7v180000IS7_vEEjRKS7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang; const&) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[405]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEE9constructB7v180000IS6_JNS2_I12Chassis_TaskNS4_ISA_EEEEEvEEvRS7_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[407]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEE9constructB7v180000IS6_JS6_EvEEvRS7_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[38b]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE10deallocateB7v180000ERS7_PS6_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
</UL>

<P><STRONG><a name="[38a]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::destroy[abi:v180000]&lang;IObserver*, void, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE7destroyB7v180000IS4_vvEEvRS7_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::destroy[abi:v180000]&lang;IObserver*, void, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
</UL>

<P><STRONG><a name="[40a]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE8allocateB7v180000ERS7_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&)
</UL>

<P><STRONG><a name="[40c]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE8max_sizeB7v180000IS7_vEEjRKS7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::max_size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int)
</UL>

<P><STRONG><a name="[40e]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**, IObserver* const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__216allocator_traitsINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE9constructB7v180000IS4_JRKS4_EvEEvRS7_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**, IObserver* const&) &rArr; void std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&&rang;(IObserver**, IObserver* const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&&rang;(IObserver**, IObserver* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[362]"></a>std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ChassisTask.o(.text._ZNSt3__216reverse_iteratorINS0_IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEEC2B7v180000ES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const
</UL>

<P><STRONG><a name="[410]"></a>std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator++[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__216reverse_iteratorINS0_IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEEppB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator++[abi:v180000]() &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>

<P><STRONG><a name="[485]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEC2B7v180000ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
</UL>

<P><STRONG><a name="[353]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator--[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEmmB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator*[abi:v180000]() const
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator++[abi:v180000]()
</UL>

<P><STRONG><a name="[469]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__216reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEppB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[396]"></a>std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12Chassis_TaskNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::release[abi:v180000]()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*)
</UL>

<P><STRONG><a name="[394]"></a>std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12Chassis_TaskNS_14default_deleteIS1_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::reset[abi:v180000](Chassis_Task*)
</UL>

<P><STRONG><a name="[39a]"></a>std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*&, std::__2::__value_init_tag&rang;(Chassis_Task*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12Chassis_TaskNS_14default_deleteIS1_EEEC2B7v180000IRS2_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*&, std::__2::__value_init_tag&rang;(Chassis_Task*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*&, void&rang;(Chassis_Task*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task*)
</UL>

<P><STRONG><a name="[39c]"></a>std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12StateHandlerNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>

<P><STRONG><a name="[39d]"></a>std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12StateHandlerNS_14default_deleteIS1_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;&&)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;&&)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;&&)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;&&)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;& std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::operator=[abi:v180000]&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;&&)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::reset[abi:v180000](StateHandler*)
</UL>

<P><STRONG><a name="[39f]"></a>std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__value_init_tag, std::__2::__value_init_tag&rang;(std::__2::__value_init_tag&&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP12StateHandlerNS_14default_deleteIS1_EEEC2B7v180000INS_16__value_init_tagES7_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__value_init_tag, std::__2::__value_init_tag&rang;(std::__2::__value_init_tag&&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;()
</UL>

<P><STRONG><a name="[3b0]"></a>std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP3LEDNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*)
</UL>

<P><STRONG><a name="[3b1]"></a>std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP3LEDNS_14default_deleteIS1_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::reset[abi:v180000](LED*)
</UL>

<P><STRONG><a name="[3b4]"></a>std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;LED*&, std::__2::__value_init_tag&rang;(LED*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP3LEDNS_14default_deleteIS1_EEEC2B7v180000IRS2_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;LED*&, std::__2::__value_init_tag&rang;(LED*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;LED*&, void&rang;(LED*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(LED*)
</UL>

<P><STRONG><a name="[3b8]"></a>std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP4TaskNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::release[abi:v180000]()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*)
</UL>

<P><STRONG><a name="[3b6]"></a>std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP4TaskNS_14default_deleteIS1_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::get_deleter[abi:v180000]()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*)
</UL>

<P><STRONG><a name="[3be]"></a>std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;(Chassis_Task*&&, std::__2::default_delete&lang;Chassis_Task&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP4TaskNS_14default_deleteIS1_EEEC2B7v180000IP12Chassis_TaskNS3_IS7_EEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;(Chassis_Task*&&, std::__2::default_delete&lang;Chassis_Task&rang;&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Chassis_Task&rang;, void&rang;(std::__2::default_delete&lang;Chassis_Task&rang;&&) &rArr; std::__2::default_delete&lang;Task&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task, 0&rang;(std::__2::default_delete&lang;Chassis_Task&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Chassis_Task&rang;, void&rang;(std::__2::default_delete&lang;Chassis_Task&rang;&&)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*, void&rang;(Chassis_Task*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3bc]"></a>std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;(Task*&&, std::__2::default_delete&lang;Task&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIP4TaskNS_14default_deleteIS1_EEEC2B7v180000IS2_S4_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;(Task*&&, std::__2::default_delete&lang;Task&rang;&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Task&rang;, void&rang;(std::__2::default_delete&lang;Task&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Task&rang;, void&rang;(std::__2::default_delete&lang;Task&rang;&&)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Task*, void&rang;(Task*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[3c1]"></a>std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP6BuzzerNS_14default_deleteIS1_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*)
</UL>

<P><STRONG><a name="[3c2]"></a>std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP6BuzzerNS_14default_deleteIS1_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::reset[abi:v180000](Buzzer*)
</UL>

<P><STRONG><a name="[3c5]"></a>std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Buzzer*&, std::__2::__value_init_tag&rang;(Buzzer*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIP6BuzzerNS_14default_deleteIS1_EEEC2B7v180000IRS2_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Buzzer*&, std::__2::__value_init_tag&rang;(Buzzer*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Buzzer*&, void&rang;(Buzzer*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Buzzer*)
</UL>

<P><STRONG><a name="[3c8]"></a>std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3c6]"></a>std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::StopHandler*)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::get_deleter[abi:v180000]()
</UL>

<P><STRONG><a name="[3cb]"></a>std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::StopHandler*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEEC2B7v180000IRS3_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::StopHandler*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, void&rang;(Chassis_Task::StopHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::StopHandler*)
</UL>

<P><STRONG><a name="[3ce]"></a>std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3cc]"></a>std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::FollowHandler*)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::get_deleter[abi:v180000]()
</UL>

<P><STRONG><a name="[3d1]"></a>std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEEC2B7v180000IRS3_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, void&rang;(Chassis_Task::FollowHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::FollowHandler*)
</UL>

<P><STRONG><a name="[3d4]"></a>std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3d2]"></a>std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::KeyBoardHandler*)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::get_deleter[abi:v180000]()
</UL>

<P><STRONG><a name="[3d7]"></a>std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEEC2B7v180000IRS3_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, void&rang;(Chassis_Task::KeyBoardHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::KeyBoardHandler*)
</UL>

<P><STRONG><a name="[3da]"></a>std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3d8]"></a>std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::RotatingHandler*)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::get_deleter[abi:v180000]()
</UL>

<P><STRONG><a name="[3dd]"></a>std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEEC2B7v180000IRS3_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, void&rang;(Chassis_Task::RotatingHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::RotatingHandler*)
</UL>

<P><STRONG><a name="[3e0]"></a>std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3de]"></a>std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::reset[abi:v180000](Chassis_Task::UniversalHandler*)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::get_deleter[abi:v180000]()
</UL>

<P><STRONG><a name="[3e3]"></a>std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEEC2B7v180000IRS3_NS_16__value_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, void&rang;(Chassis_Task::UniversalHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::UniversalHandler*)
</UL>

<P><STRONG><a name="[43b]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]()
</UL>

<P><STRONG><a name="[43d]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
</UL>

<P><STRONG><a name="[43f]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEEC2B7v180000IDnNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[3fa]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]()
</UL>

<P><STRONG><a name="[3f8]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::second[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__alloc[abi:v180000]()
</UL>

<P><STRONG><a name="[3fc]"></a>std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__217__compressed_pairIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEEC2B7v180000IDnS9_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[3e5]"></a>std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIPNS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::release[abi:v180000]()
</UL>

<P><STRONG><a name="[3e6]"></a>std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIPNS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
</UL>

<P><STRONG><a name="[3ea]"></a>std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIPNS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEEC2B7v180000IRS6_SA_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, void&rang;(std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, void&rang;(std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__dependent_type&lang;std::__2::__unique_ptr_deleter_sfinae&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;, true&rang;::__good_rval_ref_type)
</UL>

<P><STRONG><a name="[386]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE5firstB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]()
</UL>

<P><STRONG><a name="[382]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEE6secondB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]()
</UL>

<P><STRONG><a name="[391]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::__default_init_tag&rang;(int&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEC2B7v180000IiNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::__default_init_tag&rang;(int&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;int, void&rang;(int&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object()
</UL>

<P><STRONG><a name="[38f]"></a>std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;(int&&, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__217__compressed_pairIjNS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEC2B7v180000IiS7_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;(int&&, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;int, void&rang;(int&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&)
</UL>

<P><STRONG><a name="[44d]"></a>std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__217__libcpp_allocateB7v180000Ejj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088 + Unknown Stack Size
<LI>Call Chain = std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int&rang;(unsigned int)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__is_overaligned_for_new[abi:v180000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int)
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int)
</UL>

<P><STRONG><a name="[3fd]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__219__allocate_at_leastB7v180000INS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERSA_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[363]"></a>void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)</STRONG> (Thumb, 108 bytes, Stack size 80 bytes, ChassisTask.o(.text._ZNSt3__219__allocator_destroyB7v180000INS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorINS8_IPS6_EEEESB_EEvRT_T0_T1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator++[abi:v180000]()
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const
</UL>

<P><STRONG><a name="[453]"></a>std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__219__libcpp_deallocateB7v180000EPvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;&rang;(void*, unsigned int)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__is_overaligned_for_new[abi:v180000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
</UL>

<P><STRONG><a name="[3f0]"></a>std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvE6__callB7v180000ERKS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_
</UL>

<P><STRONG><a name="[3f2]"></a>std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvE6__callB7v180000ERKS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKS9_EEEEESB_
</UL>

<P><STRONG><a name="[370]"></a>std::__2::__throw_length_error[abi:v180000](char const*)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__220__throw_length_errorB7v180000EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = std::__2::__throw_length_error[abi:v180000](char const*) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error__sub_object[abi:v180000](char const*)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__throw_length_error[abi:v180000]() const
</UL>

<P><STRONG><a name="[489]"></a>std::__2::__convert_to_integral[abi:v180000](int)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__221__convert_to_integralB7v180000Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__convert_to_integral[abi:v180000](int)
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int)
</UL>

<P><STRONG><a name="[450]"></a>void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int&rang;(unsigned int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__221__libcpp_operator_newB7v180000IJjEEEPvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int&rang;(unsigned int) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[44f]"></a>void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__221__libcpp_operator_newB7v180000IJjSt11align_val_tEEEPvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[46f]"></a>std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::__list_const_iterator__sub_object[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__221__list_const_iteratorIP9IObserverPvEC2B7v180000ERKNS_15__list_iteratorIS2_S3_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::__list_const_iterator__sub_object[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[472]"></a>std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__221__list_const_iteratorIP9IObserverPvEmmB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
</UL>

<P><STRONG><a name="[380]"></a>std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__221__list_const_iteratorIP9IObserverPvEppB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[46c]"></a>std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__allocator_destructor__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, EvenTask.o(.text._ZNSt3__222__allocator_destructorINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEC2B7v180000ERS7_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__allocator_destructor__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&)
</UL>

<P><STRONG><a name="[3e7]"></a>std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__222__allocator_destructorINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEclB7v180000EPS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::operator()[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::reset[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*)
</UL>

<P><STRONG><a name="[412]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI12Chassis_TaskEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[414]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI12Chassis_TaskEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*&, std::__2::__value_init_tag&rang;(Chassis_Task*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[416]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI12StateHandlerEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[418]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI12StateHandlerEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;StateHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__value_init_tag, std::__2::__value_init_tag&rang;(std::__2::__value_init_tag&&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[41a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI3LEDEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[41c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI3LEDEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;LED&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;LED*&, std::__2::__value_init_tag&rang;(LED*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[41e]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI4TaskEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[420]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Chassis_Task&rang;, void&rang;(std::__2::default_delete&lang;Chassis_Task&rang;&&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI4TaskEELi1ELb1EEC2B7v180000INS1_I12Chassis_TaskEEvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Chassis_Task&rang;, void&rang;(std::__2::default_delete&lang;Chassis_Task&rang;&&) &rArr; std::__2::default_delete&lang;Task&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task, 0&rang;(std::__2::default_delete&lang;Chassis_Task&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::default_delete&lang;Task&rang;::default_delete__sub_object[abi:v180000]&lang;Chassis_Task, 0&rang;(std::__2::default_delete&lang;Chassis_Task&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;(Chassis_Task*&&, std::__2::default_delete&lang;Chassis_Task&rang;&&)
</UL>

<P><STRONG><a name="[422]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Task&rang;, void&rang;(std::__2::default_delete&lang;Task&rang;&&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI4TaskEELi1ELb1EEC2B7v180000IS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Task&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::default_delete&lang;Task&rang;, void&rang;(std::__2::default_delete&lang;Task&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;(Task*&&, std::__2::default_delete&lang;Task&rang;&&)
</UL>

<P><STRONG><a name="[424]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI6BuzzerEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[426]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteI6BuzzerEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Buzzer&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Buzzer*&, std::__2::__value_init_tag&rang;(Buzzer*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[428]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task11StopHandlerEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[42a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task11StopHandlerEEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::StopHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[42c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task13FollowHandlerEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[42e]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task13FollowHandlerEEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[430]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task15KeyBoardHandlerEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[432]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task15KeyBoardHandlerEEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[434]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task15RotatingHandlerEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[436]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task15RotatingHandlerEEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[438]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task16UniversalHandlerEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[43a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_14default_deleteIN12Chassis_Task16UniversalHandlerEEELi1ELb1EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[445]"></a>std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEELi1ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[447]"></a>std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, void&rang;(std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEEEELi1ELb0EEC2B7v180000IS9_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;, void&rang;(std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
</UL>

<P><STRONG><a name="[43e]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[441]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEELi1ELb1EEC2B7v180000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[449]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEELi1ELb1EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[44b]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEELi1ELb1EEC2B7v180000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::__default_init_tag&rang;(int&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[44c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorINS_11__list_nodeIP9IObserverPvEEEELi1ELb1EEC2B7v180000IS7_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;(int&&, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
</UL>

<P><STRONG><a name="[411]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP12Chassis_TaskLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[413]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*&, void&rang;(Chassis_Task*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP12Chassis_TaskLi0ELb0EEC2B7v180000IRS2_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*&, void&rang;(Chassis_Task*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*&, std::__2::__value_init_tag&rang;(Chassis_Task*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[415]"></a>std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP12StateHandlerLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[417]"></a>std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP12StateHandlerLi0ELb0EEC2B7v180000ENS_16__value_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;StateHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__value_init_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;StateHandler*, std::__2::default_delete&lang;StateHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__value_init_tag, std::__2::__value_init_tag&rang;(std::__2::__value_init_tag&&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[419]"></a>std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIP3LEDLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[41b]"></a>std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;LED*&, void&rang;(LED*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIP3LEDLi0ELb0EEC2B7v180000IRS2_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;LED*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;LED*&, void&rang;(LED*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LED*, std::__2::default_delete&lang;LED&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;LED*&, std::__2::__value_init_tag&rang;(LED*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[41d]"></a>std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP4TaskLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[41f]"></a>std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*, void&rang;(Chassis_Task*&&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP4TaskLi0ELb0EEC2B7v180000IP12Chassis_TaskvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task*, void&rang;(Chassis_Task*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task*, std::__2::default_delete&lang;Chassis_Task&rang;&rang;(Chassis_Task*&&, std::__2::default_delete&lang;Chassis_Task&rang;&&)
</UL>

<P><STRONG><a name="[421]"></a>std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Task*, void&rang;(Task*&&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIP4TaskLi0ELb0EEC2B7v180000IS2_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Task*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Task*, void&rang;(Task*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Task*, std::__2::default_delete&lang;Task&rang;&rang;(Task*&&, std::__2::default_delete&lang;Task&rang;&&)
</UL>

<P><STRONG><a name="[423]"></a>std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIP6BuzzerLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[425]"></a>std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Buzzer*&, void&rang;(Buzzer*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIP6BuzzerLi0ELb0EEC2B7v180000IRS2_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Buzzer*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Buzzer*&, void&rang;(Buzzer*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Buzzer*, std::__2::default_delete&lang;Buzzer&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Buzzer*&, std::__2::__value_init_tag&rang;(Buzzer*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[427]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task11StopHandlerELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[429]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, void&rang;(Chassis_Task::StopHandler*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task11StopHandlerELi0ELb0EEC2B7v180000IRS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::StopHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, void&rang;(Chassis_Task::StopHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::StopHandler*, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::StopHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::StopHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[42b]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task13FollowHandlerELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[42d]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, void&rang;(Chassis_Task::FollowHandler*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task13FollowHandlerELi0ELb0EEC2B7v180000IRS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::FollowHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, void&rang;(Chassis_Task::FollowHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::FollowHandler*, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::FollowHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[42f]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task15KeyBoardHandlerELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[431]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, void&rang;(Chassis_Task::KeyBoardHandler*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task15KeyBoardHandlerELi0ELb0EEC2B7v180000IRS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::KeyBoardHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, void&rang;(Chassis_Task::KeyBoardHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::KeyBoardHandler*, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::KeyBoardHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[433]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task15RotatingHandlerELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[435]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, void&rang;(Chassis_Task::RotatingHandler*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task15RotatingHandlerELi0ELb0EEC2B7v180000IRS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::RotatingHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, void&rang;(Chassis_Task::RotatingHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::RotatingHandler*, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::RotatingHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[437]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task16UniversalHandlerELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[439]"></a>std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, void&rang;(Chassis_Task::UniversalHandler*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPN12Chassis_Task16UniversalHandlerELi0ELb0EEC2B7v180000IRS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Chassis_Task::UniversalHandler*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, void&rang;(Chassis_Task::UniversalHandler*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Chassis_Task::UniversalHandler*, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&rang;(Chassis_Task::UniversalHandler*&, std::__2::__value_init_tag&&)
</UL>

<P><STRONG><a name="[43c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::first[abi:v180000]()
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[440]"></a>std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEELi0ELb0EEC2B7v180000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[444]"></a>std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIPNS_11__list_nodeIP9IObserverPvEELi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[446]"></a>std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIPNS_11__list_nodeIP9IObserverPvEELi0ELb0EEC2B7v180000IRS6_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*&, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&&)
</UL>

<P><STRONG><a name="[442]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEELi1ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::second[abi:v180000]()
</UL>

<P><STRONG><a name="[443]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEELi1ELb0EEC2B7v180000IS8_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[448]"></a>std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIjLi0ELb0EE5__getB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::first[abi:v180000]()
</UL>

<P><STRONG><a name="[44a]"></a>std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;int, void&rang;(int&&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__222__compressed_pair_elemIjLi0ELb0EEC2B7v180000IivEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned int, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v180000]&lang;int, void&rang;(int&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;(int&&, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&&)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned int, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;int, std::__2::__default_init_tag&rang;(int&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[45d]"></a>std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang; std::__2::__make_exception_guard[abi:v180000]&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, ChassisTask.o(.text._ZNSt3__222__make_exception_guardB7v180000INS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEEENS_28__exception_guard_exceptionsIT_EESE_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang; std::__2::__make_exception_guard[abi:v180000]&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__exception_guard_exceptions__sub_object[abi:v180000](std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__exception_guard_exceptions__sub_object[abi:v180000](std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[400]"></a>std::__2::__libcpp_numeric_limits&lang;int, true&rang;::max[abi:v180000]()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ChassisTask.o(.text._ZNSt3__223__libcpp_numeric_limitsIiLb1EE3maxB7v180000Ev))
<BR><BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v180000]()
</UL>

<P><STRONG><a name="[44e]"></a>std::__2::__is_overaligned_for_new[abi:v180000](unsigned int)</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__224__is_overaligned_for_newB7v180000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__is_overaligned_for_new[abi:v180000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[45f]"></a>void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int&rang;(void*, unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__224__libcpp_operator_deleteB7v180000IJPvjEEEvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int&rang;(void*, unsigned int) &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;&rang;(void*, unsigned int)
</UL>

<P><STRONG><a name="[460]"></a>void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__224__libcpp_operator_deleteB7v180000IJPvjSt11align_val_tEEEvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[345]"></a>std::__2::__list_node_pointer_traits&lang;IObserver*, void*&rang;::__unsafe_link_pointer_cast[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, EvenTask.o(.text._ZNSt3__226__list_node_pointer_traitsIP9IObserverPvE26__unsafe_link_pointer_castB7v180000EPNS_16__list_node_baseIS2_S3_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__list_node_pointer_traits&lang;IObserver*, void*&rang;::__unsafe_link_pointer_cast[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[455]"></a>void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;&rang;(void*, unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__227__do_deallocate_handle_sizeB7v180000IJEEEvPvjDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;&rang;(void*, unsigned int) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int&rang;(void*, unsigned int) &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int&rang;(void*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[454]"></a>void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__227__do_deallocate_handle_sizeB7v180000IJSt11align_val_tEEEvPvjDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[46a]"></a>std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__complete[abi:v180000]()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__228__exception_guard_exceptionsINS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEE10__completeB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__complete[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[45e]"></a>std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__exception_guard_exceptions__sub_object[abi:v180000](std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__228__exception_guard_exceptionsINS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEEC2B7v180000ESC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__exception_guard_exceptions__sub_object[abi:v180000](std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang; std::__2::__make_exception_guard[abi:v180000]&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>

<P><STRONG><a name="[462]"></a>std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__228__exception_guard_exceptionsINS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]() &rArr; std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const &rArr; void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[467]"></a>std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::_AllocatorDestroyRangeReverse__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__229_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorIPS6_EEEC2B7v180000ERS7_RSA_SD_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::_AllocatorDestroyRangeReverse__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[36b]"></a>unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__23maxB7v180000IjEERKT_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;) &rArr; bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const
</UL>

<P><STRONG><a name="[463]"></a>unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__23maxB7v180000IjNS_6__lessIvvEEEERKT_S5_S5_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;) &rArr; bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
</UL>

<P><STRONG><a name="[376]"></a>unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__23minB7v180000IjEERKT_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;) &rArr; bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[465]"></a>unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__23minB7v180000IjNS_6__lessIvvEEEERKT_S5_S5_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int, std::__2::__less&lang;void, void&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;void, void&rang;) &rArr; bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::__less&lang;void, void&rang;::operator()[abi:v180000]&lang;unsigned int, unsigned int&rang;(unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v180000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
</UL>

<P><STRONG><a name="[466]"></a>std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)</STRONG> (Thumb, 188 bytes, Stack size 112 bytes, ChassisTask.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB7v180000INS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorIPS6_EESA_SA_EET2_RT_T0_T1_SB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;) &rArr; std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]() &rArr; std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const &rArr; void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::__complete[abi:v180000]()
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]()
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator++[abi:v180000]()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::operator*[abi:v180000]() const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKS9_EEEEESB_
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang; std::__2::__make_exception_guard[abi:v180000]&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::_AllocatorDestroyRangeReverse__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
</UL>

<P><STRONG><a name="[474]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE12__link_nodesEPNS_16__list_node_baseIS2_PvEES9_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
</UL>

<P><STRONG><a name="[46b]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&)</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE15__allocate_nodeB7v180000ERNS3_INS_11__list_nodeIS2_PvEEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__dependent_type&lang;std::__2::__unique_ptr_deleter_sfinae&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;, true&rang;::__good_rval_ref_type)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__allocator_destructor__sub_object[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[46d]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes_at_back(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE20__link_nodes_at_backEPNS_16__list_node_baseIS2_PvEES9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes_at_back(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*) &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
</UL>

<P><STRONG><a name="[2d7]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE3endB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__end_as_link[abi:v180000]() const &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>

<P><STRONG><a name="[2d6]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE5beginB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]() &rArr; std::__2::__list_iterator&lang;IObserver*, void*&rang;::__list_iterator__sub_object[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>

<P><STRONG><a name="[2d5]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)</STRONG> (Thumb, 334 bytes, Stack size 128 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE6removeERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::size[abi:v180000]() const
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object()
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang; std::__2::next[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, 0&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator*[abi:v180000]() const
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::__list_const_iterator__sub_object[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000](std::__2::allocator&lang;IObserver*&rang; const&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::get_allocator() const
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::end[abi:v180000]()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::begin[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Detach(IObserver*)
</UL>

<P><STRONG><a name="[471]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE6spliceENS_21__list_const_iteratorIS2_PvEERS5_S8_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;) &rArr; std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;) &rArr; std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag) &rArr; std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&) &rArr; std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__unlink_nodes(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[2d4]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE9push_backERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240 + Unknown Stack Size
<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&) &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&) &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::release[abi:v180000]()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__sz[abi:v180000]()
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__link_nodes_at_back(std::__2::__list_node_base&lang;IObserver*, void*&rang;*, std::__2::__list_node_base&lang;IObserver*, void*&rang;*)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_node&lang;IObserver*, void*&rang;::__as_link[abi:v180000]()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::get[abi:v180000]() const
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**, IObserver* const&)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::operator-&rang;[abi:v180000]() const
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__allocate_node[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__node_alloc[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Attach(IObserver*)
</UL>

<P><STRONG><a name="[46e]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000](std::__2::allocator&lang;IObserver*&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEEC2B7v180000ERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000](std::__2::allocator&lang;IObserver*&rang; const&) &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&) &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__list_node_base__sub_object[abi:v180000]() &rArr; std::__2::__list_node_base&lang;IObserver*, void*&rang;::__self[abi:v180000]() &rArr; std::__2::pointer_traits&lang;std::__2::__list_node_base&lang;IObserver*, void*&rang;*&rang;::pointer_to[abi:v180000](std::__2::__list_node_base&lang;IObserver*, void*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[32d]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISubject::ISubject__sub_object()
</UL>

<P><STRONG><a name="[32e]"></a>std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~list__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::~__list_imp__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISubject::~ISubject__sub_object()
</UL>

<P><STRONG><a name="[470]"></a>std::__2::__list_const_iterator&lang;IObserver*, void*&rang; std::__2::next[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, 0&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__24nextB7v180000INS_21__list_const_iteratorIP9IObserverPvEELi0EEET_S6_NS_15iterator_traitsIS6_E15difference_typeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__list_const_iterator&lang;IObserver*, void*&rang; std::__2::next[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, 0&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type) &rArr; void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int) &rArr; void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag) &rArr; std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[487]"></a>std::__2::enable_if&lang;is_move_constructible&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value && is_move_assignable&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value, void&rang;::type std::__2::swap[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ChassisTask.o(.text._ZNSt3__24swapB7v180000IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value && is_move_assignable&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value, void&rang;::type std::__2::swap[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
</UL>

<P><STRONG><a name="[280]"></a>std::__2::__math::fabs[abi:v180000](float)</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, Tools.o(.text._ZNSt3__26__math4fabsB7v180000Ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__math::fabs[abi:v180000](float)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::_floatEqual(float, float)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
</UL>

<P><STRONG><a name="[287]"></a>std::__2::__math::fmax[abi:v180000](float, float)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, PowerTask.o(.text._ZNSt3__26__math4fmaxB7v180000Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__math::fmax[abi:v180000](float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
</UL>

<P><STRONG><a name="[476]"></a>double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double)</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, PowerTask.o(.text._ZNSt3__26__math4fminB7v180000IiEEddd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int)
</UL>

<P><STRONG><a name="[329]"></a>std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, PowerTask.o(.text._ZNSt3__26__math4fminB7v180000IiiLi0EEENS_9__promoteIT_T0_vE4typeES3_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::eye()
</UL>

<P><STRONG><a name="[32b]"></a>std::__2::__math::fmod[abi:v180000](float, float)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, Tools.o(.text._ZNSt3__26__math4fmodB7v180000Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::__math::fmod[abi:v180000](float, float) &rArr; __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::Zero_crossing_processing(float, float, float)
</UL>

<P><STRONG><a name="[29a]"></a>std::__2::__math::sqrt[abi:v180000](float)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, Wheel.o(.text._ZNSt3__26__math4sqrtB7v180000Ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__2::__math::sqrt[abi:v180000](float) &rArr; __hardfp_sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
</UL>

<P><STRONG><a name="[29b]"></a>std::__2::__math::atan2[abi:v180000](float, float)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, Wheel.o(.text._ZNSt3__26__math5atan2B7v180000Eff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__2::__math::atan2[abi:v180000](float, float) &rArr; __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
</UL>

<P><STRONG><a name="[478]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE11__make_iterB7v180000EPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::end[abi:v180000]()
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::begin[abi:v180000]()
</UL>

<P><STRONG><a name="[21a]"></a>std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE12emplace_backIJNS1_I12Chassis_TaskNS3_ISA_EEEEEEERS5_DpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::back[abi:v180000]()
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
</UL>

<P><STRONG><a name="[488]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::__destroy_vector__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE16__destroy_vectorC2B7v180000ERS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::__destroy_vector__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[47e]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE16__destroy_vectorclB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::capacity[abi:v180000]() const
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]()
</UL>

<P><STRONG><a name="[482]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21_ConstructTransactionC2B7v180000ERS8_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[483]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v180000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21_ConstructTransactionD2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[481]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__base_destruct_at_endB7v180000EPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]()
</UL>

<P><STRONG><a name="[47b]"></a>void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__construct_one_at_endB7v180000IJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v180000]()
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&, unsigned int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[47c]"></a>void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__recommend[abi:v180000](unsigned int) const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;* std::__2::__to_address[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[484]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)</STRONG> (Thumb, 180 bytes, Stack size 96 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;) &rArr; std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]() &rArr; std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::operator()[abi:v180000]() const &rArr; void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;) &rArr; _ZNSt3__212__to_addressB7v180000INS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvEEu7__decayIDTclsr19__to_address_helperIT_EE6__callclsr3stdE7declvalIRKSA_EEEEESC_ &rArr; std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_new[abi:v180000](unsigned int) const
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value && is_move_assignable&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::value, void&rang;::type std::__2::swap[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::reverse_iterator__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__end_cap[abi:v180000]()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]()
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__annotate_delete[abi:v180000]() const
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::size[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[21e]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::end[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE3endB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::end[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[47d]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::back[abi:v180000]()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE4backB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::back[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[21d]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::begin[abi:v180000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE5beginB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::begin[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::__wrap_iter__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__make_iter[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[480]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7__allocB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__alloc[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::second[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
</UL>

<P><STRONG><a name="[47f]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE7__clearB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
</UL>

<P><STRONG><a name="[47a]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE9__end_capB7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__end_cap[abi:v180000]() &rArr; std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, 0, false&rang;::__get[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::first[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;&)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;& std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::emplace_back&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[226]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]()</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__compressed_pair__sub_object[abi:v180000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::TaskManager__sub_object()
</UL>

<P><STRONG><a name="[227]"></a>std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]()</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEED2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__clear[abi:v180000]() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::operator()[abi:v180000]()
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__destroy_vector::__destroy_vector__sub_object[abi:v180000](std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;&)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::~TaskManager__sub_object()
</UL>

<P><STRONG><a name="[475]"></a>void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__27advanceB7v180000INS_21__list_const_iteratorIP9IObserverPvEEiivEEvRT_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int) &rArr; void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag) &rArr; std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag)
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__convert_to_integral[abi:v180000](int)
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang; std::__2::next[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, 0&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type)
</UL>

<P><STRONG><a name="[473]"></a>std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, EvenTask.o(.text._ZNSt3__28distanceB7v180000INS_21__list_const_iteratorIP9IObserverPvEEEENS_15iterator_traitsIT_E15difference_typeES7_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;) &rArr; std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag) &rArr; std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&) &rArr; std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag)
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
</UL>

<P><STRONG><a name="[48a]"></a>void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__29__advanceB7v180000INS_21__list_const_iteratorIP9IObserverPvEEEEvRT_NS_15iterator_traitsIS6_E15difference_typeENS_26bidirectional_iterator_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = void std::__2::__advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type, std::__2::bidirectional_iterator_tag) &rArr; std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator--[abi:v180000]()
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;::operator++[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::advance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, int, int, void&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&, int)
</UL>

<P><STRONG><a name="[402]"></a>std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE10deallocateB7v180000EPS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
</UL>

<P><STRONG><a name="[403]"></a>std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE7destroyB7v180000EPS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::destroy[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]() &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::reset[abi:v180000](Task*) &rArr; std::__2::default_delete&lang;Task&rang;::operator()[abi:v180000](Task*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::~unique_ptr__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::destroy[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
</UL>

<P><STRONG><a name="[451]"></a>std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE8allocateB7v180000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v180000]()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[406]"></a>void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE9constructB7v180000IS5_JNS1_I12Chassis_TaskNS3_IS8_EEEEEEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[408]"></a>void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE9constructB7v180000IS5_JS5_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = void std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&) &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::construct[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
</UL>

<P><STRONG><a name="[45b]"></a>std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[409]"></a>std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE10deallocateB7v180000EPS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v180000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v180000](void*, unsigned int, unsigned int)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
</UL>

<P><STRONG><a name="[40b]"></a>std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE8allocateB7v180000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::max_size[abi:v180000]&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v180000](unsigned int, unsigned int)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::allocate[abi:v180000](std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[40f]"></a>void std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&&rang;(IObserver**, IObserver* const&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, EvenTask.o(.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE9constructB7v180000IS3_JRKS3_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&&rang;(IObserver**, IObserver* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::construct[abi:v180000]&lang;IObserver*, IObserver* const&, void&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&, IObserver**, IObserver* const&)
</UL>

<P><STRONG><a name="[45c]"></a>std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEEC2B7v180000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v180000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[38e]"></a>std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]&lang;IObserver*&rang;(std::__2::allocator&lang;IObserver*&rang; const&)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEEC2B7v180000IS3_EERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocator__sub_object[abi:v180000]&lang;IObserver*&rang;(std::__2::allocator&lang;IObserver*&rang; const&) &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object(std::__2::allocator&lang;IObserver*&rang; const&)
</UL>

<P><STRONG><a name="[365]"></a>std::__2::allocator&lang;IObserver*&rang;::allocator__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, EvenTask.o(.text._ZNSt3__29allocatorIP9IObserverEC2B7v180000INS_11__list_nodeIS2_PvEEEERKNS0_IT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::allocator&lang;IObserver*&rang;::allocator__sub_object[abi:v180000]&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;(std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang; const&) &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;IObserver*&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;IObserver*&rang;&rang;::__non_trivial_if__sub_object[abi:v180000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::get_allocator() const
</UL>

<P><STRONG><a name="[491]"></a>std::__2::operator==[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__2eqB7v180000ERKNS_15__list_iteratorIP9IObserverPvEES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::operator==[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
</UL>

<P><STRONG><a name="[492]"></a>std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, EvenTask.o(.text._ZNSt3__2eqB7v180000ERKNS_21__list_const_iteratorIP9IObserverPvEES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>

<P><STRONG><a name="[48f]"></a>bool std::__2::operator==[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__2eqB7v180000IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEbRKNS_11__wrap_iterIT_EESB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bool std::__2::operator==[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>

<P><STRONG><a name="[2d8]"></a>std::__2::operator!=[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__2neB7v180000ERKNS_15__list_iteratorIP9IObserverPvEES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::operator!=[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&) &rArr; std::__2::operator==[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator==[abi:v180000](std::__2::__list_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Notify()
</UL>

<P><STRONG><a name="[37f]"></a>std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, EvenTask.o(.text._ZNSt3__2neB7v180000ERKNS_21__list_const_iteratorIP9IObserverPvEES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::operator!=[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&) &rArr; std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::operator==[abi:v180000](std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::iterator_traits&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;::difference_type std::__2::__distance[abi:v180000]&lang;std::__2::__list_const_iterator&lang;IObserver*, void*&rang;&rang;(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::input_iterator_tag)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::splice(std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;&, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;, std::__2::__list_const_iterator&lang;IObserver*, void*&rang;)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
</UL>

<P><STRONG><a name="[452]"></a>bool std::__2::operator!=[abi:v180000]&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, ChassisTask.o(.text._ZNSt3__2neB7v180000INS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEES8_EEbRKNS1_IT_EERKNS1_IT0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bool std::__2::operator!=[abi:v180000]&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&) &rArr; bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;::base[abi:v180000]() const
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__allocator_destroy[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;)
</UL>

<P><STRONG><a name="[21f]"></a>bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZNSt3__2neB7v180000IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEEEbRKNS_11__wrap_iterIT_EESB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; bool std::__2::operator==[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::__wrap_iter&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::updateAll()
</UL>

<P><STRONG><a name="[468]"></a>bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ChassisTask.o(.text._ZNSt3__2neB7v180000IPNS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEES6_EEbRKNS_16reverse_iteratorIT_EERKNS7_IT0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bool std::__2::operator!=[abi:v180000]&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;(std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&) &rArr; std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;::base[abi:v180000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v180000]&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&, std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
</UL>

<P><STRONG><a name="[49d]"></a>std::bad_alloc::bad_alloc()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9bad_allocC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[56d]"></a>std::bad_alloc::bad_alloc__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9bad_allocC2Ev), UNUSED)

<P><STRONG><a name="[de]"></a>std::bad_alloc::~bad_alloc__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9bad_allocD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::bad_alloc::~bad_alloc__deallocating() &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
</UL>
<P><STRONG><a name="[6f]"></a>std::bad_exception::~bad_exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> cxa_personality.cpp.o(.text.__cxa_call_unexpected)
</UL>
<P><STRONG><a name="[56e]"></a>std::bad_exception::~bad_exception__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[6d]"></a>std::bad_array_new_length::~bad_array_new_length()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.text._ZSt28__throw_bad_array_new_lengthB7v180000v)
</UL>
<P><STRONG><a name="[56f]"></a>std::bad_array_new_length::~bad_array_new_length__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[6e]"></a>std::bad_alloc::~bad_alloc()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> new.cpp.o(.text._Znwj)
<LI> new.cpp.o(.text._ZnwjSt11align_val_t)
</UL>
<P><STRONG><a name="[570]"></a>std::bad_alloc::~bad_alloc__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[571]"></a>std::exception::~exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[d9]"></a>std::exception::~exception__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt9bad_alloc)
<LI> stdlib_exception.cpp.o(.rodata._ZTVSt20bad_array_new_length)
<LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[572]"></a>std::type_info::~type_info()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_typeinfo.cpp.o(.text._ZNSt9type_infoD2Ev), UNUSED)

<P><STRONG><a name="[205]"></a>std::type_info::~type_info__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_typeinfo.cpp.o(.text._ZNSt9type_infoD2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__enum_type_info::~__enum_type_info()
</UL>

<P><STRONG><a name="[211]"></a>std::__terminate(void (*)())</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::__terminate(void (*)()) &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[495]"></a>std::__unexpected(void (*)())</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[498]"></a>std::get_terminate()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt13get_terminatev))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[4a0]"></a>std::get_unexpected()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[49c]"></a>std::get_new_handler()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[48b]"></a>std::__throw_bad_array_new_length[abi:v180000]()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ChassisTask.o(.text._ZSt28__throw_bad_array_new_lengthB7v180000v))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = std::__throw_bad_array_new_length[abi:v180000]() &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_array_new_length::bad_array_new_length()
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::allocate[abi:v180000](unsigned int)
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::allocate[abi:v180000](unsigned int)
</UL>

<P><STRONG><a name="[ea]"></a>std::terminate()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt9terminatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_terminate()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__cxa_end_cleanup_impl()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler)
</UL>
<P><STRONG><a name="[37b]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>

<P><STRONG><a name="[49a]"></a>operator delete(void*, std::align_val_t)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[206]"></a>operator delete(void*, unsigned int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::~Buzzer__deallocating()
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_hal::~My_hal__deallocating()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::~HAL__deallocating()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::~LED__deallocating()
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::StopHandler::~StopHandler__deallocating()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::~KeyBoardHandler__deallocating()
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::RotatingHandler::~RotatingHandler__deallocating()
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::~FollowHandler__deallocating()
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::UniversalHandler::~UniversalHandler__deallocating()
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int&rang;(void*, unsigned int)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::~Chassis_Task__deallocating()
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_array_new_length::~bad_array_new_length__deallocating()
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc__deallocating()
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::~__class_type_info__deallocating()
</UL>

<P><STRONG><a name="[461]"></a>operator delete(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvjSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v180000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[2f8]"></a>Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZmlILi1EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang;::Matrixf__sub_object()
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_mult_f32
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f5]"></a>Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZmlILi1EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_mult_f32
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2f7]"></a>Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZmlILi2EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::Matrixf__sub_object()
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_mult_f32
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[2ff]"></a>Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi1EERKS0_ILi1EXT_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_mult_f32
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[300]"></a>Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, PowerTask.o(.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&) &rArr; arm_mat_mult_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mat_mult_f32
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::~Matrixf__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[18e]"></a>operator new(unsigned int)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, new.cpp.o(.text._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_new_handler()
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int&rang;(unsigned int)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(char const*)
</UL>

<P><STRONG><a name="[459]"></a>operator new(unsigned int, std::align_val_t)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, new.cpp.o(.text._ZnwjSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = operator new(unsigned int, std::align_val_t) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_new_handler()
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v180000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_unwind_cpp_pr0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr0))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __aeabi_unwind_cpp_pr0 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[6b]"></a>__aeabi_unwind_cpp_pr1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __aeabi_unwind_cpp_pr1 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[6a]"></a>__aeabi_unwind_cpp_pr2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr2))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __aeabi_unwind_cpp_pr2 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[377]"></a>__clang_call_terminate</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__clang_call_terminate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::clear()
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;::deallocate[abi:v180000](std::__2::__list_node&lang;IObserver*, void*&rang;*, unsigned int)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;std::__2::__list_node&lang;IObserver*, void*&rang;, std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(std::__2::__list_node&lang;IObserver*, void*&rang;*, std::__2::__dependent_type&lang;std::__2::__unique_ptr_deleter_sfinae&lang;std::__2::__allocator_destructor&lang;std::__2::allocator&lang;std::__2::__list_node&lang;IObserver*, void*&rang;&rang;&rang;&rang;, true&rang;::__good_rval_ref_type)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object()
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Buzzer, std::__2::default_delete&lang;Buzzer&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Buzzer*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;LED, std::__2::default_delete&lang;LED&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(LED*)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::__destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang; const&)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__to_address_helper&lang;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, void&rang;::__call[abi:v180000](std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; const&)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__exception_guard_exceptions&lang;std::__2::_AllocatorDestroyRangeReverse&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;&rang;::~__exception_guard_exceptions__sub_object[abi:v180000]()
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::max_size() const
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;, void, void&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task*)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;::deallocate[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*, unsigned int)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__base_destruct_at_end[abi:v180000](std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::StopHandler, std::__2::default_delete&lang;Chassis_Task::StopHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::StopHandler*)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::KeyBoardHandler, std::__2::default_delete&lang;Chassis_Task::KeyBoardHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::KeyBoardHandler*)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::RotatingHandler, std::__2::default_delete&lang;Chassis_Task::RotatingHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::RotatingHandler*)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::FollowHandler, std::__2::default_delete&lang;Chassis_Task::FollowHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::FollowHandler*)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;Chassis_Task::UniversalHandler, std::__2::default_delete&lang;Chassis_Task::UniversalHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;(Chassis_Task::UniversalHandler*)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::unique_ptr&lang;StateHandler, std::__2::default_delete&lang;StateHandler&rang;&rang;::unique_ptr__sub_object[abi:v180000]&lang;true, void&rang;()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::~vector__sub_object[abi:v180000]()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
</UL>

<P><STRONG><a name="[456]"></a>__cxa_allocate_exception</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_allocate_exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __cxa_allocate_exception &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v180000]()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[210]"></a>__cxa_begin_catch</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_begin_catch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = __cxa_begin_catch &rArr;  std::terminate() (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
</UL>

<P><STRONG><a name="[49e]"></a>__cxa_begin_cleanup</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_begin_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __cxa_begin_cleanup &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[49f]"></a>__cxa_call_unexpected</STRONG> (Thumb, 388 bytes, Stack size 64 bytes, cxa_personality.cpp.o(.text.__cxa_call_unexpected), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char, unsigned int)
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__unexpected(void (*)())
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_terminate()
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_unexpected()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>

<P><STRONG><a name="[215]"></a>__cxa_decrement_exception_refcount</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_decrement_exception_refcount))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __cxa_decrement_exception_refcount &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[4a1]"></a>__cxa_end_catch</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_end_catch), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_DeleteException
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[21c]"></a>__cxa_end_cleanup</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cxa_exception.cpp.o(.text.__cxa_end_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __cxa_end_cleanup &rArr; __cxa_end_cleanup_impl
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator*(float const&) const
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::reset()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::RLS__sub_object(float, float)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator/(float const&) const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator*(float const&) const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator/(float const&) const
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::trans() const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpRLS(PID*, Dji_Motor&, float, float)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object()
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::PowerTask_t__sub_object()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::remove(IObserver* const&)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::push_back(IObserver* const&)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v180000]&lang;std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;&rang;(std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;, std::__2::reverse_iterator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;*&rang;)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Chassis_Task()
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__emplace_back_slow_path&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::__construct_one_at_end[abi:v180000]&lang;std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&rang;(std::__2::unique_ptr&lang;Chassis_Task, std::__2::default_delete&lang;Chassis_Task&rang;&rang;&&)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::StopHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::StopHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::KeyBoardHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::KeyBoardHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::RotatingHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::RotatingHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::FollowHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::FollowHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task::UniversalHandler&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task::UniversalHandler, Chassis_Task&&rang;(Chassis_Task&)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Chassis_Task&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Chassis_Task&rang;()
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool TaskManager::addTask&lang;Chassis_Task&rang;()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(char const*)
</UL>

<P><STRONG><a name="[458]"></a>__cxa_free_exception</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_free_exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __cxa_free_exception &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
</UL>

<P><STRONG><a name="[214]"></a>__cxa_get_globals</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__cxa_end_cleanup_impl()
</UL>

<P><STRONG><a name="[497]"></a>__cxa_get_globals_fast</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals_fast))
<BR><BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[7b]"></a>__cxa_pure_virtual</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 6]<UL><LI> Dji_Motor.o(.rodata._ZTV8RM_Motor)
<LI> Variable.o(.rodata._ZTV11Wheel_Basic)
<LI> EvenTask.o(.rodata._ZTV8ISubject)
<LI> EvenTask.o(.rodata._ZTV9IObserver)
<LI> ChassisTask.o(.rodata._ZTV4Task)
<LI> ChassisTask.o(.rodata._ZTV12StateHandler)
</UL>
<P><STRONG><a name="[4a2]"></a>__cxa_rethrow</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_rethrow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[457]"></a>__cxa_throw</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, cxa_exception.cpp.o(.text.__cxa_throw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024 + Unknown Stack Size
<LI>Call Chain = __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_terminate()
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_unexpected()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v180000]()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v180000](char const*)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[33d]"></a>__dynamic_cast</STRONG> (Thumb, 274 bytes, Stack size 152 bytes, private_typeinfo.cpp.o(.text.__dynamic_cast))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __dynamic_cast &rArr; is_equal(std::type_info const*, std::type_info const*, bool) &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_equal(std::type_info const*, std::type_info const*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
</UL>

<P><STRONG><a name="[4ab]"></a>__gnu_unwind_frame</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, Unwind-EHABI.cpp.o(.text.__gnu_unwind_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __gnu_unwind_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_step
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[7a]"></a>__gxx_personality_v0</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, cxa_personality.cpp.o(.text.__gxx_personality_v0))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = __gxx_personality_v0 &rArr; __cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int) &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gnu_unwind_frame
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Address Reference Count : 71]<UL><LI> darw_dynamic.o(.ARM.extab.text.__cxx_global_var_init)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I3LEDJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I6BuzzerJP3DirEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEEC2Ev)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE9push_backERKS2_)
<LI> ChassisTask.o(.ARM.extab.text._ZN12Chassis_TaskC2Ev)
<LI> ChassisTask.o(.ARM.extab.text._ZN11TaskManager7addTaskI12Chassis_TaskJEEEbDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI12StateHandlerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEv)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task16UniversalHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> PowerTask.o(.ARM.extab.text._ZN14SGPowerControl11PowerTask_tC2Ev)
<LI> PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EE6updateER7MatrixfILi2ELi1EEf)
<LI> PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi1EEC2ERKS0_)
<LI> PowerTask.o(.ARM.extab.text._ZN14SGPowerControl13PowerUpData_tC2Ev)
<LI> PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EEC2Eff)
<LI> PowerTask.o(.ARM.extab.text._ZN4Math3RLSILj2EE5resetEv)
<LI> PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi1EEC2EPf)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEmlERKf)
<LI> PowerTask.o(.ARM.extab.text._ZN7MatrixfILi2ELi2EEC2EPf)
<LI> PowerTask.o(.ARM.extab.text._ZmlILi1EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EEdvERKf)
<LI> PowerTask.o(.ARM.extab.text._ZmlILi1EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE)
<LI> PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi1EXT_EERKS0_ILi1ELi2EERKS0_ILi2EXT_EE)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EE5transEv)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi1EEmlERKf)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEmiERKS0_)
<LI> PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi2EERKS1_)
<LI> PowerTask.o(.ARM.extab.text._ZmlILi2EE7MatrixfILi2EXT_EERKS0_ILi2ELi1EERKS0_ILi1EXT_EE)
<LI> PowerTask.o(.ARM.extab.text._ZNK7MatrixfILi2ELi2EEdvERKf)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrINS_11__list_nodeIP9IObserverPvEENS_22__allocator_destructorINS_9allocatorIS5_EEEEEC2B7v180000ILb1EvEEPS5_NS_16__dependent_typeINS_27__unique_ptr_deleter_sfinaeIS9_EEXT_EE20__good_rval_ref_typeE)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__29allocatorINS_11__list_nodeIP9IObserverPvEEE10deallocateB7v180000EPS5_j)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__24listIP9IObserverNS_9allocatorIS2_EEE6removeERKS2_)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__210__list_impIP9IObserverNS_9allocatorIS2_EEE5clearEv)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI3LEDNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
<LI> EvenTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI6BuzzerNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
<LI> PowerTask.o(.ARM.extab.text._ZN14SGPowerControl13PowerUpData_t5UpRLSEP3PIDR9Dji_Motorff)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task13FollowHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15RotatingHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task15KeyBoardHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000IN12Chassis_Task11StopHandlerEJRS1_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEEC2B7v180000Ev)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEED2B7v180000Ev)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__base_destruct_at_endB7v180000EPS5_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__29allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEEE10deallocateB7v180000EPS5_j)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__211make_uniqueB7v180000I12Chassis_TaskJEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE22__construct_one_at_endB7v180000IJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJNS1_I12Chassis_TaskNS3_ISA_EEEEEEEvDpOT_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000I12Chassis_TaskNS2_IS6_EEvvEEONS0_IT_T0_EE)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEED2Ev)
<LI> ChassisTask.o(.ARM.extab.text._ZNKSt3__26vectorINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE8max_sizeEv)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__220__throw_length_errorB7v180000EPKc)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB7v180000INS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEENS_16reverse_iteratorIPS6_EESA_SA_EET2_RT_T0_T1_SB_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__228__exception_guard_exceptionsINS_29_AllocatorDestroyRangeReverseINS_9allocatorINS_10unique_ptrI4TaskNS_14default_deleteIS4_EEEEEENS_16reverse_iteratorIPS7_EEEEED2B7v180000Ev)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI4TaskNS_14default_deleteIS1_EEEC2B7v180000EOS4_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorIPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEvE6__callB7v180000ERKS8_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__219__to_address_helperINS_16reverse_iteratorINS1_IPNS_10unique_ptrI4TaskNS_14default_deleteIS3_EEEEEEEEvE6__callB7v180000ERKS9_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__214__split_bufferINS_10unique_ptrI4TaskNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE17__destruct_at_endB7v180000EPS5_NS_17integral_constantIbLb0EEE)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrI12Chassis_TaskNS_14default_deleteIS1_EEEC2B7v180000ILb1EvEEPS1_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task16UniversalHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task13FollowHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task15RotatingHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task15KeyBoardHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
<LI> ChassisTask.o(.ARM.extab.text._ZNSt3__210unique_ptrIN12Chassis_Task11StopHandlerENS_14default_deleteIS2_EEEC2B7v180000ILb1EvEEPS2_)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_allocate_exception)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_catch)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_free_exception)
<LI> cxa_handlers.cpp.o(.ARM.extab.text._ZSt9terminatev)
<LI> cxa_handlers.cpp.o(.ARM.extab.text._ZSt11__terminatePFvvE)
<LI> stdexcept.cpp.o(.ARM.extab.text._ZNSt11logic_errorC2EPKc)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_cleanup)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_decrement_exception_refcount)
<LI> cxa_personality.cpp.o(.ARM.extab.text.__cxa_call_unexpected)
</UL>
<P><STRONG><a name="[1e0]"></a>__unw_get_fpreg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_fpreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __unw_get_fpreg
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[573]"></a>unw_get_fpreg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_fpreg), UNUSED)

<P><STRONG><a name="[1d8]"></a>__unw_get_proc_info</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_get_proc_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetRegionStart
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetLanguageSpecificData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[574]"></a>unw_get_proc_info</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_get_proc_info), UNUSED)

<P><STRONG><a name="[1de]"></a>__unw_get_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[575]"></a>unw_get_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_reg), UNUSED)

<P><STRONG><a name="[1db]"></a>__unw_init_local</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_init_local))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[576]"></a>unw_init_local</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_init_local), UNUSED)

<P><STRONG><a name="[1ed]"></a>__unw_resume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __unw_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>

<P><STRONG><a name="[577]"></a>unw_resume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_resume), UNUSED)

<P><STRONG><a name="[1df]"></a>__unw_save_vfp_as_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_save_vfp_as_X))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[578]"></a>unw_save_vfp_as_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_save_vfp_as_X), UNUSED)

<P><STRONG><a name="[1e5]"></a>__unw_set_fpreg</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, libunwind.cpp.o(.text.__unw_set_fpreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __unw_set_fpreg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>

<P><STRONG><a name="[579]"></a>unw_set_fpreg</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, libunwind.cpp.o(.text.__unw_set_fpreg), UNUSED)

<P><STRONG><a name="[1e2]"></a>__unw_set_reg</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, libunwind.cpp.o(.text.__unw_set_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __unw_set_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>

<P><STRONG><a name="[57a]"></a>unw_set_reg</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, libunwind.cpp.o(.text.__unw_set_reg), UNUSED)

<P><STRONG><a name="[276]"></a>__unw_step</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_step))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gnu_unwind_frame
</UL>

<P><STRONG><a name="[57b]"></a>unw_step</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_step), UNUSED)

<P><STRONG><a name="[494]"></a>abort_message</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__unexpected(void (*)())
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[2e1]"></a>arm_cos_f32</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, arm_cos_f32.o(.text.arm_cos_f32))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::_cosf(float)
</UL>

<P><STRONG><a name="[328]"></a>arm_mat_add_f32</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, arm_mat_add_f32.o(.text.arm_mat_add_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = arm_mat_add_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator+=(Matrixf&lang;2, 1&rang;)
</UL>

<P><STRONG><a name="[325]"></a>arm_mat_init_f32</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arm_mat_init_f32.o(.text.arm_mat_init_f32))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang;::Matrixf__sub_object()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang;::Matrixf__sub_object()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object(float*)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(float*)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::Matrixf__sub_object()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::Matrixf__sub_object(Matrixf&lang;2, 1&rang; const&)
</UL>

<P><STRONG><a name="[49b]"></a>arm_mat_mult_f32</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, arm_mat_mult_f32.o(.text.arm_mat_mult_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = arm_mat_mult_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang; operator*&lang;2&rang;(Matrixf&lang;2, 1&rang; const&, Matrixf&lang;1, 2&rang; const&)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 1&rang; operator*&lang;1&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;1, 2&rang; operator*&lang;2&rang;(Matrixf&lang;1, 2&rang; const&, Matrixf&lang;2, 2&rang; const&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang; operator*&lang;1&rang;(Matrixf&lang;2, 2&rang; const&, Matrixf&lang;2, 1&rang; const&)
</UL>

<P><STRONG><a name="[33f]"></a>arm_mat_scale_f32</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, arm_mat_scale_f32.o(.text.arm_mat_scale_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = arm_mat_scale_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator*(float const&) const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator/(float const&) const
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator*(float const&) const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::operator/(float const&) const
</UL>

<P><STRONG><a name="[340]"></a>arm_mat_sub_f32</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, arm_mat_sub_f32.o(.text.arm_mat_sub_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = arm_mat_sub_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::operator-(Matrixf&lang;2, 2&rang; const&) const
</UL>

<P><STRONG><a name="[33e]"></a>arm_mat_trans_f32</STRONG> (Thumb, 162 bytes, Stack size 36 bytes, arm_mat_trans_f32.o(.text.arm_mat_trans_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = arm_mat_trans_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 1&rang;::trans() const
</UL>

<P><STRONG><a name="[2e2]"></a>arm_sin_f32</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, arm_sin_f32.o(.text.arm_sin_f32))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::_sinf(float)
</UL>

<P><STRONG><a name="[334]"></a>decode_eht_entry</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.decode_eht_entry))
<BR><BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>

<P><STRONG><a name="[fe]"></a>main</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = main &rArr; Init &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM4_Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM7_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART6_UART_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN2_Init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[126]"></a>osDelay</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, cmsis_os2.o(.text.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventTask
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RLSTask
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefeeTask
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationTask
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChassisTask
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_B_()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_B_()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_B_()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::B_()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::SYSTEM_START()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer::Update()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED::Normal_State()
</UL>

<P><STRONG><a name="[4ad]"></a>osKernelInitialize</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, cmsis_os2.o(.text.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4ae]"></a>osKernelStart</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(.text.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[195]"></a>osThreadNew</STRONG> (Thumb, 346 bytes, Stack size 72 bytes, cmsis_os2.o(.text.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[4db]"></a>pvPortMalloc</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4c9]"></a>pxPortInitialiseStack</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, port.o(.text.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4a4]"></a>__cxa_guard_acquire</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[4a5]"></a>__cxa_guard_release</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_release))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[4b4]"></a>uxListRemove</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, list.o(.text.uxListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4e0]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, cmsis_os2.o(.text.vApplicationGetIdleTaskMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetIdleTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4ed]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, cmsis_os2.o(.text.vApplicationGetTimerTaskMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetTimerTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[4bc]"></a>vListInitialise</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, list.o(.text.vListInitialise))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[4c8]"></a>vListInitialiseItem</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, list.o(.text.vListInitialiseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4b6]"></a>vListInsert</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[4b5]"></a>vListInsertEnd</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, list.o(.text.vListInsertEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4b8]"></a>vPortEnterCritical</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, port.o(.text.vPortEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4ba]"></a>vPortExitCritical</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(.text.vPortExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4c4]"></a>vPortFree</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4e3]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4eb]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, port.o(.text.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[4be]"></a>vQueueAddToRegistry</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, queue.o(.text.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[4d5]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, queue.o(.text.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4af]"></a>vTaskDelay</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, tasks.o(.text.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[4e8]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, tasks.o(.text.vTaskInternalSetTimeOutState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vTaskInternalSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4da]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4df]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, tasks.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4de]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, tasks.o(.text.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[4b0]"></a>vTaskStartScheduler</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[4d3]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[19d]"></a>vTaskSwitchContext</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4e2]"></a>xPortStartScheduler</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvPortStartFirstTask
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnableVFP
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[1a7]"></a>xPortSysTickHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, port.o(.text.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4bd]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 270 bytes, Stack size 72 bytes, queue.o(.text.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[4c6]"></a>xQueueGenericReset</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, queue.o(.text.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[4e7]"></a>xQueueGenericSend</STRONG> (Thumb, 556 bytes, Stack size 80 bytes, queue.o(.text.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[4ea]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 332 bytes, Stack size 80 bytes, queue.o(.text.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[4d0]"></a>xQueueReceive</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, queue.o(.text.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4e9]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, tasks.o(.text.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4b2]"></a>xTaskCreate</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[4b1]"></a>xTaskCreateStatic</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, tasks.o(.text.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[1a6]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, tasks.o(.text.xTaskGetSchedulerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[303]"></a>xTaskGetTickCount</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, tasks.o(.text.xTaskGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math::RLS&lang;2u&rang;::update(Matrixf&lang;2, 1&rang;&, float)
</UL>

<P><STRONG><a name="[4e6]"></a>xTaskIncrementTick</STRONG> (Thumb, 452 bytes, Stack size 32 bytes, tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[4c3]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, tasks.o(.text.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[4d9]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, tasks.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4d4]"></a>xTaskResumeAll</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[4e1]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, timers.o(.text.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4ce]"></a>xTimerGenericCommand</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, timers.o(.text.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4ee]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[2e3]"></a>__hardfp_atan2f</STRONG> (Thumb, 594 bytes, Stack size 32 bytes, atan2f.o(i.__hardfp_atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_atan2f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::_atan2(float, float)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::atan2[abi:v180000](float, float)
</UL>

<P><STRONG><a name="[477]"></a>__hardfp_fmodf</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, fmodf.o(i.__hardfp_fmodf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_fmodf &rArr; _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frem
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::fmod[abi:v180000](float, float)
</UL>

<P><STRONG><a name="[281]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __hardfp_sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL::_sqrt(float, float)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__math::sqrt[abi:v180000](float)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
</UL>

<P><STRONG><a name="[4f0]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[4f2]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>

<P><STRONG><a name="[4ef]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[1f5]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::UpData(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::Round_Error(float, float, float)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetErr()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getTargetOffsetAngle()
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetCout()
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[4f3]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2af]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>

<P><STRONG><a name="[4f6]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4fb]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[29c]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
</UL>

<P><STRONG><a name="[4f9]"></a>_ddiv</STRONG> (Thumb, 556 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[57c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)

<P><STRONG><a name="[4fa]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dneq
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deq
</UL>

<P><STRONG><a name="[2b6]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
</UL>

<P><STRONG><a name="[4fc]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[2b0]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
</UL>

<P><STRONG><a name="[4fd]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1f7]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::eye()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getTargetOffsetAngle()
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::PM01SendFun()
</UL>

<P><STRONG><a name="[57d]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[259]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[57e]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[57f]"></a>__aeabi_cdcmpge</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)

<P><STRONG><a name="[4fe]"></a>_dcmpge</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
</UL>

<P><STRONG><a name="[580]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[4ff]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[581]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[1f4]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::UpData(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Static::darw_static::PitchLine()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::VisionArmor()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::setLimitPower()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getTargetOffsetAngle()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Tar_Updata()
</UL>

<P><STRONG><a name="[500]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4f5]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[4f8]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2e9]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::UpData(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
</UL>

<P><STRONG><a name="[501]"></a>_dsub</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1f3]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SG::UpDate(float, float, float, float)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::UpData(float)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::getEncoderAngleErr()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::darw_UI()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::Dynamic::darw_dynamic::curPower()
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::Round_Error(float, float, float)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::KeyBoardHandler::FllowTarget()
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::FollowHandler::FllowTarget()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerUpData_t::UpCalcMaxTorque(float*, Dji_Motor&, PID*, float, float)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::PID_Updata()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chassis_Task::Wheel_UpData()
</UL>

<P><STRONG><a name="[503]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[2ec]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
</UL>

<P><STRONG><a name="[505]"></a>_deq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[506]"></a>_dneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[2c3]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
</UL>

<P><STRONG><a name="[507]"></a>_dgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[2ea]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrixf&lang;2, 2&rang;::eye()
</UL>

<P><STRONG><a name="[508]"></a>_dgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[2eb]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::GetPidPos(Kpid_t, double, double, double)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tools_t::MinPosHelm(float, float, float*, float, float)
</UL>

<P><STRONG><a name="[509]"></a>_dleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[2c2]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::ISDir()
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double)
</UL>

<P><STRONG><a name="[50a]"></a>_dls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[504]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frem
</UL>

<P><STRONG><a name="[f3]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[582]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[583]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[4f1]"></a>_frem</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, frem_clz.o(x$fpl$frem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _frem &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmodf
</UL>

<P><STRONG><a name="[4f4]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[156]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[153]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[154]"></a>NVIC_EncodePriority</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[155]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[152]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[146]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA_CheckFifoParam
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[147]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[149]"></a>DMA_SetConfig</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(.text.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[16e]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[170]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 242 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[171]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[161]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[162]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(.text.TIM_ITRx_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ITRx_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[163]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[184]"></a>UART_SetConfig</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[17d]"></a>UART_EndRxTransfer</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.UART_EndRxTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[5e]"></a>UART_DMATransmitCplt</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(.text.UART_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_DMATransmitCplt &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
</UL>
<P><STRONG><a name="[5f]"></a>UART_DMATxHalfCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.UART_DMATxHalfCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMATxHalfCplt &rArr; HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
</UL>
<P><STRONG><a name="[60]"></a>UART_DMAError</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(.text.UART_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_DMAError &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit_DMA)
<LI> stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[1aa]"></a>UART_EndTxTransfer</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(.text.UART_EndTxTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[67]"></a>UART_DMAReceiveCplt</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(.text.UART_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = UART_DMAReceiveCplt &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[68]"></a>UART_DMARxHalfCplt</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.UART_DMARxHalfCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UART_DMARxHalfCplt &rArr; HAL_UARTEx_RxEventCallback &rArr; BSP::Remote::Dr16::Parse(__UART_HandleTypeDef*, int) &rArr; HAL_UARTEx_ReceiveToIdle_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxHalfCpltCallback
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(.text.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[17c]"></a>UART_Receive_IT</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(.text.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; Communicat::Gimbal_to_Chassis::Data_receive(__UART_HandleTypeDef*) &rArr; Communicat::Gimbal_to_Chassis::SlidingWindowRecovery() &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMAAbortOnError &rArr; HAL_UART_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[180]"></a>UART_Transmit_IT</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, stm32f4xx_hal_uart.o(.text.UART_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[181]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(.text.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1a4]"></a>SVC_Setup</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cmsis_os2.o(.text.SVC_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SVC_Setup &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[1a5]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, cmsis_os2.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Setup
</UL>

<P><STRONG><a name="[4dc]"></a>prvHeapInit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, heap_4.o(.text.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[4dd]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, heap_4.o(.text.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[77]"></a>prvTaskExitError</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[4e4]"></a>vPortEnableVFP</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, port.o(.text.vPortEnableVFP))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4e5]"></a>prvPortStartFirstTask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(.text.prvPortStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4c5]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, queue.o(.text.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>

<P><STRONG><a name="[4c2]"></a>prvCopyDataToQueue</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, queue.o(.text.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4cc]"></a>prvIsQueueFull</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, queue.o(.text.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueFull &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4d8]"></a>prvUnlockQueue</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, queue.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4cb]"></a>prvIsQueueEmpty</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, queue.o(.text.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueEmpty &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4c1]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, queue.o(.text.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4c7]"></a>prvInitialiseNewTask</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, tasks.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[4b7]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, tasks.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[4b9]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, tasks.o(.text.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[4c0]"></a>prvDeleteTCB</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, tasks.o(.text.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[4ec]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, tasks.o(.text.prvResetNextTaskUnblockTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[4b3]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[78]"></a>prvIdleTask</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[4bf]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, tasks.o(.text.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[4bb]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, timers.o(.text.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[79]"></a>prvTimerTask</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, timers.o(.text.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[4d7]"></a>prvGetNextExpireTime</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, timers.o(.text.prvGetNextExpireTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetNextExpireTime
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4d2]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, timers.o(.text.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4cf]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, timers.o(.text.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[4d1]"></a>prvSampleTimeNow</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timers.o(.text.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4cd]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, timers.o(.text.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4ca]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, timers.o(.text.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4d6]"></a>prvSwitchTimerLists</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, timers.o(.text.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[e0]"></a>__cxx_global_var_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, darw_dynamic.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Power::RM_PM01::RM_PM01__sub_object()
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> darw_dynamic.o(.init_array)
</UL>
<P><STRONG><a name="[e1]"></a>__cxx_global_var_init.1</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, darw_dynamic.o(.text.__cxx_global_var_init.1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.1 &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI::send_graphic_queue::send_graphic_queue__sub_object()
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> darw_dynamic.o(.init_array)
</UL>
<P><STRONG><a name="[e2]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, darw_dynamic.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.2 &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::SuperCap::LH_Cap::LH_Cap__sub_object()
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> darw_dynamic.o(.init_array)
</UL>
<P><STRONG><a name="[1b5]"></a>__cxx_global_var_init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __cxx_global_var_init &rArr; Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1b6]"></a>__cxx_global_var_init.1</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init.1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __cxx_global_var_init.1 &rArr; Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1b7]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __cxx_global_var_init.2 &rArr; Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dji_Motor::Dji_Motor(short, unsigned char, Dji_Motor_Data*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1b8]"></a>__cxx_global_var_init.3</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init.3))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __cxx_global_var_init.3 &rArr; PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*) &rArr; RM_Motor::_Motor_ID_IDX_BIND_(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerMeter::Meter::Meter(short, unsigned char, PowerMeter::Meter_Data*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1b9]"></a>__cxx_global_var_init.4</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.4))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.4 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1ba]"></a>__cxx_global_var_init.5</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init.5))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init.5 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1bb]"></a>__cxx_global_var_init.6</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.6))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.6 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1bc]"></a>__cxx_global_var_init.7</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, Variable.o(.text.__cxx_global_var_init.7))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init.7 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1bd]"></a>__cxx_global_var_init.8</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.8))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.8 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1be]"></a>__cxx_global_var_init.9</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.9))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxx_global_var_init.9 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1bf]"></a>__cxx_global_var_init.10</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.10))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.10 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c0]"></a>__cxx_global_var_init.11</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.11))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxx_global_var_init.11 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c1]"></a>__cxx_global_var_init.12</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.12))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.12 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c2]"></a>__cxx_global_var_init.13</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.13))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxx_global_var_init.13 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c3]"></a>__cxx_global_var_init.14</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.14))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.14 &rArr; Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kpid_t::Kpid_t__sub_object(double, double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c4]"></a>__cxx_global_var_init.15</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, Variable.o(.text.__cxx_global_var_init.15))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __cxx_global_var_init.15 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID::PID__sub_object(double, double)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c5]"></a>__cxx_global_var_init.16</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.16))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxx_global_var_init.16 &rArr; Wheel_t&lang;SG&rang;::Wheel_t__sub_object() &rArr; SG::SG__sub_object() &rArr; Wheel_Basic::Wheel_Basic__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wheel_t&lang;SG&rang;::Wheel_t__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c6]"></a>__cxx_global_var_init.17</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, Variable.o(.text.__cxx_global_var_init.17))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.17 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c7]"></a>__cxx_global_var_init.18</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.18))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxx_global_var_init.18 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c8]"></a>__cxx_global_var_init.19</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.19))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxx_global_var_init.19 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1c9]"></a>__cxx_global_var_init.20</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.20))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxx_global_var_init.20 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1ca]"></a>__cxx_global_var_init.21</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.21))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxx_global_var_init.21 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1cb]"></a>__cxx_global_var_init.22</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, Variable.o(.text.__cxx_global_var_init.22))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxx_global_var_init.22 &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TD::TD__sub_object(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1cc]"></a>__cxx_global_var_init.23</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, Variable.o(.text.__cxx_global_var_init.23))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __cxx_global_var_init.23 &rArr; FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1cd]"></a>__cxx_global_var_init.24</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.24))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxx_global_var_init.24 &rArr; FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1ce]"></a>__cxx_global_var_init.25</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.25))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxx_global_var_init.25 &rArr; FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1cf]"></a>__cxx_global_var_init.26</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.26))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxx_global_var_init.26 &rArr; FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1d0]"></a>__cxx_global_var_init.27</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.27))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxx_global_var_init.27 &rArr; FeedTar::FeedTar__sub_object(float, float) &rArr; FeedForward::FeedForward__sub_object(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedTar::FeedTar__sub_object(float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1d1]"></a>__cxx_global_var_init.28</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.28))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __cxx_global_var_init.28 &rArr; Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1d2]"></a>__cxx_global_var_init.29</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.29))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __cxx_global_var_init.29 &rArr; Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[1d3]"></a>__cxx_global_var_init.30</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, Variable.o(.text.__cxx_global_var_init.30))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __cxx_global_var_init.30 &rArr; Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Class_Slope::Class_Slope(float, float, Enum_Slope_First)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Variable.cpp
</UL>

<P><STRONG><a name="[e3]"></a>_GLOBAL__sub_I_Variable.cpp</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, Variable.o(.text._GLOBAL__sub_I_Variable.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _GLOBAL__sub_I_Variable.cpp &rArr; __cxx_global_var_init.15 &rArr; PID::PID__sub_object(double, double) &rArr; Pid_t::Pid_t__sub_object() &rArr; TD::TD__sub_object(float, float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.30
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.29
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.28
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.27
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.26
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.25
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.24
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.23
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.22
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.21
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.20
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.19
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.18
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.17
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.16
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.15
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.14
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.13
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.12
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.11
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.10
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.9
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.8
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.7
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.6
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.5
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Variable.o(.init_array)
</UL>
<P><STRONG><a name="[1b0]"></a>__cxx_global_var_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, Dbus.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxx_global_var_init &rArr; BSP::Remote::Dr16::Dr16__sub_object() &rArr; BSP::Remote::Dr16::Vector::zero()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::Dr16__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Dbus.cpp
</UL>

<P><STRONG><a name="[2bf]"></a>BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, Dbus.o(.text._ZZN3BSP6Remote4Dr1612UpdateStatusEvENK3$_0clEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP::Remote::Dr16::UpdateStatus()::$_0::operator()(unsigned short) const &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP::Remote::Dr16::UpdateStatus()
</UL>

<P><STRONG><a name="[e4]"></a>_GLOBAL__sub_I_Dbus.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, Dbus.o(.text._GLOBAL__sub_I_Dbus.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GLOBAL__sub_I_Dbus.cpp &rArr; __cxx_global_var_init &rArr; BSP::Remote::Dr16::Dr16__sub_object() &rArr; BSP::Remote::Dr16::Vector::zero()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> Dbus.o(.init_array)
</UL>
<P><STRONG><a name="[1ae]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ChassisTask.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.2 &rArr; TaskManager::TaskManager__sub_object() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManager::TaskManager__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_ChassisTask.cpp
</UL>

<P><STRONG><a name="[e5]"></a>_GLOBAL__sub_I_ChassisTask.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ChassisTask.o(.text._GLOBAL__sub_I_ChassisTask.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_ChassisTask.cpp &rArr; __cxx_global_var_init.2 &rArr; TaskManager::TaskManager__sub_object() &rArr; std::__2::vector&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;, std::__2::allocator&lang;std::__2::unique_ptr&lang;Task, std::__2::default_delete&lang;Task&rang;&rang;&rang;&rang;::vector__sub_object[abi:v180000]() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ChassisTask.o(.init_array)
</UL>
<P><STRONG><a name="[1ff]"></a>auto Communicat::Gimbal_to_Chassis::Transmit()::$_0::operator()&lang;Communicat::Gimbal_to_Chassis::Booster&rang;(Communicat::Gimbal_to_Chassis::Booster const&) const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, CommunicationTask.o(.text._ZZN10Communicat17Gimbal_to_Chassis8TransmitEvENK3$_0clINS0_7BoosterEEEDaRKT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = auto Communicat::Gimbal_to_Chassis::Transmit()::$_0::operator()&lang;Communicat::Gimbal_to_Chassis::Booster&rang;(Communicat::Gimbal_to_Chassis::Booster const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Transmit()
</UL>

<P><STRONG><a name="[1af]"></a>__cxx_global_var_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, CommunicationTask.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __cxx_global_var_init &rArr; Communicat::Gimbal_to_Chassis::Gimbal_to_Chassis__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Communicat::Gimbal_to_Chassis::Gimbal_to_Chassis__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_CommunicationTask.cpp
</UL>

<P><STRONG><a name="[e6]"></a>_GLOBAL__sub_I_CommunicationTask.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, CommunicationTask.o(.text._GLOBAL__sub_I_CommunicationTask.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GLOBAL__sub_I_CommunicationTask.cpp &rArr; __cxx_global_var_init &rArr; Communicat::Gimbal_to_Chassis::Gimbal_to_Chassis__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> CommunicationTask.o(.init_array)
</UL>
<P><STRONG><a name="[1b1]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, EvenTask.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.2 &rArr; Dir::Dir__sub_object() &rArr; ISubject::ISubject__sub_object() &rArr; std::__2::list&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::list__sub_object[abi:v180000]() &rArr; std::__2::__list_imp&lang;IObserver*, std::__2::allocator&lang;IObserver*&rang;&rang;::__list_imp__sub_object() &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir::Dir__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_EvenTask.cpp
</UL>

<P><STRONG><a name="[1b2]"></a>__cxx_global_var_init.3</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, EvenTask.o(.text.__cxx_global_var_init.3))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.3 &rArr; std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;LED&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;LED, Dir*&rang;(Dir*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_EvenTask.cpp
</UL>

<P><STRONG><a name="[1b3]"></a>__cxx_global_var_init.4</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, EvenTask.o(.text.__cxx_global_var_init.4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.4 &rArr; std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_EvenTask.cpp
</UL>

<P><STRONG><a name="[e7]"></a>_GLOBAL__sub_I_EvenTask.cpp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, EvenTask.o(.text._GLOBAL__sub_I_EvenTask.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_EvenTask.cpp &rArr; __cxx_global_var_init.4 &rArr; std::__2::__unique_if&lang;Buzzer&rang;::__unique_single std::__2::make_unique[abi:v180000]&lang;Buzzer, Dir*&rang;(Dir*&&) &rArr; operator new(unsigned int) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> EvenTask.o(.init_array)
</UL>
<P><STRONG><a name="[1b4]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, PowerTask.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.2 &rArr; SGPowerControl::PowerTask_t::PowerTask_t__sub_object() &rArr; SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::RLS__sub_object(float, float) &rArr; Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SGPowerControl::PowerTask_t::PowerTask_t__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_PowerTask.cpp
</UL>

<P><STRONG><a name="[e8]"></a>_GLOBAL__sub_I_PowerTask.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, PowerTask.o(.text._GLOBAL__sub_I_PowerTask.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_PowerTask.cpp &rArr; __cxx_global_var_init.2 &rArr; SGPowerControl::PowerTask_t::PowerTask_t__sub_object() &rArr; SGPowerControl::PowerUpData_t::PowerUpData_t__sub_object() &rArr; Math::RLS&lang;2u&rang;::RLS__sub_object(float, float) &rArr; Math::RLS&lang;2u&rang;::reset() &rArr; Matrixf&lang;2, 2&rang;::eye() &rArr; std::__2::__promote&lang;int, int, void&rang;::type std::__2::__math::fmin[abi:v180000]&lang;int, int, 0&rang;(int, int) &rArr; double std::__2::__math::fmin[abi:v180000]&lang;int&rang;(double, double) &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> PowerTask.o(.init_array)
</UL>
<P><STRONG><a name="[502]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[4f7]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ec]"></a>__cxa_end_cleanup_impl</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22__cxa_end_cleanup_implEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxa_end_cleanup_impl
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
</UL>

<P><STRONG><a name="[71]"></a>__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22exception_cleanup_funcE19_Unwind_Reason_CodeP21_Unwind_Control_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*) &rArr; __cxa_decrement_exception_refcount &rArr; __clang_call_terminate &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_exception.cpp.o(.text.__cxa_throw)
</UL>
<P><STRONG><a name="[212]"></a>__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L12failed_throwEPNS_15__cxa_exceptionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*) &rArr; std::__terminate(void (*)()) &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
</UL>

<P><STRONG><a name="[ed]"></a>__cxxabiv1::__cxa_end_cleanup_impl()</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22__cxa_end_cleanup_implEv), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::__cxa_end_cleanup_impl() &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[20b]"></a>__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)</STRONG> (Thumb, 868 bytes, Stack size 88 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L11scan_eh_tabERNS_12_GLOBAL__N_112scan_resultsE14_Unwind_ActionbP21_Unwind_Control_BlockP15_Unwind_Context))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int) &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetRegionStart
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetLanguageSpecificData
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char, unsigned int)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[213]"></a>__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L13set_registersEP21_Unwind_Control_BlockP15_Unwind_ContextRKNS_12_GLOBAL__N_112scan_resultsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&) &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[20d]"></a>__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char, unsigned int)</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L18readEncodedPointerEPPKhhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char, unsigned int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[20e]"></a>__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L14call_terminateEbP21_Unwind_Control_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::call_terminate(bool, _Unwind_Control_Block*) &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[20f]"></a>__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L24exception_spec_can_catchExPKhhPKNS_16__shim_type_infoEPvP21_Unwind_Control_Blockj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*, unsigned int) &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[1ee]"></a>is_equal(std::type_info const*, std::type_info const*, bool)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZL8is_equalPKSt9type_infoS1_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = is_equal(std::type_info const*, std::type_info const*, bool) &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
</UL>

<P><STRONG><a name="[275]"></a>(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)</STRONG> (Thumb, 210 bytes, Stack size 80 bytes, Unwind-EHABI.cpp.o(.text._ZN12_GLOBAL__N_114unwindOneFrameEjP21_Unwind_Control_BlockP15_Unwind_Context))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_step
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr0
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr2
</UL>

<P><STRONG><a name="[1dc]"></a>unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)</STRONG> (Thumb, 166 bytes, Stack size 80 bytes, Unwind-EHABI.cpp.o(.text._ZL13unwind_phase2P13unw_context_tP12unw_cursor_tP21_Unwind_Control_Blockb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_resume
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[1d6]"></a>unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*)</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, Unwind-EHABI.cpp.o(.text._ZL20unwind_phase2_forcedP13unw_context_tP12unw_cursor_tP21_Unwind_Control_BlockPF19_Unwind_Reason_Codei14_Unwind_ActionPhS4_P15_Unwind_ContextPvESA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = unwind_phase2_forced(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, _Unwind_Reason_Code (*)(int, _Unwind_Action, unsigned char*, _Unwind_Control_Block*, _Unwind_Context*, void*), void*) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_resume
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_ForcedUnwind
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>

<P><STRONG><a name="[20a]"></a>(anonymous namespace)::fallback_malloc(unsigned int)</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, fallback_malloc.cpp.o(.text._ZN12_GLOBAL__N_115fallback_mallocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = (anonymous namespace)::fallback_malloc(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>

<P><STRONG><a name="[208]"></a>(anonymous namespace)::fallback_free(void*)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, fallback_malloc.cpp.o(.text._ZN12_GLOBAL__N_113fallback_freeEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = (anonymous namespace)::fallback_free(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
